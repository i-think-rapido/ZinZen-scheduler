<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="966" onload="init(evt)" viewBox="0 0 1200 966" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="966" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="949.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="949.00"> </text><svg id="frames" x="10" width="1180" total_samples="4744"><g><title>perf (7 samples, 0.15%)</title><rect x="0.0000%" y="901" width="0.1476%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="7"/><text x="0.2500%" y="911.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.15%)</title><rect x="0.0000%" y="885" width="0.1476%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="7"/><text x="0.2500%" y="895.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.15%)</title><rect x="0.0000%" y="869" width="0.1476%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="7"/><text x="0.2500%" y="879.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.15%)</title><rect x="0.0000%" y="853" width="0.1476%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="7"/><text x="0.2500%" y="863.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.15%)</title><rect x="0.0000%" y="837" width="0.1476%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="7"/><text x="0.2500%" y="847.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.15%)</title><rect x="0.0000%" y="821" width="0.1476%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="7"/><text x="0.2500%" y="831.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.15%)</title><rect x="0.0000%" y="805" width="0.1476%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="7"/><text x="0.2500%" y="815.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.15%)</title><rect x="0.0000%" y="789" width="0.1476%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="7"/><text x="0.2500%" y="799.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.15%)</title><rect x="0.0000%" y="773" width="0.1476%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="7"/><text x="0.2500%" y="783.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.15%)</title><rect x="0.0000%" y="757" width="0.1476%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="7"/><text x="0.2500%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.15%)</title><rect x="0.0000%" y="741" width="0.1476%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="7"/><text x="0.2500%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.15%)</title><rect x="0.0000%" y="725" width="0.1476%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="7"/><text x="0.2500%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.15%)</title><rect x="0.0000%" y="709" width="0.1476%" height="15" fill="rgb(216,20,37)" fg:x="0" fg:w="7"/><text x="0.2500%" y="719.50"></text></g><g><title>_dl_start (1 samples, 0.02%)</title><rect x="0.1476%" y="869" width="0.0211%" height="15" fill="rgb(206,188,39)" fg:x="7" fg:w="1"/><text x="0.3976%" y="879.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.02%)</title><rect x="0.1476%" y="853" width="0.0211%" height="15" fill="rgb(217,207,13)" fg:x="7" fg:w="1"/><text x="0.3976%" y="863.50"></text></g><g><title>dl_main (1 samples, 0.02%)</title><rect x="0.1476%" y="837" width="0.0211%" height="15" fill="rgb(231,73,38)" fg:x="7" fg:w="1"/><text x="0.3976%" y="847.50"></text></g><g><title>_dl_relocate_object (1 samples, 0.02%)</title><rect x="0.1476%" y="821" width="0.0211%" height="15" fill="rgb(225,20,46)" fg:x="7" fg:w="1"/><text x="0.3976%" y="831.50"></text></g><g><title>_dl_lookup_symbol_x (1 samples, 0.02%)</title><rect x="0.1476%" y="805" width="0.0211%" height="15" fill="rgb(210,31,41)" fg:x="7" fg:w="1"/><text x="0.3976%" y="815.50"></text></g><g><title>do_lookup_x (1 samples, 0.02%)</title><rect x="0.1476%" y="789" width="0.0211%" height="15" fill="rgb(221,200,47)" fg:x="7" fg:w="1"/><text x="0.3976%" y="799.50"></text></g><g><title>time::duration::Duration::days (1 samples, 0.02%)</title><rect x="0.1686%" y="565" width="0.0211%" height="15" fill="rgb(226,26,5)" fg:x="8" fg:w="1"/><text x="0.4186%" y="575.50"></text></g><g><title>core::num::&lt;impl i64&gt;::checked_mul (1 samples, 0.02%)</title><rect x="0.1686%" y="549" width="0.0211%" height="15" fill="rgb(249,33,26)" fg:x="8" fg:w="1"/><text x="0.4186%" y="559.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;[T]&gt;::slice_from_raw_parts (1 samples, 0.02%)</title><rect x="0.1897%" y="373" width="0.0211%" height="15" fill="rgb(235,183,28)" fg:x="9" fg:w="1"/><text x="0.4397%" y="383.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (1 samples, 0.02%)</title><rect x="0.1897%" y="357" width="0.0211%" height="15" fill="rgb(221,5,38)" fg:x="9" fg:w="1"/><text x="0.4397%" y="367.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (1 samples, 0.02%)</title><rect x="0.1897%" y="341" width="0.0211%" height="15" fill="rgb(247,18,42)" fg:x="9" fg:w="1"/><text x="0.4397%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.04%)</title><rect x="0.1897%" y="469" width="0.0422%" height="15" fill="rgb(241,131,45)" fg:x="9" fg:w="2"/><text x="0.4397%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.04%)</title><rect x="0.1897%" y="453" width="0.0422%" height="15" fill="rgb(249,31,29)" fg:x="9" fg:w="2"/><text x="0.4397%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.04%)</title><rect x="0.1897%" y="437" width="0.0422%" height="15" fill="rgb(225,111,53)" fg:x="9" fg:w="2"/><text x="0.4397%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.04%)</title><rect x="0.1897%" y="421" width="0.0422%" height="15" fill="rgb(238,160,17)" fg:x="9" fg:w="2"/><text x="0.4397%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.04%)</title><rect x="0.1897%" y="405" width="0.0422%" height="15" fill="rgb(214,148,48)" fg:x="9" fg:w="2"/><text x="0.4397%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.04%)</title><rect x="0.1897%" y="389" width="0.0422%" height="15" fill="rgb(232,36,49)" fg:x="9" fg:w="2"/><text x="0.4397%" y="399.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new (1 samples, 0.02%)</title><rect x="0.2108%" y="373" width="0.0211%" height="15" fill="rgb(209,103,24)" fg:x="10" fg:w="1"/><text x="0.4608%" y="383.50"></text></g><g><title>scheduler::task::Task::get_slots (3 samples, 0.06%)</title><rect x="0.1897%" y="533" width="0.0632%" height="15" fill="rgb(229,88,8)" fg:x="9" fg:w="3"/><text x="0.4397%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.06%)</title><rect x="0.1897%" y="517" width="0.0632%" height="15" fill="rgb(213,181,19)" fg:x="9" fg:w="3"/><text x="0.4397%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.06%)</title><rect x="0.1897%" y="501" width="0.0632%" height="15" fill="rgb(254,191,54)" fg:x="9" fg:w="3"/><text x="0.4397%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.06%)</title><rect x="0.1897%" y="485" width="0.0632%" height="15" fill="rgb(241,83,37)" fg:x="9" fg:w="3"/><text x="0.4397%" y="495.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.02%)</title><rect x="0.2530%" y="501" width="0.0211%" height="15" fill="rgb(233,36,39)" fg:x="12" fg:w="1"/><text x="0.5030%" y="511.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.02%)</title><rect x="0.2530%" y="485" width="0.0211%" height="15" fill="rgb(226,3,54)" fg:x="12" fg:w="1"/><text x="0.5030%" y="495.50"></text></g><g><title>scheduler::task::Task::start_deadline_iterator (5 samples, 0.11%)</title><rect x="0.1897%" y="549" width="0.1054%" height="15" fill="rgb(245,192,40)" fg:x="9" fg:w="5"/><text x="0.4397%" y="559.50"></text></g><g><title>scheduler::task::StartDeadlineIterator::new (2 samples, 0.04%)</title><rect x="0.2530%" y="533" width="0.0422%" height="15" fill="rgb(238,167,29)" fg:x="12" fg:w="2"/><text x="0.5030%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (2 samples, 0.04%)</title><rect x="0.2530%" y="517" width="0.0422%" height="15" fill="rgb(232,182,51)" fg:x="12" fg:w="2"/><text x="0.5030%" y="527.50"></text></g><g><title>&lt;chrono::naive::date::NaiveDate as core::cmp::PartialOrd&gt;::partial_cmp (1 samples, 0.02%)</title><rect x="0.2951%" y="501" width="0.0211%" height="15" fill="rgb(231,60,39)" fg:x="14" fg:w="1"/><text x="0.5451%" y="511.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i32&gt;::partial_cmp (1 samples, 0.02%)</title><rect x="0.2951%" y="485" width="0.0211%" height="15" fill="rgb(208,69,12)" fg:x="14" fg:w="1"/><text x="0.5451%" y="495.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i32&gt;::cmp (1 samples, 0.02%)</title><rect x="0.2951%" y="469" width="0.0211%" height="15" fill="rgb(235,93,37)" fg:x="14" fg:w="1"/><text x="0.5451%" y="479.50"></text></g><g><title>core::cmp::PartialOrd::lt (3 samples, 0.06%)</title><rect x="0.2951%" y="533" width="0.0632%" height="15" fill="rgb(213,116,39)" fg:x="14" fg:w="3"/><text x="0.5451%" y="543.50"></text></g><g><title>&lt;chrono::naive::datetime::NaiveDateTime as core::cmp::PartialOrd&gt;::partial_cmp (3 samples, 0.06%)</title><rect x="0.2951%" y="517" width="0.0632%" height="15" fill="rgb(222,207,29)" fg:x="14" fg:w="3"/><text x="0.5451%" y="527.50"></text></g><g><title>&lt;chrono::naive::date::NaiveDate as core::cmp::PartialOrd&gt;::partial_cmp (1 samples, 0.02%)</title><rect x="0.3583%" y="501" width="0.0211%" height="15" fill="rgb(206,96,30)" fg:x="17" fg:w="1"/><text x="0.6083%" y="511.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i32&gt;::partial_cmp (1 samples, 0.02%)</title><rect x="0.3583%" y="485" width="0.0211%" height="15" fill="rgb(218,138,4)" fg:x="17" fg:w="1"/><text x="0.6083%" y="495.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i32&gt;::cmp (1 samples, 0.02%)</title><rect x="0.3583%" y="469" width="0.0211%" height="15" fill="rgb(250,191,14)" fg:x="17" fg:w="1"/><text x="0.6083%" y="479.50"></text></g><g><title>core::cmp::PartialOrd::gt (2 samples, 0.04%)</title><rect x="0.3583%" y="533" width="0.0422%" height="15" fill="rgb(239,60,40)" fg:x="17" fg:w="2"/><text x="0.6083%" y="543.50"></text></g><g><title>&lt;chrono::naive::datetime::NaiveDateTime as core::cmp::PartialOrd&gt;::partial_cmp (2 samples, 0.04%)</title><rect x="0.3583%" y="517" width="0.0422%" height="15" fill="rgb(206,27,48)" fg:x="17" fg:w="2"/><text x="0.6083%" y="527.50"></text></g><g><title>core::cmp::PartialOrd::ge (1 samples, 0.02%)</title><rect x="0.4005%" y="533" width="0.0211%" height="15" fill="rgb(225,35,8)" fg:x="19" fg:w="1"/><text x="0.6505%" y="543.50"></text></g><g><title>&lt;chrono::naive::datetime::NaiveDateTime as core::cmp::PartialOrd&gt;::partial_cmp (1 samples, 0.02%)</title><rect x="0.4005%" y="517" width="0.0211%" height="15" fill="rgb(250,213,24)" fg:x="19" fg:w="1"/><text x="0.6505%" y="527.50"></text></g><g><title>&lt;chrono::naive::date::NaiveDate as core::cmp::PartialOrd&gt;::partial_cmp (1 samples, 0.02%)</title><rect x="0.4005%" y="501" width="0.0211%" height="15" fill="rgb(247,123,22)" fg:x="19" fg:w="1"/><text x="0.6505%" y="511.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i32&gt;::partial_cmp (1 samples, 0.02%)</title><rect x="0.4005%" y="485" width="0.0211%" height="15" fill="rgb(231,138,38)" fg:x="19" fg:w="1"/><text x="0.6505%" y="495.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i32&gt;::cmp (1 samples, 0.02%)</title><rect x="0.4005%" y="469" width="0.0211%" height="15" fill="rgb(231,145,46)" fg:x="19" fg:w="1"/><text x="0.6505%" y="479.50"></text></g><g><title>scheduler::slot::Slot::conflicts_with (7 samples, 0.15%)</title><rect x="0.2951%" y="549" width="0.1476%" height="15" fill="rgb(251,118,11)" fg:x="14" fg:w="7"/><text x="0.5451%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;scheduler::slot::Slot&gt;&gt; (1 samples, 0.02%)</title><rect x="0.4427%" y="517" width="0.0211%" height="15" fill="rgb(217,147,25)" fg:x="21" fg:w="1"/><text x="0.6927%" y="527.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="0.4427%" y="501" width="0.0211%" height="15" fill="rgb(247,81,37)" fg:x="21" fg:w="1"/><text x="0.6927%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.02%)</title><rect x="0.4427%" y="485" width="0.0211%" height="15" fill="rgb(209,12,38)" fg:x="21" fg:w="1"/><text x="0.6927%" y="495.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.02%)</title><rect x="0.4427%" y="469" width="0.0211%" height="15" fill="rgb(227,1,9)" fg:x="21" fg:w="1"/><text x="0.6927%" y="479.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (1 samples, 0.02%)</title><rect x="0.4427%" y="453" width="0.0211%" height="15" fill="rgb(248,47,43)" fg:x="21" fg:w="1"/><text x="0.6927%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;scheduler::task::StartDeadlineIterator&gt; (2 samples, 0.04%)</title><rect x="0.4427%" y="549" width="0.0422%" height="15" fill="rgb(221,10,30)" fg:x="21" fg:w="2"/><text x="0.6927%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;scheduler::slot::Slot&gt;&gt; (2 samples, 0.04%)</title><rect x="0.4427%" y="533" width="0.0422%" height="15" fill="rgb(210,229,1)" fg:x="21" fg:w="2"/><text x="0.6927%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="0.4637%" y="517" width="0.0211%" height="15" fill="rgb(222,148,37)" fg:x="22" fg:w="1"/><text x="0.7137%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.02%)</title><rect x="0.4637%" y="501" width="0.0211%" height="15" fill="rgb(234,67,33)" fg:x="22" fg:w="1"/><text x="0.7137%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.02%)</title><rect x="0.4637%" y="485" width="0.0211%" height="15" fill="rgb(247,98,35)" fg:x="22" fg:w="1"/><text x="0.7137%" y="495.50"></text></g><g><title>core::ptr::null_mut (1 samples, 0.02%)</title><rect x="0.4637%" y="469" width="0.0211%" height="15" fill="rgb(247,138,52)" fg:x="22" fg:w="1"/><text x="0.7137%" y="479.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (1 samples, 0.02%)</title><rect x="0.4637%" y="453" width="0.0211%" height="15" fill="rgb(213,79,30)" fg:x="22" fg:w="1"/><text x="0.7137%" y="463.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (4 samples, 0.08%)</title><rect x="0.4848%" y="533" width="0.0843%" height="15" fill="rgb(246,177,23)" fg:x="23" fg:w="4"/><text x="0.7348%" y="543.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (6 samples, 0.13%)</title><rect x="0.4848%" y="549" width="0.1265%" height="15" fill="rgb(230,62,27)" fg:x="23" fg:w="6"/><text x="0.7348%" y="559.50"></text></g><g><title>&lt;time::duration::Duration as core::cmp::PartialOrd&gt;::partial_cmp (1 samples, 0.02%)</title><rect x="0.6113%" y="485" width="0.0211%" height="15" fill="rgb(216,154,8)" fg:x="29" fg:w="1"/><text x="0.8613%" y="495.50"></text></g><g><title>time::duration::Duration::hours (2 samples, 0.04%)</title><rect x="0.6113%" y="533" width="0.0422%" height="15" fill="rgb(244,35,45)" fg:x="29" fg:w="2"/><text x="0.8613%" y="543.50"></text></g><g><title>time::duration::Duration::seconds (2 samples, 0.04%)</title><rect x="0.6113%" y="517" width="0.0422%" height="15" fill="rgb(251,115,12)" fg:x="29" fg:w="2"/><text x="0.8613%" y="527.50"></text></g><g><title>core::cmp::PartialOrd::gt (2 samples, 0.04%)</title><rect x="0.6113%" y="501" width="0.0422%" height="15" fill="rgb(240,54,50)" fg:x="29" fg:w="2"/><text x="0.8613%" y="511.50"></text></g><g><title>time::duration::Duration::seconds (1 samples, 0.02%)</title><rect x="0.6535%" y="469" width="0.0211%" height="15" fill="rgb(233,84,52)" fg:x="31" fg:w="1"/><text x="0.9035%" y="479.50"></text></g><g><title>chrono::naive::time::NaiveTime::overflowing_sub_signed (2 samples, 0.04%)</title><rect x="0.6535%" y="501" width="0.0422%" height="15" fill="rgb(207,117,47)" fg:x="31" fg:w="2"/><text x="0.9035%" y="511.50"></text></g><g><title>chrono::naive::time::NaiveTime::overflowing_add_signed (2 samples, 0.04%)</title><rect x="0.6535%" y="485" width="0.0422%" height="15" fill="rgb(249,43,39)" fg:x="31" fg:w="2"/><text x="0.9035%" y="495.50"></text></g><g><title>&lt;i32 as num_integer::Integer&gt;::div_mod_floor (2 samples, 0.04%)</title><rect x="0.6956%" y="469" width="0.0422%" height="15" fill="rgb(209,38,44)" fg:x="33" fg:w="2"/><text x="0.9456%" y="479.50"></text></g><g><title>&lt;i32 as num_integer::Integer&gt;::div_rem (2 samples, 0.04%)</title><rect x="0.6956%" y="453" width="0.0422%" height="15" fill="rgb(236,212,23)" fg:x="33" fg:w="2"/><text x="0.9456%" y="463.50"></text></g><g><title>num_integer::div_mod_floor (3 samples, 0.06%)</title><rect x="0.6956%" y="485" width="0.0632%" height="15" fill="rgb(242,79,21)" fg:x="33" fg:w="3"/><text x="0.9456%" y="495.50"></text></g><g><title>&lt;chrono::naive::datetime::NaiveDateTime as core::ops::arith::Sub&lt;time::duration::Duration&gt;&gt;::sub (6 samples, 0.13%)</title><rect x="0.6535%" y="533" width="0.1265%" height="15" fill="rgb(211,96,35)" fg:x="31" fg:w="6"/><text x="0.9035%" y="543.50"></text></g><g><title>chrono::naive::datetime::NaiveDateTime::checked_sub_signed (6 samples, 0.13%)</title><rect x="0.6535%" y="517" width="0.1265%" height="15" fill="rgb(253,215,40)" fg:x="31" fg:w="6"/><text x="0.9035%" y="527.50"></text></g><g><title>chrono::naive::date::NaiveDate::checked_sub_signed (4 samples, 0.08%)</title><rect x="0.6956%" y="501" width="0.0843%" height="15" fill="rgb(211,81,21)" fg:x="33" fg:w="4"/><text x="0.9456%" y="511.50"></text></g><g><title>chrono::naive::date::NaiveDate::from_of (1 samples, 0.02%)</title><rect x="0.7589%" y="485" width="0.0211%" height="15" fill="rgb(208,190,38)" fg:x="36" fg:w="1"/><text x="1.0089%" y="495.50"></text></g><g><title>&lt;chrono::naive::datetime::NaiveDateTime as core::ops::arith::AddAssign&lt;time::duration::Duration&gt;&gt;::add_assign (1 samples, 0.02%)</title><rect x="0.7799%" y="533" width="0.0211%" height="15" fill="rgb(235,213,38)" fg:x="37" fg:w="1"/><text x="1.0299%" y="543.50"></text></g><g><title>&lt;chrono::naive::datetime::NaiveDateTime as core::ops::arith::Add&lt;time::duration::Duration&gt;&gt;::add (1 samples, 0.02%)</title><rect x="0.7799%" y="517" width="0.0211%" height="15" fill="rgb(237,122,38)" fg:x="37" fg:w="1"/><text x="1.0299%" y="527.50"></text></g><g><title>chrono::naive::datetime::NaiveDateTime::checked_add_signed (1 samples, 0.02%)</title><rect x="0.7799%" y="501" width="0.0211%" height="15" fill="rgb(244,218,35)" fg:x="37" fg:w="1"/><text x="1.0299%" y="511.50"></text></g><g><title>chrono::naive::date::NaiveDate::checked_add_signed (1 samples, 0.02%)</title><rect x="0.7799%" y="485" width="0.0211%" height="15" fill="rgb(240,68,47)" fg:x="37" fg:w="1"/><text x="1.0299%" y="495.50"></text></g><g><title>core::num::&lt;impl i32&gt;::checked_add (1 samples, 0.02%)</title><rect x="0.7799%" y="469" width="0.0211%" height="15" fill="rgb(210,16,53)" fg:x="37" fg:w="1"/><text x="1.0299%" y="479.50"></text></g><g><title>time::duration::Duration::num_days (1 samples, 0.02%)</title><rect x="0.8010%" y="485" width="0.0211%" height="15" fill="rgb(235,124,12)" fg:x="38" fg:w="1"/><text x="1.0510%" y="495.50"></text></g><g><title>time::duration::Duration::num_seconds (1 samples, 0.02%)</title><rect x="0.8010%" y="469" width="0.0211%" height="15" fill="rgb(224,169,11)" fg:x="38" fg:w="1"/><text x="1.0510%" y="479.50"></text></g><g><title>&lt;scheduler::task::StartDeadlineIterator as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.23%)</title><rect x="0.6113%" y="549" width="0.2319%" height="15" fill="rgb(250,166,2)" fg:x="29" fg:w="11"/><text x="0.8613%" y="559.50"></text></g><g><title>&lt;chrono::naive::datetime::NaiveDateTime as core::ops::arith::Add&lt;time::duration::Duration&gt;&gt;::add (2 samples, 0.04%)</title><rect x="0.8010%" y="533" width="0.0422%" height="15" fill="rgb(242,216,29)" fg:x="38" fg:w="2"/><text x="1.0510%" y="543.50"></text></g><g><title>chrono::naive::datetime::NaiveDateTime::checked_add_signed (2 samples, 0.04%)</title><rect x="0.8010%" y="517" width="0.0422%" height="15" fill="rgb(230,116,27)" fg:x="38" fg:w="2"/><text x="1.0510%" y="527.50"></text></g><g><title>chrono::naive::date::NaiveDate::checked_add_signed (2 samples, 0.04%)</title><rect x="0.8010%" y="501" width="0.0422%" height="15" fill="rgb(228,99,48)" fg:x="38" fg:w="2"/><text x="1.0510%" y="511.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (2 samples, 0.04%)</title><rect x="0.8432%" y="533" width="0.0422%" height="15" fill="rgb(253,11,6)" fg:x="40" fg:w="2"/><text x="1.0932%" y="543.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.02%)</title><rect x="0.8853%" y="533" width="0.0211%" height="15" fill="rgb(247,143,39)" fg:x="42" fg:w="1"/><text x="1.1353%" y="543.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.02%)</title><rect x="0.8853%" y="517" width="0.0211%" height="15" fill="rgb(236,97,10)" fg:x="42" fg:w="1"/><text x="1.1353%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (3 samples, 0.06%)</title><rect x="0.9064%" y="533" width="0.0632%" height="15" fill="rgb(233,208,19)" fg:x="43" fg:w="3"/><text x="1.1564%" y="543.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (3 samples, 0.06%)</title><rect x="0.9064%" y="517" width="0.0632%" height="15" fill="rgb(216,164,2)" fg:x="43" fg:w="3"/><text x="1.1564%" y="527.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.17%)</title><rect x="0.8432%" y="549" width="0.1686%" height="15" fill="rgb(220,129,5)" fg:x="40" fg:w="8"/><text x="1.0932%" y="559.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (3 samples, 0.06%)</title><rect x="1.0118%" y="517" width="0.0632%" height="15" fill="rgb(242,17,10)" fg:x="48" fg:w="3"/><text x="1.2618%" y="527.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (6 samples, 0.13%)</title><rect x="1.0118%" y="533" width="0.1265%" height="15" fill="rgb(242,107,0)" fg:x="48" fg:w="6"/><text x="1.2618%" y="543.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (2 samples, 0.04%)</title><rect x="1.1383%" y="485" width="0.0422%" height="15" fill="rgb(251,28,31)" fg:x="54" fg:w="2"/><text x="1.3883%" y="495.50"></text></g><g><title>core::ptr::slice_from_raw_parts (5 samples, 0.11%)</title><rect x="1.1383%" y="501" width="0.1054%" height="15" fill="rgb(233,223,10)" fg:x="54" fg:w="5"/><text x="1.3883%" y="511.50"></text></g><g><title>core::slice::raw::from_raw_parts (7 samples, 0.15%)</title><rect x="1.1383%" y="517" width="0.1476%" height="15" fill="rgb(215,21,27)" fg:x="54" fg:w="7"/><text x="1.3883%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (15 samples, 0.32%)</title><rect x="1.2858%" y="485" width="0.3162%" height="15" fill="rgb(232,23,21)" fg:x="61" fg:w="15"/><text x="1.5358%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (18 samples, 0.38%)</title><rect x="1.2858%" y="501" width="0.3794%" height="15" fill="rgb(244,5,23)" fg:x="61" fg:w="18"/><text x="1.5358%" y="511.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.02%)</title><rect x="1.6653%" y="469" width="0.0211%" height="15" fill="rgb(226,81,46)" fg:x="79" fg:w="1"/><text x="1.9153%" y="479.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (2 samples, 0.04%)</title><rect x="1.6653%" y="485" width="0.0422%" height="15" fill="rgb(247,70,30)" fg:x="79" fg:w="2"/><text x="1.9153%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (3 samples, 0.06%)</title><rect x="1.6653%" y="501" width="0.0632%" height="15" fill="rgb(212,68,19)" fg:x="79" fg:w="3"/><text x="1.9153%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (23 samples, 0.48%)</title><rect x="1.2858%" y="517" width="0.4848%" height="15" fill="rgb(240,187,13)" fg:x="61" fg:w="23"/><text x="1.5358%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (32 samples, 0.67%)</title><rect x="1.1383%" y="533" width="0.6745%" height="15" fill="rgb(223,113,26)" fg:x="54" fg:w="32"/><text x="1.3883%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (43 samples, 0.91%)</title><rect x="1.0118%" y="549" width="0.9064%" height="15" fill="rgb(206,192,2)" fg:x="48" fg:w="43"/><text x="1.2618%" y="559.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="1.9182%" y="453" width="0.0211%" height="15" fill="rgb(241,108,4)" fg:x="91" fg:w="1"/><text x="2.1682%" y="463.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="1.9182%" y="437" width="0.0211%" height="15" fill="rgb(247,173,49)" fg:x="91" fg:w="1"/><text x="2.1682%" y="447.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="1.9182%" y="421" width="0.0211%" height="15" fill="rgb(224,114,35)" fg:x="91" fg:w="1"/><text x="2.1682%" y="431.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="1.9182%" y="405" width="0.0211%" height="15" fill="rgb(245,159,27)" fg:x="91" fg:w="1"/><text x="2.1682%" y="415.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="1.9182%" y="389" width="0.0211%" height="15" fill="rgb(245,172,44)" fg:x="91" fg:w="1"/><text x="2.1682%" y="399.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="1.9182%" y="373" width="0.0211%" height="15" fill="rgb(236,23,11)" fg:x="91" fg:w="1"/><text x="2.1682%" y="383.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="1.9182%" y="357" width="0.0211%" height="15" fill="rgb(205,117,38)" fg:x="91" fg:w="1"/><text x="2.1682%" y="367.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="1.9182%" y="341" width="0.0211%" height="15" fill="rgb(237,72,25)" fg:x="91" fg:w="1"/><text x="2.1682%" y="351.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="1.9182%" y="325" width="0.0211%" height="15" fill="rgb(244,70,9)" fg:x="91" fg:w="1"/><text x="2.1682%" y="335.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="1.9182%" y="309" width="0.0211%" height="15" fill="rgb(217,125,39)" fg:x="91" fg:w="1"/><text x="2.1682%" y="319.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="1.9182%" y="293" width="0.0211%" height="15" fill="rgb(235,36,10)" fg:x="91" fg:w="1"/><text x="2.1682%" y="303.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="1.9182%" y="277" width="0.0211%" height="15" fill="rgb(251,123,47)" fg:x="91" fg:w="1"/><text x="2.1682%" y="287.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="1.9182%" y="261" width="0.0211%" height="15" fill="rgb(221,13,13)" fg:x="91" fg:w="1"/><text x="2.1682%" y="271.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.04%)</title><rect x="1.9182%" y="485" width="0.0422%" height="15" fill="rgb(238,131,9)" fg:x="91" fg:w="2"/><text x="2.1682%" y="495.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.04%)</title><rect x="1.9182%" y="469" width="0.0422%" height="15" fill="rgb(211,50,8)" fg:x="91" fg:w="2"/><text x="2.1682%" y="479.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (3 samples, 0.06%)</title><rect x="1.9182%" y="501" width="0.0632%" height="15" fill="rgb(245,182,24)" fg:x="91" fg:w="3"/><text x="2.1682%" y="511.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (4 samples, 0.08%)</title><rect x="1.9182%" y="517" width="0.0843%" height="15" fill="rgb(242,14,37)" fg:x="91" fg:w="4"/><text x="2.1682%" y="527.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (5 samples, 0.11%)</title><rect x="1.9182%" y="533" width="0.1054%" height="15" fill="rgb(246,228,12)" fg:x="91" fg:w="5"/><text x="2.1682%" y="543.50"></text></g><g><title>core::ptr::null_mut (2 samples, 0.04%)</title><rect x="2.0236%" y="469" width="0.0422%" height="15" fill="rgb(213,55,15)" fg:x="96" fg:w="2"/><text x="2.2736%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (5 samples, 0.11%)</title><rect x="2.0658%" y="469" width="0.1054%" height="15" fill="rgb(209,9,3)" fg:x="98" fg:w="5"/><text x="2.3158%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (8 samples, 0.17%)</title><rect x="2.0236%" y="485" width="0.1686%" height="15" fill="rgb(230,59,30)" fg:x="96" fg:w="8"/><text x="2.2736%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (2 samples, 0.04%)</title><rect x="2.1922%" y="485" width="0.0422%" height="15" fill="rgb(209,121,21)" fg:x="104" fg:w="2"/><text x="2.4422%" y="495.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (2 samples, 0.04%)</title><rect x="2.1922%" y="469" width="0.0422%" height="15" fill="rgb(220,109,13)" fg:x="104" fg:w="2"/><text x="2.4422%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (12 samples, 0.25%)</title><rect x="2.0236%" y="501" width="0.2530%" height="15" fill="rgb(232,18,1)" fg:x="96" fg:w="12"/><text x="2.2736%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (18 samples, 0.38%)</title><rect x="2.0236%" y="517" width="0.3794%" height="15" fill="rgb(215,41,42)" fg:x="96" fg:w="18"/><text x="2.2736%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::ops::index::Index&lt;core::ops::range::RangeFull&gt;&gt;::index (20 samples, 0.42%)</title><rect x="2.0236%" y="533" width="0.4216%" height="15" fill="rgb(224,123,36)" fg:x="96" fg:w="20"/><text x="2.2736%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (28 samples, 0.59%)</title><rect x="1.9182%" y="549" width="0.5902%" height="15" fill="rgb(240,125,3)" fg:x="91" fg:w="28"/><text x="2.1682%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (2 samples, 0.04%)</title><rect x="2.5084%" y="485" width="0.0422%" height="15" fill="rgb(205,98,50)" fg:x="119" fg:w="2"/><text x="2.7584%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (3 samples, 0.06%)</title><rect x="2.5084%" y="501" width="0.0632%" height="15" fill="rgb(205,185,37)" fg:x="119" fg:w="3"/><text x="2.7584%" y="511.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (5 samples, 0.11%)</title><rect x="2.5084%" y="533" width="0.1054%" height="15" fill="rgb(238,207,15)" fg:x="119" fg:w="5"/><text x="2.7584%" y="543.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (5 samples, 0.11%)</title><rect x="2.5084%" y="517" width="0.1054%" height="15" fill="rgb(213,199,42)" fg:x="119" fg:w="5"/><text x="2.7584%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.02%)</title><rect x="2.6138%" y="485" width="0.0211%" height="15" fill="rgb(235,201,11)" fg:x="124" fg:w="1"/><text x="2.8638%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (2 samples, 0.04%)</title><rect x="2.6138%" y="501" width="0.0422%" height="15" fill="rgb(207,46,11)" fg:x="124" fg:w="2"/><text x="2.8638%" y="511.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (8 samples, 0.17%)</title><rect x="2.5084%" y="549" width="0.1686%" height="15" fill="rgb(241,35,35)" fg:x="119" fg:w="8"/><text x="2.7584%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.06%)</title><rect x="2.6138%" y="533" width="0.0632%" height="15" fill="rgb(243,32,47)" fg:x="124" fg:w="3"/><text x="2.8638%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (3 samples, 0.06%)</title><rect x="2.6138%" y="517" width="0.0632%" height="15" fill="rgb(247,202,23)" fg:x="124" fg:w="3"/><text x="2.8638%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.02%)</title><rect x="2.6560%" y="501" width="0.0211%" height="15" fill="rgb(219,102,11)" fg:x="126" fg:w="1"/><text x="2.9060%" y="511.50"></text></g><g><title>scheduler::task_placer::can_schedule (129 samples, 2.72%)</title><rect x="0.1897%" y="565" width="2.7192%" height="15" fill="rgb(243,110,44)" fg:x="9" fg:w="129"/><text x="0.4397%" y="575.50">sc..</text></g><g><title>time::duration::Duration::num_seconds (6 samples, 0.13%)</title><rect x="2.9089%" y="501" width="0.1265%" height="15" fill="rgb(222,74,54)" fg:x="138" fg:w="6"/><text x="3.1589%" y="511.50"></text></g><g><title>time::duration::Duration::num_hours (18 samples, 0.38%)</title><rect x="2.9089%" y="517" width="0.3794%" height="15" fill="rgb(216,99,12)" fg:x="138" fg:w="18"/><text x="3.1589%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (18 samples, 0.38%)</title><rect x="3.2884%" y="405" width="0.3794%" height="15" fill="rgb(226,22,26)" fg:x="156" fg:w="18"/><text x="3.5384%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i64&gt;::partial_cmp (39 samples, 0.82%)</title><rect x="3.2884%" y="421" width="0.8221%" height="15" fill="rgb(217,163,10)" fg:x="156" fg:w="39"/><text x="3.5384%" y="431.50"></text></g><g><title>&lt;time::duration::Duration as core::cmp::PartialOrd&gt;::partial_cmp (55 samples, 1.16%)</title><rect x="3.2884%" y="437" width="1.1594%" height="15" fill="rgb(213,25,53)" fg:x="156" fg:w="55"/><text x="3.5384%" y="447.50"></text></g><g><title>core::cmp::PartialOrd::lt (76 samples, 1.60%)</title><rect x="3.2884%" y="453" width="1.6020%" height="15" fill="rgb(252,105,26)" fg:x="156" fg:w="76"/><text x="3.5384%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (4 samples, 0.08%)</title><rect x="4.8904%" y="405" width="0.0843%" height="15" fill="rgb(220,39,43)" fg:x="232" fg:w="4"/><text x="5.1404%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i64&gt;::partial_cmp (5 samples, 0.11%)</title><rect x="4.8904%" y="421" width="0.1054%" height="15" fill="rgb(229,68,48)" fg:x="232" fg:w="5"/><text x="5.1404%" y="431.50"></text></g><g><title>&lt;time::duration::Duration as core::cmp::PartialOrd&gt;::partial_cmp (17 samples, 0.36%)</title><rect x="4.8904%" y="437" width="0.3583%" height="15" fill="rgb(252,8,32)" fg:x="232" fg:w="17"/><text x="5.1404%" y="447.50"></text></g><g><title>core::cmp::PartialOrd::gt (39 samples, 0.82%)</title><rect x="4.8904%" y="453" width="0.8221%" height="15" fill="rgb(223,20,43)" fg:x="232" fg:w="39"/><text x="5.1404%" y="463.50"></text></g><g><title>time::duration::Duration::seconds (144 samples, 3.04%)</title><rect x="3.2884%" y="469" width="3.0354%" height="15" fill="rgb(229,81,49)" fg:x="156" fg:w="144"/><text x="3.5384%" y="479.50">tim..</text></g><g><title>time::duration::mod_floor_64 (24 samples, 0.51%)</title><rect x="6.3238%" y="437" width="0.5059%" height="15" fill="rgb(236,28,36)" fg:x="300" fg:w="24"/><text x="6.5738%" y="447.50"></text></g><g><title>time::duration::div_rem_64 (29 samples, 0.61%)</title><rect x="6.8297%" y="421" width="0.6113%" height="15" fill="rgb(249,185,26)" fg:x="324" fg:w="29"/><text x="7.0797%" y="431.50"></text></g><g><title>time::duration::div_floor_64 (58 samples, 1.22%)</title><rect x="6.8297%" y="437" width="1.2226%" height="15" fill="rgb(249,174,33)" fg:x="324" fg:w="58"/><text x="7.0797%" y="447.50"></text></g><g><title>time::duration::div_mod_floor_64 (95 samples, 2.00%)</title><rect x="6.3238%" y="453" width="2.0025%" height="15" fill="rgb(233,201,37)" fg:x="300" fg:w="95"/><text x="6.5738%" y="463.50">t..</text></g><g><title>time::duration::Duration::nanoseconds (100 samples, 2.11%)</title><rect x="6.3238%" y="469" width="2.1079%" height="15" fill="rgb(221,78,26)" fg:x="300" fg:w="100"/><text x="6.5738%" y="479.50">t..</text></g><g><title>core::convert::num::&lt;impl core::convert::From&lt;u32&gt; for i64&gt;::from (8 samples, 0.17%)</title><rect x="8.4317%" y="469" width="0.1686%" height="15" fill="rgb(250,127,30)" fg:x="400" fg:w="8"/><text x="8.6817%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u32&gt;::cmp (16 samples, 0.34%)</title><rect x="8.6003%" y="469" width="0.3373%" height="15" fill="rgb(230,49,44)" fg:x="408" fg:w="16"/><text x="8.8503%" y="479.50"></text></g><g><title>&lt;time::duration::Duration as core::ops::arith::Add&gt;::add (26 samples, 0.55%)</title><rect x="8.9376%" y="469" width="0.5481%" height="15" fill="rgb(229,67,23)" fg:x="424" fg:w="26"/><text x="9.1876%" y="479.50"></text></g><g><title>chrono::naive::time::NaiveTime::signed_duration_since (340 samples, 7.17%)</title><rect x="3.2884%" y="485" width="7.1669%" height="15" fill="rgb(249,83,47)" fg:x="156" fg:w="340"/><text x="3.5384%" y="495.50">chrono::na..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (25 samples, 0.53%)</title><rect x="10.4553%" y="389" width="0.5270%" height="15" fill="rgb(215,43,3)" fg:x="496" fg:w="25"/><text x="10.7053%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i64&gt;::partial_cmp (34 samples, 0.72%)</title><rect x="10.4553%" y="405" width="0.7167%" height="15" fill="rgb(238,154,13)" fg:x="496" fg:w="34"/><text x="10.7053%" y="415.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="11.1720%" y="357" width="0.0211%" height="15" fill="rgb(219,56,2)" fg:x="530" fg:w="1"/><text x="11.4220%" y="367.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="11.1720%" y="341" width="0.0211%" height="15" fill="rgb(233,0,4)" fg:x="530" fg:w="1"/><text x="11.4220%" y="351.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="11.1720%" y="325" width="0.0211%" height="15" fill="rgb(235,30,7)" fg:x="530" fg:w="1"/><text x="11.4220%" y="335.50"></text></g><g><title>ieee80211_tasklet_handler (1 samples, 0.02%)</title><rect x="11.1720%" y="309" width="0.0211%" height="15" fill="rgb(250,79,13)" fg:x="530" fg:w="1"/><text x="11.4220%" y="319.50"></text></g><g><title>ieee80211_rx_napi (1 samples, 0.02%)</title><rect x="11.1720%" y="293" width="0.0211%" height="15" fill="rgb(211,146,34)" fg:x="530" fg:w="1"/><text x="11.4220%" y="303.50"></text></g><g><title>ieee80211_prepare_and_rx_handle (1 samples, 0.02%)</title><rect x="11.1720%" y="277" width="0.0211%" height="15" fill="rgb(228,22,38)" fg:x="530" fg:w="1"/><text x="11.4220%" y="287.50"></text></g><g><title>ieee80211_invoke_rx_handlers (1 samples, 0.02%)</title><rect x="11.1720%" y="261" width="0.0211%" height="15" fill="rgb(235,168,5)" fg:x="530" fg:w="1"/><text x="11.4220%" y="271.50"></text></g><g><title>ieee80211_rx_handlers (1 samples, 0.02%)</title><rect x="11.1720%" y="245" width="0.0211%" height="15" fill="rgb(221,155,16)" fg:x="530" fg:w="1"/><text x="11.4220%" y="255.50"></text></g><g><title>ieee80211_queue_work (1 samples, 0.02%)</title><rect x="11.1720%" y="229" width="0.0211%" height="15" fill="rgb(215,215,53)" fg:x="530" fg:w="1"/><text x="11.4220%" y="239.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="11.1720%" y="213" width="0.0211%" height="15" fill="rgb(223,4,10)" fg:x="530" fg:w="1"/><text x="11.4220%" y="223.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="11.1720%" y="197" width="0.0211%" height="15" fill="rgb(234,103,6)" fg:x="530" fg:w="1"/><text x="11.4220%" y="207.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="11.1720%" y="181" width="0.0211%" height="15" fill="rgb(227,97,0)" fg:x="530" fg:w="1"/><text x="11.4220%" y="191.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="11.1720%" y="165" width="0.0211%" height="15" fill="rgb(234,150,53)" fg:x="530" fg:w="1"/><text x="11.4220%" y="175.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="11.1720%" y="149" width="0.0211%" height="15" fill="rgb(228,201,54)" fg:x="530" fg:w="1"/><text x="11.4220%" y="159.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="11.1720%" y="133" width="0.0211%" height="15" fill="rgb(222,22,37)" fg:x="530" fg:w="1"/><text x="11.4220%" y="143.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="11.1720%" y="117" width="0.0211%" height="15" fill="rgb(237,53,32)" fg:x="530" fg:w="1"/><text x="11.4220%" y="127.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="11.1720%" y="101" width="0.0211%" height="15" fill="rgb(233,25,53)" fg:x="530" fg:w="1"/><text x="11.4220%" y="111.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="11.1720%" y="85" width="0.0211%" height="15" fill="rgb(210,40,34)" fg:x="530" fg:w="1"/><text x="11.4220%" y="95.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="11.1720%" y="69" width="0.0211%" height="15" fill="rgb(241,220,44)" fg:x="530" fg:w="1"/><text x="11.4220%" y="79.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="11.1720%" y="53" width="0.0211%" height="15" fill="rgb(235,28,35)" fg:x="530" fg:w="1"/><text x="11.4220%" y="63.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.04%)</title><rect x="11.1720%" y="405" width="0.0422%" height="15" fill="rgb(210,56,17)" fg:x="530" fg:w="2"/><text x="11.4220%" y="415.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.04%)</title><rect x="11.1720%" y="389" width="0.0422%" height="15" fill="rgb(224,130,29)" fg:x="530" fg:w="2"/><text x="11.4220%" y="399.50"></text></g><g><title>[[kernel.kallsyms]] (2 samples, 0.04%)</title><rect x="11.1720%" y="373" width="0.0422%" height="15" fill="rgb(235,212,8)" fg:x="530" fg:w="2"/><text x="11.4220%" y="383.50"></text></g><g><title>&lt;time::duration::Duration as core::cmp::PartialOrd&gt;::partial_cmp (55 samples, 1.16%)</title><rect x="10.4553%" y="421" width="1.1594%" height="15" fill="rgb(223,33,50)" fg:x="496" fg:w="55"/><text x="10.7053%" y="431.50"></text></g><g><title>core::cmp::PartialOrd::lt (83 samples, 1.75%)</title><rect x="10.4553%" y="437" width="1.7496%" height="15" fill="rgb(219,149,13)" fg:x="496" fg:w="83"/><text x="10.7053%" y="447.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="12.2049%" y="421" width="0.0211%" height="15" fill="rgb(250,156,29)" fg:x="579" fg:w="1"/><text x="12.4549%" y="431.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="12.2049%" y="405" width="0.0211%" height="15" fill="rgb(216,193,19)" fg:x="579" fg:w="1"/><text x="12.4549%" y="415.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="12.2049%" y="389" width="0.0211%" height="15" fill="rgb(216,135,14)" fg:x="579" fg:w="1"/><text x="12.4549%" y="399.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="12.2049%" y="373" width="0.0211%" height="15" fill="rgb(241,47,5)" fg:x="579" fg:w="1"/><text x="12.4549%" y="383.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="12.2049%" y="357" width="0.0211%" height="15" fill="rgb(233,42,35)" fg:x="579" fg:w="1"/><text x="12.4549%" y="367.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="12.2049%" y="341" width="0.0211%" height="15" fill="rgb(231,13,6)" fg:x="579" fg:w="1"/><text x="12.4549%" y="351.50"></text></g><g><title>amdgpu_irq_handler (1 samples, 0.02%)</title><rect x="12.2049%" y="325" width="0.0211%" height="15" fill="rgb(207,181,40)" fg:x="579" fg:w="1"/><text x="12.4549%" y="335.50"></text></g><g><title>amdgpu_ih_process (1 samples, 0.02%)</title><rect x="12.2049%" y="309" width="0.0211%" height="15" fill="rgb(254,173,49)" fg:x="579" fg:w="1"/><text x="12.4549%" y="319.50"></text></g><g><title>amdgpu_irq_dispatch (1 samples, 0.02%)</title><rect x="12.2049%" y="293" width="0.0211%" height="15" fill="rgb(221,1,38)" fg:x="579" fg:w="1"/><text x="12.4549%" y="303.50"></text></g><g><title>amdgpu_dm_irq_handler (1 samples, 0.02%)</title><rect x="12.2049%" y="277" width="0.0211%" height="15" fill="rgb(206,124,46)" fg:x="579" fg:w="1"/><text x="12.4549%" y="287.50"></text></g><g><title>dm_crtc_high_irq (1 samples, 0.02%)</title><rect x="12.2049%" y="261" width="0.0211%" height="15" fill="rgb(249,21,11)" fg:x="579" fg:w="1"/><text x="12.4549%" y="271.50"></text></g><g><title>drm_crtc_handle_vblank (1 samples, 0.02%)</title><rect x="12.2049%" y="245" width="0.0211%" height="15" fill="rgb(222,201,40)" fg:x="579" fg:w="1"/><text x="12.4549%" y="255.50"></text></g><g><title>drm_handle_vblank (1 samples, 0.02%)</title><rect x="12.2049%" y="229" width="0.0211%" height="15" fill="rgb(235,61,29)" fg:x="579" fg:w="1"/><text x="12.4549%" y="239.50"></text></g><g><title>drm_update_vblank_count (1 samples, 0.02%)</title><rect x="12.2049%" y="213" width="0.0211%" height="15" fill="rgb(219,207,3)" fg:x="579" fg:w="1"/><text x="12.4549%" y="223.50"></text></g><g><title>drm_get_last_vbltimestamp (1 samples, 0.02%)</title><rect x="12.2049%" y="197" width="0.0211%" height="15" fill="rgb(222,56,46)" fg:x="579" fg:w="1"/><text x="12.4549%" y="207.50"></text></g><g><title>drm_calc_vbltimestamp_from_scanoutpos (1 samples, 0.02%)</title><rect x="12.2049%" y="181" width="0.0211%" height="15" fill="rgb(239,76,54)" fg:x="579" fg:w="1"/><text x="12.4549%" y="191.50"></text></g><g><title>amdgpu_get_crtc_scanout_position (1 samples, 0.02%)</title><rect x="12.2049%" y="165" width="0.0211%" height="15" fill="rgb(231,124,27)" fg:x="579" fg:w="1"/><text x="12.4549%" y="175.50"></text></g><g><title>amdgpu_display_get_crtc_scanoutpos (1 samples, 0.02%)</title><rect x="12.2049%" y="149" width="0.0211%" height="15" fill="rgb(249,195,6)" fg:x="579" fg:w="1"/><text x="12.4549%" y="159.50"></text></g><g><title>dm_crtc_get_scanoutpos (1 samples, 0.02%)</title><rect x="12.2049%" y="133" width="0.0211%" height="15" fill="rgb(237,174,47)" fg:x="579" fg:w="1"/><text x="12.4549%" y="143.50"></text></g><g><title>dc_stream_get_scanoutpos (1 samples, 0.02%)</title><rect x="12.2049%" y="117" width="0.0211%" height="15" fill="rgb(206,201,31)" fg:x="579" fg:w="1"/><text x="12.4549%" y="127.50"></text></g><g><title>dce110_timing_generator_get_crtc_scanoutpos (1 samples, 0.02%)</title><rect x="12.2049%" y="101" width="0.0211%" height="15" fill="rgb(231,57,52)" fg:x="579" fg:w="1"/><text x="12.4549%" y="111.50"></text></g><g><title>dce110_timing_generator_get_position (1 samples, 0.02%)</title><rect x="12.2049%" y="85" width="0.0211%" height="15" fill="rgb(248,177,22)" fg:x="579" fg:w="1"/><text x="12.4549%" y="95.50"></text></g><g><title>dm_read_reg_func (1 samples, 0.02%)</title><rect x="12.2049%" y="69" width="0.0211%" height="15" fill="rgb(215,211,37)" fg:x="579" fg:w="1"/><text x="12.4549%" y="79.50"></text></g><g><title>amdgpu_cgs_read_register (1 samples, 0.02%)</title><rect x="12.2049%" y="53" width="0.0211%" height="15" fill="rgb(241,128,51)" fg:x="579" fg:w="1"/><text x="12.4549%" y="63.50"></text></g><g><title>amdgpu_mm_rreg (1 samples, 0.02%)</title><rect x="12.2049%" y="37" width="0.0211%" height="15" fill="rgb(227,165,31)" fg:x="579" fg:w="1"/><text x="12.4549%" y="47.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (10 samples, 0.21%)</title><rect x="12.2260%" y="389" width="0.2108%" height="15" fill="rgb(228,167,24)" fg:x="580" fg:w="10"/><text x="12.4760%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i64&gt;::partial_cmp (15 samples, 0.32%)</title><rect x="12.2260%" y="405" width="0.3162%" height="15" fill="rgb(228,143,12)" fg:x="580" fg:w="15"/><text x="12.4760%" y="415.50"></text></g><g><title>&lt;time::duration::Duration as core::cmp::PartialOrd&gt;::partial_cmp (29 samples, 0.61%)</title><rect x="12.2260%" y="421" width="0.6113%" height="15" fill="rgb(249,149,8)" fg:x="580" fg:w="29"/><text x="12.4760%" y="431.50"></text></g><g><title>core::cmp::PartialOrd::gt (46 samples, 0.97%)</title><rect x="12.2049%" y="437" width="0.9696%" height="15" fill="rgb(243,35,44)" fg:x="579" fg:w="46"/><text x="12.4549%" y="447.50"></text></g><g><title>time::duration::Duration::seconds (159 samples, 3.35%)</title><rect x="10.4553%" y="453" width="3.3516%" height="15" fill="rgb(246,89,9)" fg:x="496" fg:w="159"/><text x="10.7053%" y="463.50">tim..</text></g><g><title>core::option::Option&lt;T&gt;::expect (14 samples, 0.30%)</title><rect x="13.8069%" y="453" width="0.2951%" height="15" fill="rgb(233,213,13)" fg:x="655" fg:w="14"/><text x="14.0569%" y="463.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="14.1020%" y="421" width="0.0211%" height="15" fill="rgb(233,141,41)" fg:x="669" fg:w="1"/><text x="14.3520%" y="431.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="14.1020%" y="405" width="0.0211%" height="15" fill="rgb(239,167,4)" fg:x="669" fg:w="1"/><text x="14.3520%" y="415.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="14.1020%" y="389" width="0.0211%" height="15" fill="rgb(209,217,16)" fg:x="669" fg:w="1"/><text x="14.3520%" y="399.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="14.1020%" y="373" width="0.0211%" height="15" fill="rgb(219,88,35)" fg:x="669" fg:w="1"/><text x="14.3520%" y="383.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="14.1020%" y="357" width="0.0211%" height="15" fill="rgb(220,193,23)" fg:x="669" fg:w="1"/><text x="14.3520%" y="367.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="14.1020%" y="341" width="0.0211%" height="15" fill="rgb(230,90,52)" fg:x="669" fg:w="1"/><text x="14.3520%" y="351.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="14.1020%" y="325" width="0.0211%" height="15" fill="rgb(252,106,19)" fg:x="669" fg:w="1"/><text x="14.3520%" y="335.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="14.1020%" y="309" width="0.0211%" height="15" fill="rgb(206,74,20)" fg:x="669" fg:w="1"/><text x="14.3520%" y="319.50"></text></g><g><title>core::num::&lt;impl i64&gt;::overflowing_mul (14 samples, 0.30%)</title><rect x="14.1020%" y="437" width="0.2951%" height="15" fill="rgb(230,138,44)" fg:x="669" fg:w="14"/><text x="14.3520%" y="447.50"></text></g><g><title>core::num::&lt;impl i64&gt;::checked_mul (45 samples, 0.95%)</title><rect x="14.1020%" y="453" width="0.9486%" height="15" fill="rgb(235,182,43)" fg:x="669" fg:w="45"/><text x="14.3520%" y="463.50"></text></g><g><title>time::duration::Duration::days (227 samples, 4.78%)</title><rect x="10.4553%" y="469" width="4.7850%" height="15" fill="rgb(242,16,51)" fg:x="496" fg:w="227"/><text x="10.7053%" y="479.50">time::..</text></g><g><title>&lt;i32 as num_integer::Integer&gt;::div_rem (93 samples, 1.96%)</title><rect x="15.2403%" y="437" width="1.9604%" height="15" fill="rgb(248,9,4)" fg:x="723" fg:w="93"/><text x="15.4903%" y="447.50">&lt;..</text></g><g><title>&lt;i32 as num_integer::Integer&gt;::div_mod_floor (142 samples, 2.99%)</title><rect x="15.2403%" y="453" width="2.9933%" height="15" fill="rgb(210,31,22)" fg:x="723" fg:w="142"/><text x="15.4903%" y="463.50">&lt;i3..</text></g><g><title>num_integer::div_mod_floor (174 samples, 3.67%)</title><rect x="15.2403%" y="469" width="3.6678%" height="15" fill="rgb(239,54,39)" fg:x="723" fg:w="174"/><text x="15.4903%" y="479.50">num_..</text></g><g><title>core::convert::num::&lt;impl core::convert::From&lt;u32&gt; for i64&gt;::from (6 samples, 0.13%)</title><rect x="18.9081%" y="469" width="0.1265%" height="15" fill="rgb(230,99,41)" fg:x="897" fg:w="6"/><text x="19.1581%" y="479.50"></text></g><g><title>core::convert::num::&lt;impl core::convert::From&lt;i32&gt; for i64&gt;::from (3 samples, 0.06%)</title><rect x="19.0346%" y="469" width="0.0632%" height="15" fill="rgb(253,106,12)" fg:x="903" fg:w="3"/><text x="19.2846%" y="479.50"></text></g><g><title>core::convert::num::&lt;impl core::convert::From&lt;u8&gt; for u32&gt;::from (6 samples, 0.13%)</title><rect x="19.0978%" y="453" width="0.1265%" height="15" fill="rgb(213,46,41)" fg:x="906" fg:w="6"/><text x="19.3478%" y="463.50"></text></g><g><title>chrono::naive::internals::yo_to_cycle (53 samples, 1.12%)</title><rect x="19.0978%" y="469" width="1.1172%" height="15" fill="rgb(215,133,35)" fg:x="906" fg:w="53"/><text x="19.3478%" y="479.50"></text></g><g><title>chrono::naive::internals::Of::ordinal (17 samples, 0.36%)</title><rect x="20.2150%" y="469" width="0.3583%" height="15" fill="rgb(213,28,5)" fg:x="959" fg:w="17"/><text x="20.4650%" y="479.50"></text></g><g><title>chrono::naive::date::NaiveDate::of (5 samples, 0.11%)</title><rect x="20.5734%" y="469" width="0.1054%" height="15" fill="rgb(215,77,49)" fg:x="976" fg:w="5"/><text x="20.8234%" y="479.50"></text></g><g><title>&lt;chrono::naive::date::NaiveDate as chrono::traits::Datelike&gt;::year (15 samples, 0.32%)</title><rect x="20.6788%" y="469" width="0.3162%" height="15" fill="rgb(248,100,22)" fg:x="981" fg:w="15"/><text x="20.9288%" y="479.50"></text></g><g><title>chrono::naive::date::NaiveDate::signed_duration_since (567 samples, 11.95%)</title><rect x="10.4553%" y="485" width="11.9519%" height="15" fill="rgb(208,67,9)" fg:x="496" fg:w="567"/><text x="10.7053%" y="495.50">chrono::naive::dat..</text></g><g><title>&lt;time::duration::Duration as core::ops::arith::Add&gt;::add (26 samples, 0.55%)</title><rect x="22.4073%" y="485" width="0.5481%" height="15" fill="rgb(219,133,21)" fg:x="1063" fg:w="26"/><text x="22.6573%" y="495.50"></text></g><g><title>chrono::naive::datetime::NaiveDateTime::signed_duration_since (951 samples, 20.05%)</title><rect x="3.2884%" y="501" width="20.0464%" height="15" fill="rgb(246,46,29)" fg:x="156" fg:w="951"/><text x="3.5384%" y="511.50">chrono::naive::datetime::NaiveD..</text></g><g><title>&lt;chrono::naive::datetime::NaiveDateTime as core::ops::arith::Sub&gt;::sub (973 samples, 20.51%)</title><rect x="3.2884%" y="517" width="20.5101%" height="15" fill="rgb(246,185,52)" fg:x="156" fg:w="973"/><text x="3.5384%" y="527.50">&lt;chrono::naive::datetime::NaiveD..</text></g><g><title>scheduler::slot::Slot::num_hours (1,002 samples, 21.12%)</title><rect x="2.9089%" y="533" width="21.1214%" height="15" fill="rgb(252,136,11)" fg:x="138" fg:w="1002"/><text x="3.1589%" y="543.50">scheduler::slot::Slot::num_hours</text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="24.0304%" y="533" width="0.0211%" height="15" fill="rgb(219,138,53)" fg:x="1140" fg:w="1"/><text x="24.2804%" y="543.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="24.0304%" y="517" width="0.0211%" height="15" fill="rgb(211,51,23)" fg:x="1140" fg:w="1"/><text x="24.2804%" y="527.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="24.0304%" y="501" width="0.0211%" height="15" fill="rgb(247,221,28)" fg:x="1140" fg:w="1"/><text x="24.2804%" y="511.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="24.0304%" y="485" width="0.0211%" height="15" fill="rgb(251,222,45)" fg:x="1140" fg:w="1"/><text x="24.2804%" y="495.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="24.0304%" y="469" width="0.0211%" height="15" fill="rgb(217,162,53)" fg:x="1140" fg:w="1"/><text x="24.2804%" y="479.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="24.0304%" y="453" width="0.0211%" height="15" fill="rgb(229,93,14)" fg:x="1140" fg:w="1"/><text x="24.2804%" y="463.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="24.0304%" y="437" width="0.0211%" height="15" fill="rgb(209,67,49)" fg:x="1140" fg:w="1"/><text x="24.2804%" y="447.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="24.0304%" y="421" width="0.0211%" height="15" fill="rgb(213,87,29)" fg:x="1140" fg:w="1"/><text x="24.2804%" y="431.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="24.0304%" y="405" width="0.0211%" height="15" fill="rgb(205,151,52)" fg:x="1140" fg:w="1"/><text x="24.2804%" y="415.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="24.0304%" y="389" width="0.0211%" height="15" fill="rgb(253,215,39)" fg:x="1140" fg:w="1"/><text x="24.2804%" y="399.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="24.0304%" y="373" width="0.0211%" height="15" fill="rgb(221,220,41)" fg:x="1140" fg:w="1"/><text x="24.2804%" y="383.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="24.0304%" y="357" width="0.0211%" height="15" fill="rgb(218,133,21)" fg:x="1140" fg:w="1"/><text x="24.2804%" y="367.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="24.0304%" y="341" width="0.0211%" height="15" fill="rgb(221,193,43)" fg:x="1140" fg:w="1"/><text x="24.2804%" y="351.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (5 samples, 0.11%)</title><rect x="24.0514%" y="501" width="0.1054%" height="15" fill="rgb(240,128,52)" fg:x="1141" fg:w="5"/><text x="24.3014%" y="511.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (8 samples, 0.17%)</title><rect x="24.1568%" y="501" width="0.1686%" height="15" fill="rgb(253,114,12)" fg:x="1146" fg:w="8"/><text x="24.4068%" y="511.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (24 samples, 0.51%)</title><rect x="24.0514%" y="517" width="0.5059%" height="15" fill="rgb(215,223,47)" fg:x="1141" fg:w="24"/><text x="24.3014%" y="527.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (7 samples, 0.15%)</title><rect x="24.5573%" y="517" width="0.1476%" height="15" fill="rgb(248,225,23)" fg:x="1165" fg:w="7"/><text x="24.8073%" y="527.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (2 samples, 0.04%)</title><rect x="24.7049%" y="485" width="0.0422%" height="15" fill="rgb(250,108,0)" fg:x="1172" fg:w="2"/><text x="24.9549%" y="495.50"></text></g><g><title>core::ptr::null_mut (4 samples, 0.08%)</title><rect x="24.7049%" y="501" width="0.0843%" height="15" fill="rgb(228,208,7)" fg:x="1172" fg:w="4"/><text x="24.9549%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (22 samples, 0.46%)</title><rect x="24.7892%" y="501" width="0.4637%" height="15" fill="rgb(244,45,10)" fg:x="1176" fg:w="22"/><text x="25.0392%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (34 samples, 0.72%)</title><rect x="24.7049%" y="517" width="0.7167%" height="15" fill="rgb(207,125,25)" fg:x="1172" fg:w="34"/><text x="24.9549%" y="527.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (3 samples, 0.06%)</title><rect x="25.4216%" y="485" width="0.0632%" height="15" fill="rgb(210,195,18)" fg:x="1206" fg:w="3"/><text x="25.6716%" y="495.50"></text></g><g><title>core::ptr::invalid (1 samples, 0.02%)</title><rect x="25.4848%" y="485" width="0.0211%" height="15" fill="rgb(249,80,12)" fg:x="1209" fg:w="1"/><text x="25.7348%" y="495.50"></text></g><g><title>core::ptr::null (5 samples, 0.11%)</title><rect x="25.4216%" y="501" width="0.1054%" height="15" fill="rgb(221,65,9)" fg:x="1206" fg:w="5"/><text x="25.6716%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (11 samples, 0.23%)</title><rect x="25.5270%" y="501" width="0.2319%" height="15" fill="rgb(235,49,36)" fg:x="1211" fg:w="11"/><text x="25.7770%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (21 samples, 0.44%)</title><rect x="25.4216%" y="517" width="0.4427%" height="15" fill="rgb(225,32,20)" fg:x="1206" fg:w="21"/><text x="25.6716%" y="527.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (106 samples, 2.23%)</title><rect x="24.0514%" y="533" width="2.2344%" height="15" fill="rgb(215,141,46)" fg:x="1141" fg:w="106"/><text x="24.3014%" y="543.50">&lt;..</text></g><g><title>core::slice::&lt;impl [T]&gt;::as_ptr (4 samples, 0.08%)</title><rect x="26.2858%" y="485" width="0.0843%" height="15" fill="rgb(250,160,47)" fg:x="1247" fg:w="4"/><text x="26.5358%" y="495.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (2 samples, 0.04%)</title><rect x="26.3702%" y="485" width="0.0422%" height="15" fill="rgb(216,222,40)" fg:x="1251" fg:w="2"/><text x="26.6202%" y="495.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (9 samples, 0.19%)</title><rect x="26.4123%" y="453" width="0.1897%" height="15" fill="rgb(234,217,39)" fg:x="1253" fg:w="9"/><text x="26.6623%" y="463.50"></text></g><g><title>core::ptr::null (10 samples, 0.21%)</title><rect x="26.4123%" y="469" width="0.2108%" height="15" fill="rgb(207,178,40)" fg:x="1253" fg:w="10"/><text x="26.6623%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (10 samples, 0.21%)</title><rect x="26.6231%" y="469" width="0.2108%" height="15" fill="rgb(221,136,13)" fg:x="1263" fg:w="10"/><text x="26.8731%" y="479.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="26.8339%" y="469" width="0.0211%" height="15" fill="rgb(249,199,10)" fg:x="1273" fg:w="1"/><text x="27.0839%" y="479.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="26.8339%" y="453" width="0.0211%" height="15" fill="rgb(249,222,13)" fg:x="1273" fg:w="1"/><text x="27.0839%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (28 samples, 0.59%)</title><rect x="26.4123%" y="485" width="0.5902%" height="15" fill="rgb(244,185,38)" fg:x="1253" fg:w="28"/><text x="26.6623%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.02%)</title><rect x="27.0025%" y="485" width="0.0211%" height="15" fill="rgb(236,202,9)" fg:x="1281" fg:w="1"/><text x="27.2525%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.02%)</title><rect x="27.0025%" y="469" width="0.0211%" height="15" fill="rgb(250,229,37)" fg:x="1281" fg:w="1"/><text x="27.2525%" y="479.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (49 samples, 1.03%)</title><rect x="26.2858%" y="501" width="1.0329%" height="15" fill="rgb(206,174,23)" fg:x="1247" fg:w="49"/><text x="26.5358%" y="511.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (51 samples, 1.08%)</title><rect x="26.2858%" y="517" width="1.0750%" height="15" fill="rgb(211,33,43)" fg:x="1247" fg:w="51"/><text x="26.5358%" y="527.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (4 samples, 0.08%)</title><rect x="27.3609%" y="469" width="0.0843%" height="15" fill="rgb(245,58,50)" fg:x="1298" fg:w="4"/><text x="27.6109%" y="479.50"></text></g><g><title>core::ptr::slice_from_raw_parts (10 samples, 0.21%)</title><rect x="27.3609%" y="485" width="0.2108%" height="15" fill="rgb(244,68,36)" fg:x="1298" fg:w="10"/><text x="27.6109%" y="495.50"></text></g><g><title>core::slice::raw::from_raw_parts (16 samples, 0.34%)</title><rect x="27.3609%" y="501" width="0.3373%" height="15" fill="rgb(232,229,15)" fg:x="1298" fg:w="16"/><text x="27.6109%" y="511.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (2 samples, 0.04%)</title><rect x="27.6981%" y="453" width="0.0422%" height="15" fill="rgb(254,30,23)" fg:x="1314" fg:w="2"/><text x="27.9481%" y="463.50"></text></g><g><title>core::ptr::null_mut (4 samples, 0.08%)</title><rect x="27.6981%" y="469" width="0.0843%" height="15" fill="rgb(235,160,14)" fg:x="1314" fg:w="4"/><text x="27.9481%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (6 samples, 0.13%)</title><rect x="27.7825%" y="469" width="0.1265%" height="15" fill="rgb(212,155,44)" fg:x="1318" fg:w="6"/><text x="28.0325%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (18 samples, 0.38%)</title><rect x="27.6981%" y="485" width="0.3794%" height="15" fill="rgb(226,2,50)" fg:x="1314" fg:w="18"/><text x="27.9481%" y="495.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.02%)</title><rect x="28.0776%" y="453" width="0.0211%" height="15" fill="rgb(234,177,6)" fg:x="1332" fg:w="1"/><text x="28.3276%" y="463.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (3 samples, 0.06%)</title><rect x="28.0776%" y="469" width="0.0632%" height="15" fill="rgb(217,24,9)" fg:x="1332" fg:w="3"/><text x="28.3276%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (7 samples, 0.15%)</title><rect x="28.0776%" y="485" width="0.1476%" height="15" fill="rgb(220,13,46)" fg:x="1332" fg:w="7"/><text x="28.3276%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (32 samples, 0.67%)</title><rect x="27.6981%" y="501" width="0.6745%" height="15" fill="rgb(239,221,27)" fg:x="1314" fg:w="32"/><text x="27.9481%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (58 samples, 1.22%)</title><rect x="27.3609%" y="517" width="1.2226%" height="15" fill="rgb(222,198,25)" fg:x="1298" fg:w="58"/><text x="27.6109%" y="527.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (123 samples, 2.59%)</title><rect x="26.2858%" y="533" width="2.5927%" height="15" fill="rgb(211,99,13)" fg:x="1247" fg:w="123"/><text x="26.5358%" y="543.50">&lt;&amp;..</text></g><g><title>scheduler::task::Task::calculate_flexibility (1,258 samples, 26.52%)</title><rect x="2.9089%" y="549" width="26.5177%" height="15" fill="rgb(232,111,31)" fg:x="138" fg:w="1258"/><text x="3.1589%" y="559.50">scheduler::task::Task::calculate_flexibili..</text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_unchecked (4 samples, 0.08%)</title><rect x="29.4266%" y="485" width="0.0843%" height="15" fill="rgb(245,82,37)" fg:x="1396" fg:w="4"/><text x="29.6766%" y="495.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.02%)</title><rect x="29.5110%" y="453" width="0.0211%" height="15" fill="rgb(227,149,46)" fg:x="1400" fg:w="1"/><text x="29.7610%" y="463.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::cast (2 samples, 0.04%)</title><rect x="29.5110%" y="469" width="0.0422%" height="15" fill="rgb(218,36,50)" fg:x="1400" fg:w="2"/><text x="29.7610%" y="479.50"></text></g><g><title>&lt;core::ptr::unique::Unique&lt;T&gt; as core::convert::From&lt;core::ptr::non_null::NonNull&lt;T&gt;&gt;&gt;::from (1 samples, 0.02%)</title><rect x="29.5531%" y="469" width="0.0211%" height="15" fill="rgb(226,80,48)" fg:x="1402" fg:w="1"/><text x="29.8031%" y="479.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::cast (5 samples, 0.11%)</title><rect x="29.5110%" y="485" width="0.1054%" height="15" fill="rgb(238,224,15)" fg:x="1400" fg:w="5"/><text x="29.7610%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (9 samples, 0.19%)</title><rect x="29.6164%" y="469" width="0.1897%" height="15" fill="rgb(241,136,10)" fg:x="1405" fg:w="9"/><text x="29.8664%" y="479.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (2 samples, 0.04%)</title><rect x="29.8061%" y="453" width="0.0422%" height="15" fill="rgb(208,32,45)" fg:x="1414" fg:w="2"/><text x="30.0561%" y="463.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="29.8482%" y="453" width="0.0211%" height="15" fill="rgb(207,135,9)" fg:x="1416" fg:w="1"/><text x="30.0982%" y="463.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="29.8482%" y="437" width="0.0211%" height="15" fill="rgb(206,86,44)" fg:x="1416" fg:w="1"/><text x="30.0982%" y="447.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="29.8482%" y="421" width="0.0211%" height="15" fill="rgb(245,177,15)" fg:x="1416" fg:w="1"/><text x="30.0982%" y="431.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (17 samples, 0.36%)</title><rect x="29.8061%" y="469" width="0.3583%" height="15" fill="rgb(206,64,50)" fg:x="1414" fg:w="17"/><text x="30.0561%" y="479.50"></text></g><g><title>core::mem::valid_align::ValidAlign::new_unchecked (3 samples, 0.06%)</title><rect x="30.1644%" y="453" width="0.0632%" height="15" fill="rgb(234,36,40)" fg:x="1431" fg:w="3"/><text x="30.4144%" y="463.50"></text></g><g><title>core::alloc::layout::Layout::from_size_align_unchecked (13 samples, 0.27%)</title><rect x="30.1644%" y="469" width="0.2740%" height="15" fill="rgb(213,64,8)" fg:x="1431" fg:w="13"/><text x="30.4144%" y="479.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.02%)</title><rect x="30.4384%" y="469" width="0.0211%" height="15" fill="rgb(210,75,36)" fg:x="1444" fg:w="1"/><text x="30.6884%" y="479.50"></text></g><g><title>core::alloc::layout::Layout::array (49 samples, 1.03%)</title><rect x="29.6164%" y="485" width="1.0329%" height="15" fill="rgb(229,88,21)" fg:x="1405" fg:w="49"/><text x="29.8664%" y="495.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.02%)</title><rect x="30.6492%" y="437" width="0.0211%" height="15" fill="rgb(252,204,47)" fg:x="1454" fg:w="1"/><text x="30.8992%" y="447.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (3 samples, 0.06%)</title><rect x="30.6492%" y="453" width="0.0632%" height="15" fill="rgb(208,77,27)" fg:x="1454" fg:w="3"/><text x="30.8992%" y="463.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.02%)</title><rect x="30.7125%" y="453" width="0.0211%" height="15" fill="rgb(221,76,26)" fg:x="1457" fg:w="1"/><text x="30.9625%" y="463.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::convert::From&lt;core::ptr::unique::Unique&lt;T&gt;&gt;&gt;::from (7 samples, 0.15%)</title><rect x="30.6492%" y="469" width="0.1476%" height="15" fill="rgb(225,139,18)" fg:x="1454" fg:w="7"/><text x="30.8992%" y="479.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (11 samples, 0.23%)</title><rect x="30.6492%" y="485" width="0.2319%" height="15" fill="rgb(230,137,11)" fg:x="1454" fg:w="11"/><text x="30.8992%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (85 samples, 1.79%)</title><rect x="29.4266%" y="501" width="1.7917%" height="15" fill="rgb(212,28,1)" fg:x="1396" fg:w="85"/><text x="29.6766%" y="511.50">a..</text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.02%)</title><rect x="31.2184%" y="485" width="0.0211%" height="15" fill="rgb(248,164,17)" fg:x="1481" fg:w="1"/><text x="31.4684%" y="495.50"></text></g><g><title>core::alloc::layout::Layout::size (1 samples, 0.02%)</title><rect x="31.2395%" y="485" width="0.0211%" height="15" fill="rgb(222,171,42)" fg:x="1482" fg:w="1"/><text x="31.4895%" y="495.50"></text></g><g><title>core::alloc::layout::Layout::size (2 samples, 0.04%)</title><rect x="31.2605%" y="469" width="0.0422%" height="15" fill="rgb(243,84,45)" fg:x="1483" fg:w="2"/><text x="31.5105%" y="479.50"></text></g><g><title>core::mem::valid_align::ValidAlign::as_nonzero (2 samples, 0.04%)</title><rect x="31.3027%" y="453" width="0.0422%" height="15" fill="rgb(252,49,23)" fg:x="1485" fg:w="2"/><text x="31.5527%" y="463.50"></text></g><g><title>core::num::nonzero::NonZeroUsize::new_unchecked (2 samples, 0.04%)</title><rect x="31.3027%" y="437" width="0.0422%" height="15" fill="rgb(215,19,7)" fg:x="1485" fg:w="2"/><text x="31.5527%" y="447.50"></text></g><g><title>core::alloc::layout::Layout::align (7 samples, 0.15%)</title><rect x="31.3027%" y="469" width="0.1476%" height="15" fill="rgb(238,81,41)" fg:x="1485" fg:w="7"/><text x="31.5527%" y="479.50"></text></g><g><title>_int_free (10 samples, 0.21%)</title><rect x="31.4503%" y="469" width="0.2108%" height="15" fill="rgb(210,199,37)" fg:x="1492" fg:w="10"/><text x="31.7003%" y="479.50"></text></g><g><title>__GI___libc_free (2 samples, 0.04%)</title><rect x="31.6610%" y="469" width="0.0422%" height="15" fill="rgb(244,192,49)" fg:x="1502" fg:w="2"/><text x="31.9110%" y="479.50"></text></g><g><title>alloc::alloc::dealloc (24 samples, 0.51%)</title><rect x="31.2605%" y="485" width="0.5059%" height="15" fill="rgb(226,211,11)" fg:x="1483" fg:w="24"/><text x="31.5105%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (30 samples, 0.63%)</title><rect x="31.2184%" y="501" width="0.6324%" height="15" fill="rgb(236,162,54)" fg:x="1481" fg:w="30"/><text x="31.4684%" y="511.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (123 samples, 2.59%)</title><rect x="29.4266%" y="517" width="2.5927%" height="15" fill="rgb(220,229,9)" fg:x="1396" fg:w="123"/><text x="29.6766%" y="527.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;scheduler::slot::Slot&gt;&gt; (124 samples, 2.61%)</title><rect x="29.4266%" y="533" width="2.6138%" height="15" fill="rgb(250,87,22)" fg:x="1396" fg:w="124"/><text x="29.6766%" y="543.50">co..</text></g><g><title>core::ptr::metadata::from_raw_parts_mut (2 samples, 0.04%)</title><rect x="32.0405%" y="501" width="0.0422%" height="15" fill="rgb(239,43,17)" fg:x="1520" fg:w="2"/><text x="32.2905%" y="511.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (8 samples, 0.17%)</title><rect x="32.0405%" y="517" width="0.1686%" height="15" fill="rgb(231,177,25)" fg:x="1520" fg:w="8"/><text x="32.2905%" y="527.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (1 samples, 0.02%)</title><rect x="32.2091%" y="469" width="0.0211%" height="15" fill="rgb(219,179,1)" fg:x="1528" fg:w="1"/><text x="32.4591%" y="479.50"></text></g><g><title>core::ptr::null_mut (2 samples, 0.04%)</title><rect x="32.2091%" y="485" width="0.0422%" height="15" fill="rgb(238,219,53)" fg:x="1528" fg:w="2"/><text x="32.4591%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (12 samples, 0.25%)</title><rect x="32.2513%" y="485" width="0.2530%" height="15" fill="rgb(232,167,36)" fg:x="1530" fg:w="12"/><text x="32.5013%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (16 samples, 0.34%)</title><rect x="32.2091%" y="501" width="0.3373%" height="15" fill="rgb(244,19,51)" fg:x="1528" fg:w="16"/><text x="32.4591%" y="511.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (2 samples, 0.04%)</title><rect x="32.5464%" y="485" width="0.0422%" height="15" fill="rgb(224,6,22)" fg:x="1544" fg:w="2"/><text x="32.7964%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (9 samples, 0.19%)</title><rect x="32.5464%" y="501" width="0.1897%" height="15" fill="rgb(224,145,5)" fg:x="1544" fg:w="9"/><text x="32.7964%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (34 samples, 0.72%)</title><rect x="32.2091%" y="517" width="0.7167%" height="15" fill="rgb(234,130,49)" fg:x="1528" fg:w="34"/><text x="32.4591%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (49 samples, 1.03%)</title><rect x="32.0405%" y="533" width="1.0329%" height="15" fill="rgb(254,6,2)" fg:x="1520" fg:w="49"/><text x="32.2905%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;scheduler::slot::Slot&gt;&gt; (176 samples, 3.71%)</title><rect x="29.4266%" y="549" width="3.7099%" height="15" fill="rgb(208,96,46)" fg:x="1396" fg:w="176"/><text x="29.6766%" y="559.50">core..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (9 samples, 0.19%)</title><rect x="33.1366%" y="549" width="0.1897%" height="15" fill="rgb(239,3,39)" fg:x="1572" fg:w="9"/><text x="33.3866%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::is_empty (4 samples, 0.08%)</title><rect x="33.3263%" y="549" width="0.0843%" height="15" fill="rgb(233,210,1)" fg:x="1581" fg:w="4"/><text x="33.5763%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (4 samples, 0.08%)</title><rect x="33.3263%" y="533" width="0.0843%" height="15" fill="rgb(244,137,37)" fg:x="1581" fg:w="4"/><text x="33.5763%" y="543.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="33.4106%" y="549" width="0.0211%" height="15" fill="rgb(240,136,2)" fg:x="1585" fg:w="1"/><text x="33.6606%" y="559.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="33.4106%" y="533" width="0.0211%" height="15" fill="rgb(239,18,37)" fg:x="1585" fg:w="1"/><text x="33.6606%" y="543.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="33.4106%" y="517" width="0.0211%" height="15" fill="rgb(218,185,22)" fg:x="1585" fg:w="1"/><text x="33.6606%" y="527.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="33.4106%" y="501" width="0.0211%" height="15" fill="rgb(225,218,4)" fg:x="1585" fg:w="1"/><text x="33.6606%" y="511.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="33.4106%" y="485" width="0.0211%" height="15" fill="rgb(230,182,32)" fg:x="1585" fg:w="1"/><text x="33.6606%" y="495.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="33.4106%" y="469" width="0.0211%" height="15" fill="rgb(242,56,43)" fg:x="1585" fg:w="1"/><text x="33.6606%" y="479.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="33.4106%" y="453" width="0.0211%" height="15" fill="rgb(233,99,24)" fg:x="1585" fg:w="1"/><text x="33.6606%" y="463.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="33.4106%" y="437" width="0.0211%" height="15" fill="rgb(234,209,42)" fg:x="1585" fg:w="1"/><text x="33.6606%" y="447.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="33.4106%" y="421" width="0.0211%" height="15" fill="rgb(227,7,12)" fg:x="1585" fg:w="1"/><text x="33.6606%" y="431.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="33.4106%" y="405" width="0.0211%" height="15" fill="rgb(245,203,43)" fg:x="1585" fg:w="1"/><text x="33.6606%" y="415.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="33.4106%" y="389" width="0.0211%" height="15" fill="rgb(238,205,33)" fg:x="1585" fg:w="1"/><text x="33.6606%" y="399.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="33.4106%" y="373" width="0.0211%" height="15" fill="rgb(231,56,7)" fg:x="1585" fg:w="1"/><text x="33.6606%" y="383.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="33.4106%" y="357" width="0.0211%" height="15" fill="rgb(244,186,29)" fg:x="1585" fg:w="1"/><text x="33.6606%" y="367.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="33.4106%" y="341" width="0.0211%" height="15" fill="rgb(234,111,31)" fg:x="1585" fg:w="1"/><text x="33.6606%" y="351.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="33.4106%" y="325" width="0.0211%" height="15" fill="rgb(241,149,10)" fg:x="1585" fg:w="1"/><text x="33.6606%" y="335.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="33.4106%" y="309" width="0.0211%" height="15" fill="rgb(249,206,44)" fg:x="1585" fg:w="1"/><text x="33.6606%" y="319.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="33.4106%" y="293" width="0.0211%" height="15" fill="rgb(251,153,30)" fg:x="1585" fg:w="1"/><text x="33.6606%" y="303.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="33.4106%" y="277" width="0.0211%" height="15" fill="rgb(239,152,38)" fg:x="1585" fg:w="1"/><text x="33.6606%" y="287.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i32&gt;::cmp (10 samples, 0.21%)</title><rect x="33.4317%" y="469" width="0.2108%" height="15" fill="rgb(249,139,47)" fg:x="1586" fg:w="10"/><text x="33.6817%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i32&gt;::partial_cmp (13 samples, 0.27%)</title><rect x="33.4317%" y="485" width="0.2740%" height="15" fill="rgb(244,64,35)" fg:x="1586" fg:w="13"/><text x="33.6817%" y="495.50"></text></g><g><title>&lt;chrono::naive::date::NaiveDate as core::cmp::PartialOrd&gt;::partial_cmp (20 samples, 0.42%)</title><rect x="33.4317%" y="501" width="0.4216%" height="15" fill="rgb(216,46,15)" fg:x="1586" fg:w="20"/><text x="33.6817%" y="511.50"></text></g><g><title>&lt;chrono::naive::datetime::NaiveDateTime as core::cmp::PartialOrd&gt;::partial_cmp (38 samples, 0.80%)</title><rect x="33.4317%" y="517" width="0.8010%" height="15" fill="rgb(250,74,19)" fg:x="1586" fg:w="38"/><text x="33.6817%" y="527.50"></text></g><g><title>core::cmp::PartialOrd::lt (52 samples, 1.10%)</title><rect x="33.4317%" y="533" width="1.0961%" height="15" fill="rgb(249,42,33)" fg:x="1586" fg:w="52"/><text x="33.6817%" y="543.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.15%)</title><rect x="34.5278%" y="501" width="0.1476%" height="15" fill="rgb(242,149,17)" fg:x="1638" fg:w="7"/><text x="34.7778%" y="511.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.15%)</title><rect x="34.5278%" y="485" width="0.1476%" height="15" fill="rgb(244,29,21)" fg:x="1638" fg:w="7"/><text x="34.7778%" y="495.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.15%)</title><rect x="34.5278%" y="469" width="0.1476%" height="15" fill="rgb(220,130,37)" fg:x="1638" fg:w="7"/><text x="34.7778%" y="479.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.15%)</title><rect x="34.5278%" y="453" width="0.1476%" height="15" fill="rgb(211,67,2)" fg:x="1638" fg:w="7"/><text x="34.7778%" y="463.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.15%)</title><rect x="34.5278%" y="437" width="0.1476%" height="15" fill="rgb(235,68,52)" fg:x="1638" fg:w="7"/><text x="34.7778%" y="447.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.15%)</title><rect x="34.5278%" y="421" width="0.1476%" height="15" fill="rgb(246,142,3)" fg:x="1638" fg:w="7"/><text x="34.7778%" y="431.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.15%)</title><rect x="34.5278%" y="405" width="0.1476%" height="15" fill="rgb(241,25,7)" fg:x="1638" fg:w="7"/><text x="34.7778%" y="415.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.15%)</title><rect x="34.5278%" y="389" width="0.1476%" height="15" fill="rgb(242,119,39)" fg:x="1638" fg:w="7"/><text x="34.7778%" y="399.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.15%)</title><rect x="34.5278%" y="373" width="0.1476%" height="15" fill="rgb(241,98,45)" fg:x="1638" fg:w="7"/><text x="34.7778%" y="383.50"></text></g><g><title>[[kernel.kallsyms]] (7 samples, 0.15%)</title><rect x="34.5278%" y="357" width="0.1476%" height="15" fill="rgb(254,28,30)" fg:x="1638" fg:w="7"/><text x="34.7778%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i32&gt;::cmp (1 samples, 0.02%)</title><rect x="34.6754%" y="469" width="0.0211%" height="15" fill="rgb(241,142,54)" fg:x="1645" fg:w="1"/><text x="34.9254%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i32&gt;::partial_cmp (6 samples, 0.13%)</title><rect x="34.6754%" y="485" width="0.1265%" height="15" fill="rgb(222,85,15)" fg:x="1645" fg:w="6"/><text x="34.9254%" y="495.50"></text></g><g><title>&lt;chrono::naive::date::NaiveDate as core::cmp::PartialOrd&gt;::partial_cmp (8 samples, 0.17%)</title><rect x="34.6754%" y="501" width="0.1686%" height="15" fill="rgb(210,85,47)" fg:x="1645" fg:w="8"/><text x="34.9254%" y="511.50"></text></g><g><title>&lt;chrono::naive::datetime::NaiveDateTime as core::cmp::PartialOrd&gt;::partial_cmp (19 samples, 0.40%)</title><rect x="34.5278%" y="517" width="0.4005%" height="15" fill="rgb(224,206,25)" fg:x="1638" fg:w="19"/><text x="34.7778%" y="527.50"></text></g><g><title>core::cmp::PartialOrd::le (24 samples, 0.51%)</title><rect x="34.5278%" y="533" width="0.5059%" height="15" fill="rgb(243,201,19)" fg:x="1638" fg:w="24"/><text x="34.7778%" y="543.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i32&gt;::cmp (2 samples, 0.04%)</title><rect x="35.0337%" y="469" width="0.0422%" height="15" fill="rgb(236,59,4)" fg:x="1662" fg:w="2"/><text x="35.2837%" y="479.50"></text></g><g><title>&lt;chrono::naive::date::NaiveDate as core::cmp::PartialOrd&gt;::partial_cmp (7 samples, 0.15%)</title><rect x="35.0337%" y="501" width="0.1476%" height="15" fill="rgb(254,179,45)" fg:x="1662" fg:w="7"/><text x="35.2837%" y="511.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i32&gt;::partial_cmp (7 samples, 0.15%)</title><rect x="35.0337%" y="485" width="0.1476%" height="15" fill="rgb(226,14,10)" fg:x="1662" fg:w="7"/><text x="35.2837%" y="495.50"></text></g><g><title>&lt;chrono::naive::datetime::NaiveDateTime as core::cmp::PartialOrd&gt;::partial_cmp (9 samples, 0.19%)</title><rect x="35.0337%" y="517" width="0.1897%" height="15" fill="rgb(244,27,41)" fg:x="1662" fg:w="9"/><text x="35.2837%" y="527.50"></text></g><g><title>core::cmp::PartialOrd::gt (14 samples, 0.30%)</title><rect x="35.0337%" y="533" width="0.2951%" height="15" fill="rgb(235,35,32)" fg:x="1662" fg:w="14"/><text x="35.2837%" y="543.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i32&gt;::cmp (5 samples, 0.11%)</title><rect x="35.3288%" y="469" width="0.1054%" height="15" fill="rgb(218,68,31)" fg:x="1676" fg:w="5"/><text x="35.5788%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i32&gt;::partial_cmp (6 samples, 0.13%)</title><rect x="35.3288%" y="485" width="0.1265%" height="15" fill="rgb(207,120,37)" fg:x="1676" fg:w="6"/><text x="35.5788%" y="495.50"></text></g><g><title>&lt;chrono::naive::date::NaiveDate as core::cmp::PartialOrd&gt;::partial_cmp (9 samples, 0.19%)</title><rect x="35.3288%" y="501" width="0.1897%" height="15" fill="rgb(227,98,0)" fg:x="1676" fg:w="9"/><text x="35.5788%" y="511.50"></text></g><g><title>&lt;chrono::naive::datetime::NaiveDateTime as core::cmp::PartialOrd&gt;::partial_cmp (13 samples, 0.27%)</title><rect x="35.3288%" y="517" width="0.2740%" height="15" fill="rgb(207,7,3)" fg:x="1676" fg:w="13"/><text x="35.5788%" y="527.50"></text></g><g><title>core::cmp::PartialOrd::ge (21 samples, 0.44%)</title><rect x="35.3288%" y="533" width="0.4427%" height="15" fill="rgb(206,98,19)" fg:x="1676" fg:w="21"/><text x="35.5788%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (2 samples, 0.04%)</title><rect x="35.7715%" y="533" width="0.0422%" height="15" fill="rgb(217,5,26)" fg:x="1697" fg:w="2"/><text x="36.0215%" y="543.50"></text></g><g><title>core::ptr::write (6 samples, 0.13%)</title><rect x="35.8137%" y="517" width="0.1265%" height="15" fill="rgb(235,190,38)" fg:x="1699" fg:w="6"/><text x="36.0637%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.02%)</title><rect x="35.9401%" y="517" width="0.0211%" height="15" fill="rgb(247,86,24)" fg:x="1705" fg:w="1"/><text x="36.1901%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.02%)</title><rect x="35.9401%" y="501" width="0.0211%" height="15" fill="rgb(205,101,16)" fg:x="1705" fg:w="1"/><text x="36.1901%" y="511.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (6 samples, 0.13%)</title><rect x="35.9612%" y="469" width="0.1265%" height="15" fill="rgb(246,168,33)" fg:x="1706" fg:w="6"/><text x="36.2112%" y="479.50"></text></g><g><title>core::ptr::invalid_mut (1 samples, 0.02%)</title><rect x="36.0877%" y="469" width="0.0211%" height="15" fill="rgb(231,114,1)" fg:x="1712" fg:w="1"/><text x="36.3377%" y="479.50"></text></g><g><title>core::ptr::null_mut (9 samples, 0.19%)</title><rect x="35.9612%" y="485" width="0.1897%" height="15" fill="rgb(207,184,53)" fg:x="1706" fg:w="9"/><text x="36.2112%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (10 samples, 0.21%)</title><rect x="36.1509%" y="485" width="0.2108%" height="15" fill="rgb(224,95,51)" fg:x="1715" fg:w="10"/><text x="36.4009%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (27 samples, 0.57%)</title><rect x="35.9612%" y="501" width="0.5691%" height="15" fill="rgb(212,188,45)" fg:x="1706" fg:w="27"/><text x="36.2112%" y="511.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (5 samples, 0.11%)</title><rect x="36.5304%" y="469" width="0.1054%" height="15" fill="rgb(223,154,38)" fg:x="1733" fg:w="5"/><text x="36.7804%" y="479.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (8 samples, 0.17%)</title><rect x="36.5304%" y="485" width="0.1686%" height="15" fill="rgb(251,22,52)" fg:x="1733" fg:w="8"/><text x="36.7804%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (17 samples, 0.36%)</title><rect x="36.5304%" y="501" width="0.3583%" height="15" fill="rgb(229,209,22)" fg:x="1733" fg:w="17"/><text x="36.7804%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (47 samples, 0.99%)</title><rect x="35.9612%" y="517" width="0.9907%" height="15" fill="rgb(234,138,34)" fg:x="1706" fg:w="47"/><text x="36.2112%" y="527.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (11 samples, 0.23%)</title><rect x="36.9519%" y="485" width="0.2319%" height="15" fill="rgb(212,95,11)" fg:x="1753" fg:w="11"/><text x="37.2019%" y="495.50"></text></g><g><title>alloc::raw_vec::handle_reserve (16 samples, 0.34%)</title><rect x="36.9519%" y="501" width="0.3373%" height="15" fill="rgb(240,179,47)" fg:x="1753" fg:w="16"/><text x="37.2019%" y="511.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (5 samples, 0.11%)</title><rect x="37.2892%" y="485" width="0.1054%" height="15" fill="rgb(240,163,11)" fg:x="1769" fg:w="5"/><text x="37.5392%" y="495.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (4 samples, 0.08%)</title><rect x="37.3946%" y="469" width="0.0843%" height="15" fill="rgb(236,37,12)" fg:x="1774" fg:w="4"/><text x="37.6446%" y="479.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (16 samples, 0.34%)</title><rect x="37.3946%" y="485" width="0.3373%" height="15" fill="rgb(232,164,16)" fg:x="1774" fg:w="16"/><text x="37.6446%" y="495.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (8 samples, 0.17%)</title><rect x="37.7319%" y="453" width="0.1686%" height="15" fill="rgb(244,205,15)" fg:x="1790" fg:w="8"/><text x="37.9819%" y="463.50"></text></g><g><title>core::cmp::Ord::max (47 samples, 0.99%)</title><rect x="37.7319%" y="469" width="0.9907%" height="15" fill="rgb(223,117,47)" fg:x="1790" fg:w="47"/><text x="37.9819%" y="479.50"></text></g><g><title>core::cmp::max (57 samples, 1.20%)</title><rect x="37.7319%" y="485" width="1.2015%" height="15" fill="rgb(244,107,35)" fg:x="1790" fg:w="57"/><text x="37.9819%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (3 samples, 0.06%)</title><rect x="38.9334%" y="469" width="0.0632%" height="15" fill="rgb(205,140,8)" fg:x="1847" fg:w="3"/><text x="39.1834%" y="479.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (11 samples, 0.23%)</title><rect x="38.9966%" y="453" width="0.2319%" height="15" fill="rgb(228,84,46)" fg:x="1850" fg:w="11"/><text x="39.2466%" y="463.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (44 samples, 0.93%)</title><rect x="38.9966%" y="469" width="0.9275%" height="15" fill="rgb(254,188,9)" fg:x="1850" fg:w="44"/><text x="39.2466%" y="479.50"></text></g><g><title>core::alloc::layout::Layout::from_size_align_unchecked (12 samples, 0.25%)</title><rect x="39.9241%" y="469" width="0.2530%" height="15" fill="rgb(206,112,54)" fg:x="1894" fg:w="12"/><text x="40.1741%" y="479.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="40.1771%" y="469" width="0.0211%" height="15" fill="rgb(216,84,49)" fg:x="1906" fg:w="1"/><text x="40.4271%" y="479.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="40.1771%" y="453" width="0.0211%" height="15" fill="rgb(214,194,35)" fg:x="1906" fg:w="1"/><text x="40.4271%" y="463.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="40.1771%" y="437" width="0.0211%" height="15" fill="rgb(249,28,3)" fg:x="1906" fg:w="1"/><text x="40.4271%" y="447.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="40.1771%" y="421" width="0.0211%" height="15" fill="rgb(222,56,52)" fg:x="1906" fg:w="1"/><text x="40.4271%" y="431.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="40.1771%" y="405" width="0.0211%" height="15" fill="rgb(245,217,50)" fg:x="1906" fg:w="1"/><text x="40.4271%" y="415.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="40.1771%" y="389" width="0.0211%" height="15" fill="rgb(213,201,24)" fg:x="1906" fg:w="1"/><text x="40.4271%" y="399.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="40.1771%" y="373" width="0.0211%" height="15" fill="rgb(248,116,28)" fg:x="1906" fg:w="1"/><text x="40.4271%" y="383.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="40.1771%" y="357" width="0.0211%" height="15" fill="rgb(219,72,43)" fg:x="1906" fg:w="1"/><text x="40.4271%" y="367.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="40.1771%" y="341" width="0.0211%" height="15" fill="rgb(209,138,14)" fg:x="1906" fg:w="1"/><text x="40.4271%" y="351.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="40.1771%" y="325" width="0.0211%" height="15" fill="rgb(222,18,33)" fg:x="1906" fg:w="1"/><text x="40.4271%" y="335.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="40.1771%" y="309" width="0.0211%" height="15" fill="rgb(213,199,7)" fg:x="1906" fg:w="1"/><text x="40.4271%" y="319.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="40.1771%" y="293" width="0.0211%" height="15" fill="rgb(250,110,10)" fg:x="1906" fg:w="1"/><text x="40.4271%" y="303.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="40.1771%" y="277" width="0.0211%" height="15" fill="rgb(248,123,6)" fg:x="1906" fg:w="1"/><text x="40.4271%" y="287.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.04%)</title><rect x="40.1981%" y="469" width="0.0422%" height="15" fill="rgb(206,91,31)" fg:x="1907" fg:w="2"/><text x="40.4481%" y="479.50"></text></g><g><title>core::alloc::layout::Layout::array (76 samples, 1.60%)</title><rect x="38.9334%" y="485" width="1.6020%" height="15" fill="rgb(211,154,13)" fg:x="1847" fg:w="76"/><text x="39.1834%" y="495.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (28 samples, 0.59%)</title><rect x="40.5354%" y="469" width="0.5902%" height="15" fill="rgb(225,148,7)" fg:x="1923" fg:w="28"/><text x="40.7854%" y="479.50"></text></g><g><title>core::alloc::layout::Layout::size (7 samples, 0.15%)</title><rect x="41.1256%" y="469" width="0.1476%" height="15" fill="rgb(220,160,43)" fg:x="1951" fg:w="7"/><text x="41.3756%" y="479.50"></text></g><g><title>alloc::raw_vec::alloc_guard (4 samples, 0.08%)</title><rect x="41.2732%" y="469" width="0.0843%" height="15" fill="rgb(213,52,39)" fg:x="1958" fg:w="4"/><text x="41.5232%" y="479.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (17 samples, 0.36%)</title><rect x="41.3575%" y="469" width="0.3583%" height="15" fill="rgb(243,137,7)" fg:x="1962" fg:w="17"/><text x="41.6075%" y="479.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (5 samples, 0.11%)</title><rect x="41.7159%" y="405" width="0.1054%" height="15" fill="rgb(230,79,13)" fg:x="1979" fg:w="5"/><text x="41.9659%" y="415.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (8 samples, 0.17%)</title><rect x="41.7159%" y="421" width="0.1686%" height="15" fill="rgb(247,105,23)" fg:x="1979" fg:w="8"/><text x="41.9659%" y="431.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (10 samples, 0.21%)</title><rect x="41.8845%" y="421" width="0.2108%" height="15" fill="rgb(223,179,41)" fg:x="1987" fg:w="10"/><text x="42.1345%" y="431.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (5 samples, 0.11%)</title><rect x="42.0953%" y="421" width="0.1054%" height="15" fill="rgb(218,9,34)" fg:x="1997" fg:w="5"/><text x="42.3453%" y="431.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;[T]&gt;::slice_from_raw_parts (28 samples, 0.59%)</title><rect x="41.7159%" y="437" width="0.5902%" height="15" fill="rgb(222,106,8)" fg:x="1979" fg:w="28"/><text x="41.9659%" y="447.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (5 samples, 0.11%)</title><rect x="42.3061%" y="421" width="0.1054%" height="15" fill="rgb(211,220,0)" fg:x="2007" fg:w="5"/><text x="42.5561%" y="431.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (4 samples, 0.08%)</title><rect x="42.4115%" y="389" width="0.0843%" height="15" fill="rgb(229,52,16)" fg:x="2012" fg:w="4"/><text x="42.6615%" y="399.50"></text></g><g><title>core::ptr::invalid_mut (3 samples, 0.06%)</title><rect x="42.4958%" y="389" width="0.0632%" height="15" fill="rgb(212,155,18)" fg:x="2016" fg:w="3"/><text x="42.7458%" y="399.50"></text></g><g><title>core::ptr::null_mut (9 samples, 0.19%)</title><rect x="42.4115%" y="405" width="0.1897%" height="15" fill="rgb(242,21,14)" fg:x="2012" fg:w="9"/><text x="42.6615%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (14 samples, 0.30%)</title><rect x="42.6012%" y="405" width="0.2951%" height="15" fill="rgb(222,19,48)" fg:x="2021" fg:w="14"/><text x="42.8512%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (25 samples, 0.53%)</title><rect x="42.4115%" y="421" width="0.5270%" height="15" fill="rgb(232,45,27)" fg:x="2012" fg:w="25"/><text x="42.6615%" y="431.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new (39 samples, 0.82%)</title><rect x="42.3061%" y="437" width="0.8221%" height="15" fill="rgb(249,103,42)" fg:x="2007" fg:w="39"/><text x="42.5561%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (5 samples, 0.11%)</title><rect x="43.1282%" y="437" width="0.1054%" height="15" fill="rgb(246,81,33)" fg:x="2046" fg:w="5"/><text x="43.3782%" y="447.50"></text></g><g><title>core::alloc::layout::Layout::size (6 samples, 0.13%)</title><rect x="43.2336%" y="437" width="0.1265%" height="15" fill="rgb(252,33,42)" fg:x="2051" fg:w="6"/><text x="43.4836%" y="447.50"></text></g><g><title>core::alloc::layout::Layout::size (8 samples, 0.17%)</title><rect x="43.3600%" y="421" width="0.1686%" height="15" fill="rgb(209,212,41)" fg:x="2057" fg:w="8"/><text x="43.6100%" y="431.50"></text></g><g><title>core::num::nonzero::NonZeroUsize::get (4 samples, 0.08%)</title><rect x="43.5287%" y="405" width="0.0843%" height="15" fill="rgb(207,154,6)" fg:x="2065" fg:w="4"/><text x="43.7787%" y="415.50"></text></g><g><title>core::num::nonzero::NonZeroUsize::new_unchecked (1 samples, 0.02%)</title><rect x="43.6130%" y="389" width="0.0211%" height="15" fill="rgb(223,64,47)" fg:x="2069" fg:w="1"/><text x="43.8630%" y="399.50"></text></g><g><title>core::mem::valid_align::ValidAlign::as_nonzero (6 samples, 0.13%)</title><rect x="43.6130%" y="405" width="0.1265%" height="15" fill="rgb(211,161,38)" fg:x="2069" fg:w="6"/><text x="43.8630%" y="415.50"></text></g><g><title>core::alloc::layout::Layout::align (20 samples, 0.42%)</title><rect x="43.5287%" y="421" width="0.4216%" height="15" fill="rgb(219,138,40)" fg:x="2065" fg:w="20"/><text x="43.7787%" y="431.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (4 samples, 0.08%)</title><rect x="43.9503%" y="405" width="0.0843%" height="15" fill="rgb(241,228,46)" fg:x="2085" fg:w="4"/><text x="44.2003%" y="415.50"></text></g><g><title>__rdl_alloc (8 samples, 0.17%)</title><rect x="43.9503%" y="421" width="0.1686%" height="15" fill="rgb(223,209,38)" fg:x="2085" fg:w="8"/><text x="44.2003%" y="431.50"></text></g><g><title>__GI___libc_malloc (22 samples, 0.46%)</title><rect x="44.1189%" y="421" width="0.4637%" height="15" fill="rgb(236,164,45)" fg:x="2093" fg:w="22"/><text x="44.3689%" y="431.50"></text></g><g><title>alloc::alloc::alloc (70 samples, 1.48%)</title><rect x="43.3600%" y="437" width="1.4755%" height="15" fill="rgb(231,15,5)" fg:x="2057" fg:w="70"/><text x="43.6100%" y="447.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (7 samples, 0.15%)</title><rect x="44.8356%" y="437" width="0.1476%" height="15" fill="rgb(252,35,15)" fg:x="2127" fg:w="7"/><text x="45.0856%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (174 samples, 3.67%)</title><rect x="41.7159%" y="453" width="3.6678%" height="15" fill="rgb(248,181,18)" fg:x="1979" fg:w="174"/><text x="41.9659%" y="463.50">allo..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (187 samples, 3.94%)</title><rect x="41.7159%" y="469" width="3.9418%" height="15" fill="rgb(233,39,42)" fg:x="1979" fg:w="187"/><text x="41.9659%" y="479.50">&lt;all..</text></g><g><title>alloc::raw_vec::finish_grow (273 samples, 5.75%)</title><rect x="40.5354%" y="485" width="5.7546%" height="15" fill="rgb(238,110,33)" fg:x="1923" fg:w="273"/><text x="40.7854%" y="495.50">alloc::..</text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (9 samples, 0.19%)</title><rect x="46.2901%" y="453" width="0.1897%" height="15" fill="rgb(233,195,10)" fg:x="2196" fg:w="9"/><text x="46.5401%" y="463.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::new_unchecked (16 samples, 0.34%)</title><rect x="46.2901%" y="469" width="0.3373%" height="15" fill="rgb(254,105,3)" fg:x="2196" fg:w="16"/><text x="46.5401%" y="479.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (7 samples, 0.15%)</title><rect x="46.6273%" y="453" width="0.1476%" height="15" fill="rgb(221,225,9)" fg:x="2212" fg:w="7"/><text x="46.8773%" y="463.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (7 samples, 0.15%)</title><rect x="46.7749%" y="453" width="0.1476%" height="15" fill="rgb(224,227,45)" fg:x="2219" fg:w="7"/><text x="47.0249%" y="463.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::cast (18 samples, 0.38%)</title><rect x="46.6273%" y="469" width="0.3794%" height="15" fill="rgb(229,198,43)" fg:x="2212" fg:w="18"/><text x="46.8773%" y="479.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.02%)</title><rect x="47.0067%" y="469" width="0.0211%" height="15" fill="rgb(206,209,35)" fg:x="2230" fg:w="1"/><text x="47.2567%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr_and_cap (51 samples, 1.08%)</title><rect x="46.2901%" y="485" width="1.0750%" height="15" fill="rgb(245,195,53)" fg:x="2196" fg:w="51"/><text x="46.5401%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (11 samples, 0.23%)</title><rect x="47.3651%" y="485" width="0.2319%" height="15" fill="rgb(240,92,26)" fg:x="2247" fg:w="11"/><text x="47.6151%" y="495.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (17 samples, 0.36%)</title><rect x="47.5970%" y="485" width="0.3583%" height="15" fill="rgb(207,40,23)" fg:x="2258" fg:w="17"/><text x="47.8470%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (533 samples, 11.24%)</title><rect x="37.2892%" y="501" width="11.2352%" height="15" fill="rgb(223,111,35)" fg:x="1769" fg:w="533"/><text x="37.5392%" y="511.50">alloc::raw_vec::R..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (553 samples, 11.66%)</title><rect x="36.9519%" y="517" width="11.6568%" height="15" fill="rgb(229,147,28)" fg:x="1753" fg:w="553"/><text x="37.2019%" y="527.50">alloc::raw_vec::R..</text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="48.6088%" y="517" width="0.0211%" height="15" fill="rgb(211,29,28)" fg:x="2306" fg:w="1"/><text x="48.8588%" y="527.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="48.6088%" y="501" width="0.0211%" height="15" fill="rgb(228,72,33)" fg:x="2306" fg:w="1"/><text x="48.8588%" y="511.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="48.6088%" y="485" width="0.0211%" height="15" fill="rgb(205,214,31)" fg:x="2306" fg:w="1"/><text x="48.8588%" y="495.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="48.6088%" y="469" width="0.0211%" height="15" fill="rgb(224,111,15)" fg:x="2306" fg:w="1"/><text x="48.8588%" y="479.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="48.6088%" y="453" width="0.0211%" height="15" fill="rgb(253,21,26)" fg:x="2306" fg:w="1"/><text x="48.8588%" y="463.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="48.6088%" y="437" width="0.0211%" height="15" fill="rgb(245,139,43)" fg:x="2306" fg:w="1"/><text x="48.8588%" y="447.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="48.6088%" y="421" width="0.0211%" height="15" fill="rgb(252,170,7)" fg:x="2306" fg:w="1"/><text x="48.8588%" y="431.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="48.6088%" y="405" width="0.0211%" height="15" fill="rgb(231,118,14)" fg:x="2306" fg:w="1"/><text x="48.8588%" y="415.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="48.6088%" y="389" width="0.0211%" height="15" fill="rgb(238,83,0)" fg:x="2306" fg:w="1"/><text x="48.8588%" y="399.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="48.6088%" y="373" width="0.0211%" height="15" fill="rgb(221,39,39)" fg:x="2306" fg:w="1"/><text x="48.8588%" y="383.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="48.6088%" y="357" width="0.0211%" height="15" fill="rgb(222,119,46)" fg:x="2306" fg:w="1"/><text x="48.8588%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (623 samples, 13.13%)</title><rect x="35.8137%" y="533" width="13.1324%" height="15" fill="rgb(222,165,49)" fg:x="1699" fg:w="623"/><text x="36.0637%" y="543.50">alloc::vec::Vec&lt;T,A&gt;..</text></g><g><title>&lt;scheduler::slot::Slot as core::ops::arith::Sub&gt;::sub (756 samples, 15.94%)</title><rect x="33.4317%" y="549" width="15.9359%" height="15" fill="rgb(219,113,52)" fg:x="1586" fg:w="756"/><text x="33.6817%" y="559.50">&lt;scheduler::slot::Slot as..</text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (9 samples, 0.19%)</title><rect x="49.3676%" y="517" width="0.1897%" height="15" fill="rgb(214,7,15)" fg:x="2342" fg:w="9"/><text x="49.6176%" y="527.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (10 samples, 0.21%)</title><rect x="49.5573%" y="517" width="0.2108%" height="15" fill="rgb(235,32,4)" fg:x="2351" fg:w="10"/><text x="49.8073%" y="527.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (27 samples, 0.57%)</title><rect x="49.3676%" y="533" width="0.5691%" height="15" fill="rgb(238,90,54)" fg:x="2342" fg:w="27"/><text x="49.6176%" y="543.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (16 samples, 0.34%)</title><rect x="49.9368%" y="533" width="0.3373%" height="15" fill="rgb(213,208,19)" fg:x="2369" fg:w="16"/><text x="50.1868%" y="543.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (15 samples, 0.32%)</title><rect x="50.2740%" y="501" width="0.3162%" height="15" fill="rgb(233,156,4)" fg:x="2385" fg:w="15"/><text x="50.5240%" y="511.50"></text></g><g><title>core::ptr::invalid_mut (6 samples, 0.13%)</title><rect x="50.5902%" y="501" width="0.1265%" height="15" fill="rgb(207,194,5)" fg:x="2400" fg:w="6"/><text x="50.8402%" y="511.50"></text></g><g><title>core::ptr::null_mut (24 samples, 0.51%)</title><rect x="50.2740%" y="517" width="0.5059%" height="15" fill="rgb(206,111,30)" fg:x="2385" fg:w="24"/><text x="50.5240%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (45 samples, 0.95%)</title><rect x="50.7799%" y="517" width="0.9486%" height="15" fill="rgb(243,70,54)" fg:x="2409" fg:w="45"/><text x="51.0299%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (84 samples, 1.77%)</title><rect x="50.2740%" y="533" width="1.7707%" height="15" fill="rgb(242,28,8)" fg:x="2385" fg:w="84"/><text x="50.5240%" y="543.50">c..</text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (152 samples, 3.20%)</title><rect x="49.3676%" y="549" width="3.2040%" height="15" fill="rgb(219,106,18)" fg:x="2342" fg:w="152"/><text x="49.6176%" y="559.50">&lt;co..</text></g><g><title>core::ptr::read (13 samples, 0.27%)</title><rect x="52.5717%" y="517" width="0.2740%" height="15" fill="rgb(244,222,10)" fg:x="2494" fg:w="13"/><text x="52.8217%" y="527.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.02%)</title><rect x="52.8457%" y="517" width="0.0211%" height="15" fill="rgb(236,179,52)" fg:x="2507" fg:w="1"/><text x="53.0957%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (3 samples, 0.06%)</title><rect x="52.8668%" y="517" width="0.0632%" height="15" fill="rgb(213,23,39)" fg:x="2508" fg:w="3"/><text x="53.1168%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (3 samples, 0.06%)</title><rect x="52.8668%" y="501" width="0.0632%" height="15" fill="rgb(238,48,10)" fg:x="2508" fg:w="3"/><text x="53.1168%" y="511.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (9 samples, 0.19%)</title><rect x="52.9300%" y="517" width="0.1897%" height="15" fill="rgb(251,196,23)" fg:x="2511" fg:w="9"/><text x="53.1800%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (10 samples, 0.21%)</title><rect x="53.1197%" y="517" width="0.2108%" height="15" fill="rgb(250,152,24)" fg:x="2520" fg:w="10"/><text x="53.3697%" y="527.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (3 samples, 0.06%)</title><rect x="53.3305%" y="469" width="0.0632%" height="15" fill="rgb(209,150,17)" fg:x="2530" fg:w="3"/><text x="53.5805%" y="479.50"></text></g><g><title>core::ptr::null_mut (6 samples, 0.13%)</title><rect x="53.3305%" y="485" width="0.1265%" height="15" fill="rgb(234,202,34)" fg:x="2530" fg:w="6"/><text x="53.5805%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (17 samples, 0.36%)</title><rect x="53.4570%" y="485" width="0.3583%" height="15" fill="rgb(253,148,53)" fg:x="2536" fg:w="17"/><text x="53.7070%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (26 samples, 0.55%)</title><rect x="53.3305%" y="501" width="0.5481%" height="15" fill="rgb(218,129,16)" fg:x="2530" fg:w="26"/><text x="53.5805%" y="511.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.02%)</title><rect x="53.8786%" y="469" width="0.0211%" height="15" fill="rgb(216,85,19)" fg:x="2556" fg:w="1"/><text x="54.1286%" y="479.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (3 samples, 0.06%)</title><rect x="53.8786%" y="485" width="0.0632%" height="15" fill="rgb(235,228,7)" fg:x="2556" fg:w="3"/><text x="54.1286%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (8 samples, 0.17%)</title><rect x="53.8786%" y="501" width="0.1686%" height="15" fill="rgb(245,175,0)" fg:x="2556" fg:w="8"/><text x="54.1286%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (38 samples, 0.80%)</title><rect x="53.3305%" y="517" width="0.8010%" height="15" fill="rgb(208,168,36)" fg:x="2530" fg:w="38"/><text x="53.5805%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocator (3 samples, 0.06%)</title><rect x="54.1315%" y="501" width="0.0632%" height="15" fill="rgb(246,171,24)" fg:x="2568" fg:w="3"/><text x="54.3815%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::allocator (9 samples, 0.19%)</title><rect x="54.1315%" y="517" width="0.1897%" height="15" fill="rgb(215,142,24)" fg:x="2568" fg:w="9"/><text x="54.3815%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (3 samples, 0.06%)</title><rect x="54.3212%" y="517" width="0.0632%" height="15" fill="rgb(250,187,7)" fg:x="2577" fg:w="3"/><text x="54.5712%" y="527.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.02%)</title><rect x="54.3845%" y="517" width="0.0211%" height="15" fill="rgb(228,66,33)" fg:x="2580" fg:w="1"/><text x="54.6345%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (103 samples, 2.17%)</title><rect x="52.5717%" y="533" width="2.1712%" height="15" fill="rgb(234,215,21)" fg:x="2494" fg:w="103"/><text x="52.8217%" y="543.50">&lt;..</text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (7 samples, 0.15%)</title><rect x="54.7428%" y="453" width="0.1476%" height="15" fill="rgb(222,191,20)" fg:x="2597" fg:w="7"/><text x="54.9928%" y="463.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_unchecked (6 samples, 0.13%)</title><rect x="54.8904%" y="405" width="0.1265%" height="15" fill="rgb(245,79,54)" fg:x="2604" fg:w="6"/><text x="55.1404%" y="415.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (5 samples, 0.11%)</title><rect x="55.0169%" y="373" width="0.1054%" height="15" fill="rgb(240,10,37)" fg:x="2610" fg:w="5"/><text x="55.2669%" y="383.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (4 samples, 0.08%)</title><rect x="55.1223%" y="373" width="0.0843%" height="15" fill="rgb(214,192,32)" fg:x="2615" fg:w="4"/><text x="55.3723%" y="383.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::cast (14 samples, 0.30%)</title><rect x="55.0169%" y="389" width="0.2951%" height="15" fill="rgb(209,36,54)" fg:x="2610" fg:w="14"/><text x="55.2669%" y="399.50"></text></g><g><title>&lt;core::ptr::unique::Unique&lt;T&gt; as core::convert::From&lt;core::ptr::non_null::NonNull&lt;T&gt;&gt;&gt;::from (10 samples, 0.21%)</title><rect x="55.3120%" y="389" width="0.2108%" height="15" fill="rgb(220,10,11)" fg:x="2624" fg:w="10"/><text x="55.5620%" y="399.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::cast (34 samples, 0.72%)</title><rect x="55.0169%" y="405" width="0.7167%" height="15" fill="rgb(221,106,17)" fg:x="2610" fg:w="34"/><text x="55.2669%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (9 samples, 0.19%)</title><rect x="55.7336%" y="389" width="0.1897%" height="15" fill="rgb(251,142,44)" fg:x="2644" fg:w="9"/><text x="55.9836%" y="399.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="55.9233%" y="357" width="0.0211%" height="15" fill="rgb(238,13,15)" fg:x="2653" fg:w="1"/><text x="56.1733%" y="367.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="55.9233%" y="341" width="0.0211%" height="15" fill="rgb(208,107,27)" fg:x="2653" fg:w="1"/><text x="56.1733%" y="351.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="55.9233%" y="325" width="0.0211%" height="15" fill="rgb(205,136,37)" fg:x="2653" fg:w="1"/><text x="56.1733%" y="335.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="55.9233%" y="309" width="0.0211%" height="15" fill="rgb(250,205,27)" fg:x="2653" fg:w="1"/><text x="56.1733%" y="319.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="55.9233%" y="293" width="0.0211%" height="15" fill="rgb(210,80,43)" fg:x="2653" fg:w="1"/><text x="56.1733%" y="303.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="55.9233%" y="277" width="0.0211%" height="15" fill="rgb(247,160,36)" fg:x="2653" fg:w="1"/><text x="56.1733%" y="287.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="55.9233%" y="261" width="0.0211%" height="15" fill="rgb(234,13,49)" fg:x="2653" fg:w="1"/><text x="56.1733%" y="271.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="55.9233%" y="245" width="0.0211%" height="15" fill="rgb(234,122,0)" fg:x="2653" fg:w="1"/><text x="56.1733%" y="255.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="55.9233%" y="229" width="0.0211%" height="15" fill="rgb(207,146,38)" fg:x="2653" fg:w="1"/><text x="56.1733%" y="239.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="55.9233%" y="213" width="0.0211%" height="15" fill="rgb(207,177,25)" fg:x="2653" fg:w="1"/><text x="56.1733%" y="223.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (6 samples, 0.13%)</title><rect x="55.9233%" y="373" width="0.1265%" height="15" fill="rgb(211,178,42)" fg:x="2653" fg:w="6"/><text x="56.1733%" y="383.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (23 samples, 0.48%)</title><rect x="55.9233%" y="389" width="0.4848%" height="15" fill="rgb(230,69,54)" fg:x="2653" fg:w="23"/><text x="56.1733%" y="399.50"></text></g><g><title>core::mem::valid_align::ValidAlign::new_unchecked (3 samples, 0.06%)</title><rect x="56.4081%" y="373" width="0.0632%" height="15" fill="rgb(214,135,41)" fg:x="2676" fg:w="3"/><text x="56.6581%" y="383.50"></text></g><g><title>core::alloc::layout::Layout::from_size_align_unchecked (11 samples, 0.23%)</title><rect x="56.4081%" y="389" width="0.2319%" height="15" fill="rgb(237,67,25)" fg:x="2676" fg:w="11"/><text x="56.6581%" y="399.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.02%)</title><rect x="56.6400%" y="389" width="0.0211%" height="15" fill="rgb(222,189,50)" fg:x="2687" fg:w="1"/><text x="56.8900%" y="399.50"></text></g><g><title>core::alloc::layout::Layout::array (56 samples, 1.18%)</title><rect x="55.7336%" y="405" width="1.1804%" height="15" fill="rgb(245,148,34)" fg:x="2644" fg:w="56"/><text x="55.9836%" y="415.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (4 samples, 0.08%)</title><rect x="56.9140%" y="357" width="0.0843%" height="15" fill="rgb(222,29,6)" fg:x="2700" fg:w="4"/><text x="57.1640%" y="367.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (12 samples, 0.25%)</title><rect x="56.9140%" y="373" width="0.2530%" height="15" fill="rgb(221,189,43)" fg:x="2700" fg:w="12"/><text x="57.1640%" y="383.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (9 samples, 0.19%)</title><rect x="57.1669%" y="373" width="0.1897%" height="15" fill="rgb(207,36,27)" fg:x="2712" fg:w="9"/><text x="57.4169%" y="383.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::convert::From&lt;core::ptr::unique::Unique&lt;T&gt;&gt;&gt;::from (31 samples, 0.65%)</title><rect x="56.9140%" y="389" width="0.6535%" height="15" fill="rgb(217,90,24)" fg:x="2700" fg:w="31"/><text x="57.1640%" y="399.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (36 samples, 0.76%)</title><rect x="56.9140%" y="405" width="0.7589%" height="15" fill="rgb(224,66,35)" fg:x="2700" fg:w="36"/><text x="57.1640%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (159 samples, 3.35%)</title><rect x="54.8904%" y="421" width="3.3516%" height="15" fill="rgb(221,13,50)" fg:x="2604" fg:w="159"/><text x="55.1404%" y="431.50">all..</text></g><g><title>core::alloc::layout::Layout::size (1 samples, 0.02%)</title><rect x="58.2420%" y="405" width="0.0211%" height="15" fill="rgb(236,68,49)" fg:x="2763" fg:w="1"/><text x="58.4920%" y="415.50"></text></g><g><title>core::alloc::layout::Layout::size (1 samples, 0.02%)</title><rect x="58.2631%" y="389" width="0.0211%" height="15" fill="rgb(229,146,28)" fg:x="2764" fg:w="1"/><text x="58.5131%" y="399.50"></text></g><g><title>core::num::nonzero::NonZeroUsize::get (6 samples, 0.13%)</title><rect x="58.2841%" y="373" width="0.1265%" height="15" fill="rgb(225,31,38)" fg:x="2765" fg:w="6"/><text x="58.5341%" y="383.50"></text></g><g><title>core::mem::valid_align::ValidAlign::as_nonzero (4 samples, 0.08%)</title><rect x="58.4106%" y="373" width="0.0843%" height="15" fill="rgb(250,208,3)" fg:x="2771" fg:w="4"/><text x="58.6606%" y="383.50"></text></g><g><title>core::alloc::layout::Layout::align (15 samples, 0.32%)</title><rect x="58.2841%" y="389" width="0.3162%" height="15" fill="rgb(246,54,23)" fg:x="2765" fg:w="15"/><text x="58.5341%" y="399.50"></text></g><g><title>_int_free (23 samples, 0.48%)</title><rect x="58.6003%" y="389" width="0.4848%" height="15" fill="rgb(243,76,11)" fg:x="2780" fg:w="23"/><text x="58.8503%" y="399.50"></text></g><g><title>__rdl_dealloc (2 samples, 0.04%)</title><rect x="59.0852%" y="389" width="0.0422%" height="15" fill="rgb(245,21,50)" fg:x="2803" fg:w="2"/><text x="59.3352%" y="399.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (2 samples, 0.04%)</title><rect x="59.0852%" y="373" width="0.0422%" height="15" fill="rgb(228,9,43)" fg:x="2803" fg:w="2"/><text x="59.3352%" y="383.50"></text></g><g><title>__GI___libc_free (12 samples, 0.25%)</title><rect x="59.1273%" y="389" width="0.2530%" height="15" fill="rgb(208,100,47)" fg:x="2805" fg:w="12"/><text x="59.3773%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (62 samples, 1.31%)</title><rect x="58.2631%" y="405" width="1.3069%" height="15" fill="rgb(232,26,8)" fg:x="2764" fg:w="62"/><text x="58.5131%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (73 samples, 1.54%)</title><rect x="58.2420%" y="421" width="1.5388%" height="15" fill="rgb(216,166,38)" fg:x="2763" fg:w="73"/><text x="58.4920%" y="431.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (270 samples, 5.69%)</title><rect x="54.8904%" y="437" width="5.6914%" height="15" fill="rgb(251,202,51)" fg:x="2604" fg:w="270"/><text x="55.1404%" y="447.50">&lt;alloc:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;scheduler::slot::Slot&gt;&gt; (273 samples, 5.75%)</title><rect x="54.8904%" y="453" width="5.7546%" height="15" fill="rgb(254,216,34)" fg:x="2604" fg:w="273"/><text x="55.1404%" y="463.50">core::p..</text></g><g><title>core::ptr::read (8 samples, 0.17%)</title><rect x="60.6450%" y="437" width="0.1686%" height="15" fill="rgb(251,32,27)" fg:x="2877" fg:w="8"/><text x="60.8950%" y="447.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::take (19 samples, 0.40%)</title><rect x="60.6450%" y="453" width="0.4005%" height="15" fill="rgb(208,127,28)" fg:x="2877" fg:w="19"/><text x="60.8950%" y="463.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (5 samples, 0.11%)</title><rect x="61.0455%" y="421" width="0.1054%" height="15" fill="rgb(224,137,22)" fg:x="2896" fg:w="5"/><text x="61.2955%" y="431.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::new_unchecked (11 samples, 0.23%)</title><rect x="61.0455%" y="437" width="0.2319%" height="15" fill="rgb(254,70,32)" fg:x="2896" fg:w="11"/><text x="61.2955%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::from_raw_parts_in (19 samples, 0.40%)</title><rect x="61.0455%" y="453" width="0.4005%" height="15" fill="rgb(229,75,37)" fg:x="2896" fg:w="19"/><text x="61.2955%" y="463.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (336 samples, 7.08%)</title><rect x="54.7428%" y="469" width="7.0826%" height="15" fill="rgb(252,64,23)" fg:x="2597" fg:w="336"/><text x="54.9928%" y="479.50">&lt;&lt;alloc::v..</text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;scheduler::slot::Slot,alloc::alloc::Global&gt;&gt; (340 samples, 7.17%)</title><rect x="54.7428%" y="485" width="7.1669%" height="15" fill="rgb(232,162,48)" fg:x="2597" fg:w="340"/><text x="54.9928%" y="495.50">core::ptr:..</text></g><g><title>core::ptr::metadata::from_raw_parts_mut (5 samples, 0.11%)</title><rect x="61.9098%" y="453" width="0.1054%" height="15" fill="rgb(246,160,12)" fg:x="2937" fg:w="5"/><text x="62.1598%" y="463.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (10 samples, 0.21%)</title><rect x="61.9098%" y="469" width="0.2108%" height="15" fill="rgb(247,166,0)" fg:x="2937" fg:w="10"/><text x="62.1598%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for usize&gt;::eq (3 samples, 0.06%)</title><rect x="62.1206%" y="421" width="0.0632%" height="15" fill="rgb(249,219,21)" fg:x="2947" fg:w="3"/><text x="62.3706%" y="431.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (16 samples, 0.34%)</title><rect x="62.1206%" y="437" width="0.3373%" height="15" fill="rgb(205,209,3)" fg:x="2947" fg:w="16"/><text x="62.3706%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr (8 samples, 0.17%)</title><rect x="62.4578%" y="421" width="0.1686%" height="15" fill="rgb(243,44,1)" fg:x="2963" fg:w="8"/><text x="62.7078%" y="431.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (19 samples, 0.40%)</title><rect x="62.4578%" y="437" width="0.4005%" height="15" fill="rgb(206,159,16)" fg:x="2963" fg:w="19"/><text x="62.7078%" y="447.50"></text></g><g><title>core::iter::traits::exact_size::ExactSizeIterator::len (58 samples, 1.22%)</title><rect x="62.1206%" y="453" width="1.2226%" height="15" fill="rgb(244,77,30)" fg:x="2947" fg:w="58"/><text x="62.3706%" y="463.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="63.3432%" y="453" width="0.0211%" height="15" fill="rgb(218,69,12)" fg:x="3005" fg:w="1"/><text x="63.5932%" y="463.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="63.3432%" y="437" width="0.0211%" height="15" fill="rgb(212,87,7)" fg:x="3005" fg:w="1"/><text x="63.5932%" y="447.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="63.3432%" y="421" width="0.0211%" height="15" fill="rgb(245,114,25)" fg:x="3005" fg:w="1"/><text x="63.5932%" y="431.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="63.3432%" y="405" width="0.0211%" height="15" fill="rgb(210,61,42)" fg:x="3005" fg:w="1"/><text x="63.5932%" y="415.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="63.3432%" y="389" width="0.0211%" height="15" fill="rgb(211,52,33)" fg:x="3005" fg:w="1"/><text x="63.5932%" y="399.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="63.3432%" y="373" width="0.0211%" height="15" fill="rgb(234,58,33)" fg:x="3005" fg:w="1"/><text x="63.5932%" y="383.50"></text></g><g><title>amdgpu_irq_handler (1 samples, 0.02%)</title><rect x="63.3432%" y="357" width="0.0211%" height="15" fill="rgb(220,115,36)" fg:x="3005" fg:w="1"/><text x="63.5932%" y="367.50"></text></g><g><title>amdgpu_ih_process (1 samples, 0.02%)</title><rect x="63.3432%" y="341" width="0.0211%" height="15" fill="rgb(243,153,54)" fg:x="3005" fg:w="1"/><text x="63.5932%" y="351.50"></text></g><g><title>amdgpu_irq_dispatch (1 samples, 0.02%)</title><rect x="63.3432%" y="325" width="0.0211%" height="15" fill="rgb(251,47,18)" fg:x="3005" fg:w="1"/><text x="63.5932%" y="335.50"></text></g><g><title>amdgpu_dm_irq_handler (1 samples, 0.02%)</title><rect x="63.3432%" y="309" width="0.0211%" height="15" fill="rgb(242,102,42)" fg:x="3005" fg:w="1"/><text x="63.5932%" y="319.50"></text></g><g><title>dm_crtc_high_irq (1 samples, 0.02%)</title><rect x="63.3432%" y="293" width="0.0211%" height="15" fill="rgb(234,31,38)" fg:x="3005" fg:w="1"/><text x="63.5932%" y="303.50"></text></g><g><title>drm_crtc_handle_vblank (1 samples, 0.02%)</title><rect x="63.3432%" y="277" width="0.0211%" height="15" fill="rgb(221,117,51)" fg:x="3005" fg:w="1"/><text x="63.5932%" y="287.50"></text></g><g><title>drm_handle_vblank (1 samples, 0.02%)</title><rect x="63.3432%" y="261" width="0.0211%" height="15" fill="rgb(212,20,18)" fg:x="3005" fg:w="1"/><text x="63.5932%" y="271.50"></text></g><g><title>drm_update_vblank_count (1 samples, 0.02%)</title><rect x="63.3432%" y="245" width="0.0211%" height="15" fill="rgb(245,133,36)" fg:x="3005" fg:w="1"/><text x="63.5932%" y="255.50"></text></g><g><title>__get_vblank_counter (1 samples, 0.02%)</title><rect x="63.3432%" y="229" width="0.0211%" height="15" fill="rgb(212,6,19)" fg:x="3005" fg:w="1"/><text x="63.5932%" y="239.50"></text></g><g><title>amdgpu_get_vblank_counter_kms (1 samples, 0.02%)</title><rect x="63.3432%" y="213" width="0.0211%" height="15" fill="rgb(218,1,36)" fg:x="3005" fg:w="1"/><text x="63.5932%" y="223.50"></text></g><g><title>amdgpu_display_get_crtc_scanoutpos (1 samples, 0.02%)</title><rect x="63.3432%" y="197" width="0.0211%" height="15" fill="rgb(246,84,54)" fg:x="3005" fg:w="1"/><text x="63.5932%" y="207.50"></text></g><g><title>dm_crtc_get_scanoutpos (1 samples, 0.02%)</title><rect x="63.3432%" y="181" width="0.0211%" height="15" fill="rgb(242,110,6)" fg:x="3005" fg:w="1"/><text x="63.5932%" y="191.50"></text></g><g><title>dc_stream_get_scanoutpos (1 samples, 0.02%)</title><rect x="63.3432%" y="165" width="0.0211%" height="15" fill="rgb(214,47,5)" fg:x="3005" fg:w="1"/><text x="63.5932%" y="175.50"></text></g><g><title>dce110_timing_generator_get_crtc_scanoutpos (1 samples, 0.02%)</title><rect x="63.3432%" y="149" width="0.0211%" height="15" fill="rgb(218,159,25)" fg:x="3005" fg:w="1"/><text x="63.5932%" y="159.50"></text></g><g><title>dce110_timing_generator_get_position (1 samples, 0.02%)</title><rect x="63.3432%" y="133" width="0.0211%" height="15" fill="rgb(215,211,28)" fg:x="3005" fg:w="1"/><text x="63.5932%" y="143.50"></text></g><g><title>dm_read_reg_func (1 samples, 0.02%)</title><rect x="63.3432%" y="117" width="0.0211%" height="15" fill="rgb(238,59,32)" fg:x="3005" fg:w="1"/><text x="63.5932%" y="127.50"></text></g><g><title>amdgpu_cgs_read_register (1 samples, 0.02%)</title><rect x="63.3432%" y="101" width="0.0211%" height="15" fill="rgb(226,82,3)" fg:x="3005" fg:w="1"/><text x="63.5932%" y="111.50"></text></g><g><title>amdgpu_mm_rreg (1 samples, 0.02%)</title><rect x="63.3432%" y="85" width="0.0211%" height="15" fill="rgb(240,164,32)" fg:x="3005" fg:w="1"/><text x="63.5932%" y="95.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (63 samples, 1.33%)</title><rect x="62.1206%" y="469" width="1.3280%" height="15" fill="rgb(232,46,7)" fg:x="2947" fg:w="63"/><text x="62.3706%" y="479.50"></text></g><g><title>alloc::vec::into_iter::IntoIter&lt;T,A&gt;::as_raw_mut_slice (82 samples, 1.73%)</title><rect x="61.9098%" y="485" width="1.7285%" height="15" fill="rgb(229,129,53)" fg:x="2937" fg:w="82"/><text x="62.1598%" y="495.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (434 samples, 9.15%)</title><rect x="54.7428%" y="501" width="9.1484%" height="15" fill="rgb(234,188,29)" fg:x="2597" fg:w="434"/><text x="54.9928%" y="511.50">&lt;alloc::vec::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;scheduler::slot::Slot&gt;&gt; (450 samples, 9.49%)</title><rect x="54.7428%" y="517" width="9.4857%" height="15" fill="rgb(246,141,4)" fg:x="2597" fg:w="450"/><text x="54.9928%" y="527.50">core::ptr::dro..</text></g><g><title>alloc::vec::into_iter::IntoIter&lt;T,A&gt;::forget_remaining_elements (6 samples, 0.13%)</title><rect x="64.2285%" y="517" width="0.1265%" height="15" fill="rgb(229,23,39)" fg:x="3047" fg:w="6"/><text x="64.4785%" y="527.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (8 samples, 0.17%)</title><rect x="64.3550%" y="469" width="0.1686%" height="15" fill="rgb(206,12,3)" fg:x="3053" fg:w="8"/><text x="64.6050%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::cast (4 samples, 0.08%)</title><rect x="64.5236%" y="469" width="0.0843%" height="15" fill="rgb(252,226,20)" fg:x="3061" fg:w="4"/><text x="64.7736%" y="479.50"></text></g><g><title>core::ptr::slice_from_raw_parts (16 samples, 0.34%)</title><rect x="64.3550%" y="485" width="0.3373%" height="15" fill="rgb(216,123,35)" fg:x="3053" fg:w="16"/><text x="64.6050%" y="495.50"></text></g><g><title>core::slice::raw::from_raw_parts (20 samples, 0.42%)</title><rect x="64.3550%" y="501" width="0.4216%" height="15" fill="rgb(212,68,40)" fg:x="3053" fg:w="20"/><text x="64.6050%" y="511.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for usize&gt;::eq (5 samples, 0.11%)</title><rect x="64.7766%" y="469" width="0.1054%" height="15" fill="rgb(254,125,32)" fg:x="3073" fg:w="5"/><text x="65.0266%" y="479.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (19 samples, 0.40%)</title><rect x="64.7766%" y="485" width="0.4005%" height="15" fill="rgb(253,97,22)" fg:x="3073" fg:w="19"/><text x="65.0266%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr (13 samples, 0.27%)</title><rect x="65.1771%" y="469" width="0.2740%" height="15" fill="rgb(241,101,14)" fg:x="3092" fg:w="13"/><text x="65.4271%" y="479.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (28 samples, 0.59%)</title><rect x="65.1771%" y="485" width="0.5902%" height="15" fill="rgb(238,103,29)" fg:x="3092" fg:w="28"/><text x="65.4271%" y="495.50"></text></g><g><title>core::iter::traits::exact_size::ExactSizeIterator::len (64 samples, 1.35%)</title><rect x="64.7766%" y="501" width="1.3491%" height="15" fill="rgb(233,195,47)" fg:x="3073" fg:w="64"/><text x="65.0266%" y="511.50"></text></g><g><title>alloc::vec::into_iter::IntoIter&lt;T,A&gt;::as_slice (87 samples, 1.83%)</title><rect x="64.3550%" y="517" width="1.8339%" height="15" fill="rgb(246,218,30)" fg:x="3053" fg:w="87"/><text x="64.6050%" y="527.50">a..</text></g><g><title>__memcpy_ssse3_back (32 samples, 0.67%)</title><rect x="66.1889%" y="485" width="0.6745%" height="15" fill="rgb(219,145,47)" fg:x="3140" fg:w="32"/><text x="66.4389%" y="495.50"></text></g><g><title>[main] (1 samples, 0.02%)</title><rect x="66.8634%" y="485" width="0.0211%" height="15" fill="rgb(243,12,26)" fg:x="3172" fg:w="1"/><text x="67.1134%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (38 samples, 0.80%)</title><rect x="66.1889%" y="501" width="0.8010%" height="15" fill="rgb(214,87,16)" fg:x="3140" fg:w="38"/><text x="66.4389%" y="511.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (4 samples, 0.08%)</title><rect x="66.9899%" y="437" width="0.0843%" height="15" fill="rgb(208,99,42)" fg:x="3178" fg:w="4"/><text x="67.2399%" y="447.50"></text></g><g><title>alloc::raw_vec::handle_reserve (6 samples, 0.13%)</title><rect x="66.9899%" y="453" width="0.1265%" height="15" fill="rgb(253,99,2)" fg:x="3178" fg:w="6"/><text x="67.2399%" y="463.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (16 samples, 0.34%)</title><rect x="67.1164%" y="437" width="0.3373%" height="15" fill="rgb(220,168,23)" fg:x="3184" fg:w="16"/><text x="67.3664%" y="447.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.02%)</title><rect x="67.4536%" y="421" width="0.0211%" height="15" fill="rgb(242,38,24)" fg:x="3200" fg:w="1"/><text x="67.7036%" y="431.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (9 samples, 0.19%)</title><rect x="67.4536%" y="437" width="0.1897%" height="15" fill="rgb(225,182,9)" fg:x="3200" fg:w="9"/><text x="67.7036%" y="447.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (10 samples, 0.21%)</title><rect x="67.6433%" y="405" width="0.2108%" height="15" fill="rgb(243,178,37)" fg:x="3209" fg:w="10"/><text x="67.8933%" y="415.50"></text></g><g><title>core::cmp::Ord::max (31 samples, 0.65%)</title><rect x="67.6433%" y="421" width="0.6535%" height="15" fill="rgb(232,139,19)" fg:x="3209" fg:w="31"/><text x="67.8933%" y="431.50"></text></g><g><title>core::cmp::max (35 samples, 0.74%)</title><rect x="67.6433%" y="437" width="0.7378%" height="15" fill="rgb(225,201,24)" fg:x="3209" fg:w="35"/><text x="67.8933%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (6 samples, 0.13%)</title><rect x="68.3811%" y="421" width="0.1265%" height="15" fill="rgb(221,47,46)" fg:x="3244" fg:w="6"/><text x="68.6311%" y="431.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (8 samples, 0.17%)</title><rect x="68.5076%" y="405" width="0.1686%" height="15" fill="rgb(249,23,13)" fg:x="3250" fg:w="8"/><text x="68.7576%" y="415.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (19 samples, 0.40%)</title><rect x="68.5076%" y="421" width="0.4005%" height="15" fill="rgb(219,9,5)" fg:x="3250" fg:w="19"/><text x="68.7576%" y="431.50"></text></g><g><title>core::mem::valid_align::ValidAlign::new_unchecked (4 samples, 0.08%)</title><rect x="68.9081%" y="405" width="0.0843%" height="15" fill="rgb(254,171,16)" fg:x="3269" fg:w="4"/><text x="69.1581%" y="415.50"></text></g><g><title>core::alloc::layout::Layout::from_size_align_unchecked (5 samples, 0.11%)</title><rect x="68.9081%" y="421" width="0.1054%" height="15" fill="rgb(230,171,20)" fg:x="3269" fg:w="5"/><text x="69.1581%" y="431.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.02%)</title><rect x="69.0135%" y="421" width="0.0211%" height="15" fill="rgb(210,71,41)" fg:x="3274" fg:w="1"/><text x="69.2635%" y="431.50"></text></g><g><title>core::alloc::layout::Layout::array (39 samples, 0.82%)</title><rect x="68.3811%" y="437" width="0.8221%" height="15" fill="rgb(206,173,20)" fg:x="3244" fg:w="39"/><text x="68.6311%" y="447.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (12 samples, 0.25%)</title><rect x="69.2032%" y="421" width="0.2530%" height="15" fill="rgb(233,88,34)" fg:x="3283" fg:w="12"/><text x="69.4532%" y="431.50"></text></g><g><title>core::mem::valid_align::ValidAlign::as_nonzero (1 samples, 0.02%)</title><rect x="69.4562%" y="405" width="0.0211%" height="15" fill="rgb(223,209,46)" fg:x="3295" fg:w="1"/><text x="69.7062%" y="415.50"></text></g><g><title>core::num::nonzero::NonZeroUsize::new_unchecked (1 samples, 0.02%)</title><rect x="69.4562%" y="389" width="0.0211%" height="15" fill="rgb(250,43,18)" fg:x="3295" fg:w="1"/><text x="69.7062%" y="399.50"></text></g><g><title>core::alloc::layout::Layout::align (2 samples, 0.04%)</title><rect x="69.4562%" y="421" width="0.0422%" height="15" fill="rgb(208,13,10)" fg:x="3295" fg:w="2"/><text x="69.7062%" y="431.50"></text></g><g><title>alloc::raw_vec::alloc_guard (2 samples, 0.04%)</title><rect x="69.4983%" y="421" width="0.0422%" height="15" fill="rgb(212,200,36)" fg:x="3297" fg:w="2"/><text x="69.7483%" y="431.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (6 samples, 0.13%)</title><rect x="69.5405%" y="421" width="0.1265%" height="15" fill="rgb(225,90,30)" fg:x="3299" fg:w="6"/><text x="69.7905%" y="431.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (1 samples, 0.02%)</title><rect x="69.6669%" y="357" width="0.0211%" height="15" fill="rgb(236,182,39)" fg:x="3305" fg:w="1"/><text x="69.9169%" y="367.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;[T]&gt;::slice_from_raw_parts (3 samples, 0.06%)</title><rect x="69.6669%" y="389" width="0.0632%" height="15" fill="rgb(212,144,35)" fg:x="3305" fg:w="3"/><text x="69.9169%" y="399.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (3 samples, 0.06%)</title><rect x="69.6669%" y="373" width="0.0632%" height="15" fill="rgb(228,63,44)" fg:x="3305" fg:w="3"/><text x="69.9169%" y="383.50"></text></g><g><title>core::ptr::null_mut (1 samples, 0.02%)</title><rect x="69.7302%" y="357" width="0.0211%" height="15" fill="rgb(228,109,6)" fg:x="3308" fg:w="1"/><text x="69.9802%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (3 samples, 0.06%)</title><rect x="69.7302%" y="373" width="0.0632%" height="15" fill="rgb(238,117,24)" fg:x="3308" fg:w="3"/><text x="69.9802%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (2 samples, 0.04%)</title><rect x="69.7513%" y="357" width="0.0422%" height="15" fill="rgb(242,26,26)" fg:x="3309" fg:w="2"/><text x="70.0013%" y="367.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new (4 samples, 0.08%)</title><rect x="69.7302%" y="389" width="0.0843%" height="15" fill="rgb(221,92,48)" fg:x="3308" fg:w="4"/><text x="69.9802%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (1 samples, 0.02%)</title><rect x="69.8145%" y="389" width="0.0211%" height="15" fill="rgb(209,209,32)" fg:x="3312" fg:w="1"/><text x="70.0645%" y="399.50"></text></g><g><title>core::mem::valid_align::ValidAlign::as_nonzero (1 samples, 0.02%)</title><rect x="69.8356%" y="373" width="0.0211%" height="15" fill="rgb(221,70,22)" fg:x="3313" fg:w="1"/><text x="70.0856%" y="383.50"></text></g><g><title>core::alloc::layout::Layout::align (2 samples, 0.04%)</title><rect x="69.8356%" y="389" width="0.0422%" height="15" fill="rgb(248,145,5)" fg:x="3313" fg:w="2"/><text x="70.0856%" y="399.50"></text></g><g><title>core::alloc::layout::Layout::align (1 samples, 0.02%)</title><rect x="69.8777%" y="373" width="0.0211%" height="15" fill="rgb(226,116,26)" fg:x="3315" fg:w="1"/><text x="70.1277%" y="383.50"></text></g><g><title>core::mem::valid_align::ValidAlign::as_nonzero (1 samples, 0.02%)</title><rect x="69.8777%" y="357" width="0.0211%" height="15" fill="rgb(244,5,17)" fg:x="3315" fg:w="1"/><text x="70.1277%" y="367.50"></text></g><g><title>unlink_chunk.isra.0 (1 samples, 0.02%)</title><rect x="69.8988%" y="325" width="0.0211%" height="15" fill="rgb(252,159,33)" fg:x="3316" fg:w="1"/><text x="70.1488%" y="335.50"></text></g><g><title>_int_malloc (8 samples, 0.17%)</title><rect x="69.8988%" y="341" width="0.1686%" height="15" fill="rgb(206,71,0)" fg:x="3316" fg:w="8"/><text x="70.1488%" y="351.50"></text></g><g><title>__memcpy_ssse3_back (3 samples, 0.06%)</title><rect x="70.0675%" y="341" width="0.0632%" height="15" fill="rgb(233,118,54)" fg:x="3324" fg:w="3"/><text x="70.3175%" y="351.50"></text></g><g><title>alloc::alloc::realloc (14 samples, 0.30%)</title><rect x="69.8777%" y="389" width="0.2951%" height="15" fill="rgb(234,83,48)" fg:x="3315" fg:w="14"/><text x="70.1277%" y="399.50"></text></g><g><title>__GI___libc_realloc (13 samples, 0.27%)</title><rect x="69.8988%" y="373" width="0.2740%" height="15" fill="rgb(228,3,54)" fg:x="3316" fg:w="13"/><text x="70.1488%" y="383.50"></text></g><g><title>_int_realloc (13 samples, 0.27%)</title><rect x="69.8988%" y="357" width="0.2740%" height="15" fill="rgb(226,155,13)" fg:x="3316" fg:w="13"/><text x="70.1488%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (25 samples, 0.53%)</title><rect x="69.6669%" y="421" width="0.5270%" height="15" fill="rgb(241,28,37)" fg:x="3305" fg:w="25"/><text x="69.9169%" y="431.50"></text></g><g><title>alloc::alloc::Global::grow_impl (25 samples, 0.53%)</title><rect x="69.6669%" y="405" width="0.5270%" height="15" fill="rgb(233,93,10)" fg:x="3305" fg:w="25"/><text x="69.9169%" y="415.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (1 samples, 0.02%)</title><rect x="70.1939%" y="373" width="0.0211%" height="15" fill="rgb(225,113,19)" fg:x="3330" fg:w="1"/><text x="70.4439%" y="383.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.02%)</title><rect x="70.2150%" y="373" width="0.0211%" height="15" fill="rgb(241,2,18)" fg:x="3331" fg:w="1"/><text x="70.4650%" y="383.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.02%)</title><rect x="70.2361%" y="373" width="0.0211%" height="15" fill="rgb(228,207,21)" fg:x="3332" fg:w="1"/><text x="70.4861%" y="383.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;[T]&gt;::slice_from_raw_parts (10 samples, 0.21%)</title><rect x="70.1939%" y="389" width="0.2108%" height="15" fill="rgb(213,211,35)" fg:x="3330" fg:w="10"/><text x="70.4439%" y="399.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (1 samples, 0.02%)</title><rect x="70.4047%" y="341" width="0.0211%" height="15" fill="rgb(209,83,10)" fg:x="3340" fg:w="1"/><text x="70.6547%" y="351.50"></text></g><g><title>core::ptr::invalid_mut (2 samples, 0.04%)</title><rect x="70.4258%" y="341" width="0.0422%" height="15" fill="rgb(209,164,1)" fg:x="3341" fg:w="2"/><text x="70.6758%" y="351.50"></text></g><g><title>core::ptr::null_mut (5 samples, 0.11%)</title><rect x="70.4047%" y="357" width="0.1054%" height="15" fill="rgb(213,184,43)" fg:x="3340" fg:w="5"/><text x="70.6547%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (6 samples, 0.13%)</title><rect x="70.5101%" y="357" width="0.1265%" height="15" fill="rgb(231,61,34)" fg:x="3345" fg:w="6"/><text x="70.7601%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (14 samples, 0.30%)</title><rect x="70.4047%" y="373" width="0.2951%" height="15" fill="rgb(235,75,3)" fg:x="3340" fg:w="14"/><text x="70.6547%" y="383.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new (22 samples, 0.46%)</title><rect x="70.4047%" y="389" width="0.4637%" height="15" fill="rgb(220,106,47)" fg:x="3340" fg:w="22"/><text x="70.6547%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (1 samples, 0.02%)</title><rect x="70.8685%" y="389" width="0.0211%" height="15" fill="rgb(210,196,33)" fg:x="3362" fg:w="1"/><text x="71.1185%" y="399.50"></text></g><g><title>core::alloc::layout::Layout::size (3 samples, 0.06%)</title><rect x="70.8895%" y="389" width="0.0632%" height="15" fill="rgb(229,154,42)" fg:x="3363" fg:w="3"/><text x="71.1395%" y="399.50"></text></g><g><title>core::num::nonzero::NonZeroUsize::get (1 samples, 0.02%)</title><rect x="70.9528%" y="357" width="0.0211%" height="15" fill="rgb(228,114,26)" fg:x="3366" fg:w="1"/><text x="71.2028%" y="367.50"></text></g><g><title>core::num::nonzero::NonZeroUsize::new_unchecked (1 samples, 0.02%)</title><rect x="70.9739%" y="341" width="0.0211%" height="15" fill="rgb(208,144,1)" fg:x="3367" fg:w="1"/><text x="71.2239%" y="351.50"></text></g><g><title>core::mem::valid_align::ValidAlign::as_nonzero (2 samples, 0.04%)</title><rect x="70.9739%" y="357" width="0.0422%" height="15" fill="rgb(239,112,37)" fg:x="3367" fg:w="2"/><text x="71.2239%" y="367.50"></text></g><g><title>core::alloc::layout::Layout::align (6 samples, 0.13%)</title><rect x="70.9528%" y="373" width="0.1265%" height="15" fill="rgb(210,96,50)" fg:x="3366" fg:w="6"/><text x="71.2028%" y="383.50"></text></g><g><title>__rdl_alloc (3 samples, 0.06%)</title><rect x="71.0793%" y="373" width="0.0632%" height="15" fill="rgb(222,178,2)" fg:x="3372" fg:w="3"/><text x="71.3293%" y="383.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (3 samples, 0.06%)</title><rect x="71.0793%" y="357" width="0.0632%" height="15" fill="rgb(226,74,18)" fg:x="3372" fg:w="3"/><text x="71.3293%" y="367.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="71.1425%" y="357" width="0.0211%" height="15" fill="rgb(225,67,54)" fg:x="3375" fg:w="1"/><text x="71.3925%" y="367.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="71.1425%" y="341" width="0.0211%" height="15" fill="rgb(251,92,32)" fg:x="3375" fg:w="1"/><text x="71.3925%" y="351.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="71.1425%" y="325" width="0.0211%" height="15" fill="rgb(228,149,22)" fg:x="3375" fg:w="1"/><text x="71.3925%" y="335.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="71.1425%" y="309" width="0.0211%" height="15" fill="rgb(243,54,13)" fg:x="3375" fg:w="1"/><text x="71.3925%" y="319.50"></text></g><g><title>__GI___libc_malloc (7 samples, 0.15%)</title><rect x="71.1425%" y="373" width="0.1476%" height="15" fill="rgb(243,180,28)" fg:x="3375" fg:w="7"/><text x="71.3925%" y="383.50"></text></g><g><title>alloc::alloc::alloc (21 samples, 0.44%)</title><rect x="70.9528%" y="389" width="0.4427%" height="15" fill="rgb(208,167,24)" fg:x="3366" fg:w="21"/><text x="71.2028%" y="399.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.04%)</title><rect x="71.3954%" y="389" width="0.0422%" height="15" fill="rgb(245,73,45)" fg:x="3387" fg:w="2"/><text x="71.6454%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (73 samples, 1.54%)</title><rect x="70.1939%" y="405" width="1.5388%" height="15" fill="rgb(237,203,48)" fg:x="3330" fg:w="73"/><text x="70.4439%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (77 samples, 1.62%)</title><rect x="70.1939%" y="421" width="1.6231%" height="15" fill="rgb(211,197,16)" fg:x="3330" fg:w="77"/><text x="70.4439%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (149 samples, 3.14%)</title><rect x="69.2032%" y="437" width="3.1408%" height="15" fill="rgb(243,99,51)" fg:x="3283" fg:w="149"/><text x="69.4532%" y="447.50">all..</text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (4 samples, 0.08%)</title><rect x="72.3440%" y="405" width="0.0843%" height="15" fill="rgb(215,123,29)" fg:x="3432" fg:w="4"/><text x="72.5940%" y="415.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::new_unchecked (8 samples, 0.17%)</title><rect x="72.3440%" y="421" width="0.1686%" height="15" fill="rgb(239,186,37)" fg:x="3432" fg:w="8"/><text x="72.5940%" y="431.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.02%)</title><rect x="72.5126%" y="405" width="0.0211%" height="15" fill="rgb(252,136,39)" fg:x="3440" fg:w="1"/><text x="72.7626%" y="415.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::cast (2 samples, 0.04%)</title><rect x="72.5126%" y="421" width="0.0422%" height="15" fill="rgb(223,213,32)" fg:x="3440" fg:w="2"/><text x="72.7626%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr_and_cap (16 samples, 0.34%)</title><rect x="72.3440%" y="437" width="0.3373%" height="15" fill="rgb(233,115,5)" fg:x="3432" fg:w="16"/><text x="72.5940%" y="447.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_unchecked (1 samples, 0.02%)</title><rect x="72.6813%" y="421" width="0.0211%" height="15" fill="rgb(207,226,44)" fg:x="3448" fg:w="1"/><text x="72.9313%" y="431.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.02%)</title><rect x="72.7024%" y="421" width="0.0211%" height="15" fill="rgb(208,126,0)" fg:x="3449" fg:w="1"/><text x="72.9524%" y="431.50"></text></g><g><title>core::alloc::layout::Layout::from_size_align_unchecked (1 samples, 0.02%)</title><rect x="72.7024%" y="405" width="0.0211%" height="15" fill="rgb(244,66,21)" fg:x="3449" fg:w="1"/><text x="72.9524%" y="415.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (2 samples, 0.04%)</title><rect x="72.7234%" y="389" width="0.0422%" height="15" fill="rgb(222,97,12)" fg:x="3450" fg:w="2"/><text x="72.9734%" y="399.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::convert::From&lt;core::ptr::unique::Unique&lt;T&gt;&gt;&gt;::from (3 samples, 0.06%)</title><rect x="72.7234%" y="405" width="0.0632%" height="15" fill="rgb(219,213,19)" fg:x="3450" fg:w="3"/><text x="72.9734%" y="415.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.02%)</title><rect x="72.7656%" y="389" width="0.0211%" height="15" fill="rgb(252,169,30)" fg:x="3452" fg:w="1"/><text x="73.0156%" y="399.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (4 samples, 0.08%)</title><rect x="72.7234%" y="421" width="0.0843%" height="15" fill="rgb(206,32,51)" fg:x="3450" fg:w="4"/><text x="72.9734%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (20 samples, 0.42%)</title><rect x="72.6813%" y="437" width="0.4216%" height="15" fill="rgb(250,172,42)" fg:x="3448" fg:w="20"/><text x="72.9313%" y="447.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (6 samples, 0.13%)</title><rect x="73.1029%" y="437" width="0.1265%" height="15" fill="rgb(209,34,43)" fg:x="3468" fg:w="6"/><text x="73.3529%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (315 samples, 6.64%)</title><rect x="67.1164%" y="453" width="6.6400%" height="15" fill="rgb(223,11,35)" fg:x="3184" fg:w="315"/><text x="67.3664%" y="463.50">alloc::ra..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (326 samples, 6.87%)</title><rect x="66.9899%" y="469" width="6.8718%" height="15" fill="rgb(251,219,26)" fg:x="3178" fg:w="326"/><text x="67.2399%" y="479.50">alloc::ra..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (1 samples, 0.02%)</title><rect x="73.8617%" y="453" width="0.0211%" height="15" fill="rgb(231,119,3)" fg:x="3504" fg:w="1"/><text x="74.1117%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (12 samples, 0.25%)</title><rect x="73.8617%" y="469" width="0.2530%" height="15" fill="rgb(216,97,11)" fg:x="3504" fg:w="12"/><text x="74.1117%" y="479.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="74.1147%" y="469" width="0.0211%" height="15" fill="rgb(223,59,9)" fg:x="3516" fg:w="1"/><text x="74.3647%" y="479.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="74.1147%" y="453" width="0.0211%" height="15" fill="rgb(233,93,31)" fg:x="3516" fg:w="1"/><text x="74.3647%" y="463.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="74.1147%" y="437" width="0.0211%" height="15" fill="rgb(239,81,33)" fg:x="3516" fg:w="1"/><text x="74.3647%" y="447.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="74.1147%" y="421" width="0.0211%" height="15" fill="rgb(213,120,34)" fg:x="3516" fg:w="1"/><text x="74.3647%" y="431.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="74.1147%" y="405" width="0.0211%" height="15" fill="rgb(243,49,53)" fg:x="3516" fg:w="1"/><text x="74.3647%" y="415.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="74.1147%" y="389" width="0.0211%" height="15" fill="rgb(247,216,33)" fg:x="3516" fg:w="1"/><text x="74.3647%" y="399.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="74.1147%" y="373" width="0.0211%" height="15" fill="rgb(226,26,14)" fg:x="3516" fg:w="1"/><text x="74.3647%" y="383.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="74.1147%" y="357" width="0.0211%" height="15" fill="rgb(215,49,53)" fg:x="3516" fg:w="1"/><text x="74.3647%" y="367.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="74.1147%" y="341" width="0.0211%" height="15" fill="rgb(245,162,40)" fg:x="3516" fg:w="1"/><text x="74.3647%" y="351.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="74.1147%" y="325" width="0.0211%" height="15" fill="rgb(229,68,17)" fg:x="3516" fg:w="1"/><text x="74.3647%" y="335.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="74.1147%" y="309" width="0.0211%" height="15" fill="rgb(213,182,10)" fg:x="3516" fg:w="1"/><text x="74.3647%" y="319.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="74.1147%" y="293" width="0.0211%" height="15" fill="rgb(245,125,30)" fg:x="3516" fg:w="1"/><text x="74.3647%" y="303.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="74.1147%" y="277" width="0.0211%" height="15" fill="rgb(232,202,2)" fg:x="3516" fg:w="1"/><text x="74.3647%" y="287.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="74.1147%" y="261" width="0.0211%" height="15" fill="rgb(237,140,51)" fg:x="3516" fg:w="1"/><text x="74.3647%" y="271.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="74.1147%" y="245" width="0.0211%" height="15" fill="rgb(236,157,25)" fg:x="3516" fg:w="1"/><text x="74.3647%" y="255.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="74.1147%" y="229" width="0.0211%" height="15" fill="rgb(219,209,0)" fg:x="3516" fg:w="1"/><text x="74.3647%" y="239.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="74.1147%" y="213" width="0.0211%" height="15" fill="rgb(240,116,54)" fg:x="3516" fg:w="1"/><text x="74.3647%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (355 samples, 7.48%)</title><rect x="66.9899%" y="485" width="7.4831%" height="15" fill="rgb(216,10,36)" fg:x="3178" fg:w="355"/><text x="67.2399%" y="495.50">alloc::raw..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (363 samples, 7.65%)</title><rect x="66.9899%" y="501" width="7.6518%" height="15" fill="rgb(222,72,44)" fg:x="3178" fg:w="363"/><text x="67.2399%" y="511.50">alloc::vec..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (10 samples, 0.21%)</title><rect x="74.6417%" y="501" width="0.2108%" height="15" fill="rgb(232,159,9)" fg:x="3541" fg:w="10"/><text x="74.8917%" y="511.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (2 samples, 0.04%)</title><rect x="74.8524%" y="453" width="0.0422%" height="15" fill="rgb(210,39,32)" fg:x="3551" fg:w="2"/><text x="75.1024%" y="463.50"></text></g><g><title>core::ptr::invalid_mut (1 samples, 0.02%)</title><rect x="74.8946%" y="453" width="0.0211%" height="15" fill="rgb(216,194,45)" fg:x="3553" fg:w="1"/><text x="75.1446%" y="463.50"></text></g><g><title>core::ptr::null_mut (4 samples, 0.08%)</title><rect x="74.8524%" y="469" width="0.0843%" height="15" fill="rgb(218,18,35)" fg:x="3551" fg:w="4"/><text x="75.1024%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (18 samples, 0.38%)</title><rect x="74.9368%" y="469" width="0.3794%" height="15" fill="rgb(207,83,51)" fg:x="3555" fg:w="18"/><text x="75.1868%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (31 samples, 0.65%)</title><rect x="74.8524%" y="485" width="0.6535%" height="15" fill="rgb(225,63,43)" fg:x="3551" fg:w="31"/><text x="75.1024%" y="495.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (4 samples, 0.08%)</title><rect x="75.5059%" y="453" width="0.0843%" height="15" fill="rgb(207,57,36)" fg:x="3582" fg:w="4"/><text x="75.7559%" y="463.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (5 samples, 0.11%)</title><rect x="75.5059%" y="469" width="0.1054%" height="15" fill="rgb(216,99,33)" fg:x="3582" fg:w="5"/><text x="75.7559%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (13 samples, 0.27%)</title><rect x="75.5059%" y="485" width="0.2740%" height="15" fill="rgb(225,42,16)" fg:x="3582" fg:w="13"/><text x="75.7559%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (57 samples, 1.20%)</title><rect x="74.8524%" y="501" width="1.2015%" height="15" fill="rgb(220,201,45)" fg:x="3551" fg:w="57"/><text x="75.1024%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (487 samples, 10.27%)</title><rect x="66.1889%" y="517" width="10.2656%" height="15" fill="rgb(225,33,4)" fg:x="3140" fg:w="487"/><text x="66.4389%" y="527.50">alloc::vec::Vec..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,alloc::vec::into_iter::IntoIter&lt;T&gt;&gt;&gt;::spec_extend (1,046 samples, 22.05%)</title><rect x="54.7428%" y="533" width="22.0489%" height="15" fill="rgb(224,33,50)" fg:x="2597" fg:w="1046"/><text x="54.9928%" y="543.50">&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1,161 samples, 24.47%)</title><rect x="52.5717%" y="549" width="24.4730%" height="15" fill="rgb(246,198,51)" fg:x="2494" fg:w="1161"/><text x="52.8217%" y="559.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::tr..</text></g><g><title>core::slice::&lt;impl [T]&gt;::as_mut_ptr (2 samples, 0.04%)</title><rect x="77.0447%" y="501" width="0.0422%" height="15" fill="rgb(205,22,4)" fg:x="3655" fg:w="2"/><text x="77.2947%" y="511.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (6 samples, 0.13%)</title><rect x="77.0868%" y="501" width="0.1265%" height="15" fill="rgb(206,3,8)" fg:x="3657" fg:w="6"/><text x="77.3368%" y="511.50"></text></g><g><title>core::ptr::null_mut (2 samples, 0.04%)</title><rect x="77.2133%" y="485" width="0.0422%" height="15" fill="rgb(251,23,15)" fg:x="3663" fg:w="2"/><text x="77.4633%" y="495.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (2 samples, 0.04%)</title><rect x="77.2133%" y="469" width="0.0422%" height="15" fill="rgb(252,88,28)" fg:x="3663" fg:w="2"/><text x="77.4633%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (15 samples, 0.32%)</title><rect x="77.2555%" y="485" width="0.3162%" height="15" fill="rgb(212,127,14)" fg:x="3665" fg:w="15"/><text x="77.5055%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (26 samples, 0.55%)</title><rect x="77.2133%" y="501" width="0.5481%" height="15" fill="rgb(247,145,37)" fg:x="3663" fg:w="26"/><text x="77.4633%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.02%)</title><rect x="77.7614%" y="501" width="0.0211%" height="15" fill="rgb(209,117,53)" fg:x="3689" fg:w="1"/><text x="78.0114%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.02%)</title><rect x="77.7614%" y="485" width="0.0211%" height="15" fill="rgb(212,90,42)" fg:x="3689" fg:w="1"/><text x="78.0114%" y="495.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::new (53 samples, 1.12%)</title><rect x="77.0447%" y="517" width="1.1172%" height="15" fill="rgb(218,164,37)" fg:x="3655" fg:w="53"/><text x="77.2947%" y="527.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter_mut (57 samples, 1.20%)</title><rect x="77.0447%" y="533" width="1.2015%" height="15" fill="rgb(246,65,34)" fg:x="3655" fg:w="57"/><text x="77.2947%" y="543.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (2 samples, 0.04%)</title><rect x="78.2462%" y="485" width="0.0422%" height="15" fill="rgb(231,100,33)" fg:x="3712" fg:w="2"/><text x="78.4962%" y="495.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (14 samples, 0.30%)</title><rect x="78.2462%" y="501" width="0.2951%" height="15" fill="rgb(228,126,14)" fg:x="3712" fg:w="14"/><text x="78.4962%" y="511.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (18 samples, 0.38%)</title><rect x="78.2462%" y="517" width="0.3794%" height="15" fill="rgb(215,173,21)" fg:x="3712" fg:w="18"/><text x="78.4962%" y="527.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (2 samples, 0.04%)</title><rect x="78.6256%" y="469" width="0.0422%" height="15" fill="rgb(210,6,40)" fg:x="3730" fg:w="2"/><text x="78.8756%" y="479.50"></text></g><g><title>core::ptr::null_mut (3 samples, 0.06%)</title><rect x="78.6256%" y="485" width="0.0632%" height="15" fill="rgb(212,48,18)" fg:x="3730" fg:w="3"/><text x="78.8756%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (14 samples, 0.30%)</title><rect x="78.6889%" y="485" width="0.2951%" height="15" fill="rgb(230,214,11)" fg:x="3733" fg:w="14"/><text x="78.9389%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (27 samples, 0.57%)</title><rect x="78.6256%" y="501" width="0.5691%" height="15" fill="rgb(254,105,39)" fg:x="3730" fg:w="27"/><text x="78.8756%" y="511.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (6 samples, 0.13%)</title><rect x="79.1948%" y="469" width="0.1265%" height="15" fill="rgb(245,158,5)" fg:x="3757" fg:w="6"/><text x="79.4448%" y="479.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (11 samples, 0.23%)</title><rect x="79.1948%" y="485" width="0.2319%" height="15" fill="rgb(249,208,11)" fg:x="3757" fg:w="11"/><text x="79.4448%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (23 samples, 0.48%)</title><rect x="79.1948%" y="501" width="0.4848%" height="15" fill="rgb(210,39,28)" fg:x="3757" fg:w="23"/><text x="79.4448%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (61 samples, 1.29%)</title><rect x="78.6256%" y="517" width="1.2858%" height="15" fill="rgb(211,56,53)" fg:x="3730" fg:w="61"/><text x="78.8756%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (87 samples, 1.83%)</title><rect x="78.2462%" y="533" width="1.8339%" height="15" fill="rgb(226,201,30)" fg:x="3712" fg:w="87"/><text x="78.4962%" y="543.50">&lt;..</text></g><g><title>&lt;&amp;mut alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (150 samples, 3.16%)</title><rect x="77.0447%" y="549" width="3.1619%" height="15" fill="rgb(239,101,34)" fg:x="3655" fg:w="150"/><text x="77.2947%" y="559.50">&lt;&amp;m..</text></g><g><title>scheduler::task::Task::remove_slot (3,729 samples, 78.60%)</title><rect x="2.9089%" y="565" width="78.6046%" height="15" fill="rgb(226,209,5)" fg:x="138" fg:w="3729"/><text x="3.1589%" y="575.50">scheduler::task::Task::remove_slot</text></g><g><title>core::slice::&lt;impl [T]&gt;::as_ptr (2 samples, 0.04%)</title><rect x="81.5135%" y="501" width="0.0422%" height="15" fill="rgb(250,105,47)" fg:x="3867" fg:w="2"/><text x="81.7635%" y="511.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.02%)</title><rect x="81.5556%" y="501" width="0.0211%" height="15" fill="rgb(230,72,3)" fg:x="3869" fg:w="1"/><text x="81.8056%" y="511.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (4 samples, 0.08%)</title><rect x="81.5767%" y="469" width="0.0843%" height="15" fill="rgb(232,218,39)" fg:x="3870" fg:w="4"/><text x="81.8267%" y="479.50"></text></g><g><title>core::ptr::null (9 samples, 0.19%)</title><rect x="81.5767%" y="485" width="0.1897%" height="15" fill="rgb(248,166,6)" fg:x="3870" fg:w="9"/><text x="81.8267%" y="495.50"></text></g><g><title>core::ptr::invalid (5 samples, 0.11%)</title><rect x="81.6610%" y="469" width="0.1054%" height="15" fill="rgb(247,89,20)" fg:x="3874" fg:w="5"/><text x="81.9110%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (7 samples, 0.15%)</title><rect x="81.7664%" y="485" width="0.1476%" height="15" fill="rgb(248,130,54)" fg:x="3879" fg:w="7"/><text x="82.0164%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (21 samples, 0.44%)</title><rect x="81.5767%" y="501" width="0.4427%" height="15" fill="rgb(234,196,4)" fg:x="3870" fg:w="21"/><text x="81.8267%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.02%)</title><rect x="82.0194%" y="501" width="0.0211%" height="15" fill="rgb(250,143,31)" fg:x="3891" fg:w="1"/><text x="82.2694%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.02%)</title><rect x="82.0194%" y="485" width="0.0211%" height="15" fill="rgb(211,110,34)" fg:x="3891" fg:w="1"/><text x="82.2694%" y="495.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (35 samples, 0.74%)</title><rect x="81.5135%" y="517" width="0.7378%" height="15" fill="rgb(215,124,48)" fg:x="3867" fg:w="35"/><text x="81.7635%" y="527.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (38 samples, 0.80%)</title><rect x="81.5135%" y="533" width="0.8010%" height="15" fill="rgb(216,46,13)" fg:x="3867" fg:w="38"/><text x="81.7635%" y="543.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (2 samples, 0.04%)</title><rect x="82.3145%" y="485" width="0.0422%" height="15" fill="rgb(205,184,25)" fg:x="3905" fg:w="2"/><text x="82.5645%" y="495.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.02%)</title><rect x="82.3567%" y="485" width="0.0211%" height="15" fill="rgb(228,1,10)" fg:x="3907" fg:w="1"/><text x="82.6067%" y="495.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (4 samples, 0.08%)</title><rect x="82.3145%" y="501" width="0.0843%" height="15" fill="rgb(213,116,27)" fg:x="3905" fg:w="4"/><text x="82.5645%" y="511.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (5 samples, 0.11%)</title><rect x="82.3988%" y="501" width="0.1054%" height="15" fill="rgb(241,95,50)" fg:x="3909" fg:w="5"/><text x="82.6488%" y="511.50"></text></g><g><title>core::ptr::null_mut (3 samples, 0.06%)</title><rect x="82.5042%" y="485" width="0.0632%" height="15" fill="rgb(238,48,32)" fg:x="3914" fg:w="3"/><text x="82.7542%" y="495.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (3 samples, 0.06%)</title><rect x="82.5042%" y="469" width="0.0632%" height="15" fill="rgb(235,113,49)" fg:x="3914" fg:w="3"/><text x="82.7542%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (13 samples, 0.27%)</title><rect x="82.5675%" y="485" width="0.2740%" height="15" fill="rgb(205,127,43)" fg:x="3917" fg:w="13"/><text x="82.8175%" y="495.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="82.8415%" y="485" width="0.0211%" height="15" fill="rgb(250,162,2)" fg:x="3930" fg:w="1"/><text x="83.0915%" y="495.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="82.8415%" y="469" width="0.0211%" height="15" fill="rgb(220,13,41)" fg:x="3930" fg:w="1"/><text x="83.0915%" y="479.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="82.8415%" y="453" width="0.0211%" height="15" fill="rgb(249,221,25)" fg:x="3930" fg:w="1"/><text x="83.0915%" y="463.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="82.8415%" y="437" width="0.0211%" height="15" fill="rgb(215,208,19)" fg:x="3930" fg:w="1"/><text x="83.0915%" y="447.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="82.8415%" y="421" width="0.0211%" height="15" fill="rgb(236,175,2)" fg:x="3930" fg:w="1"/><text x="83.0915%" y="431.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="82.8415%" y="405" width="0.0211%" height="15" fill="rgb(241,52,2)" fg:x="3930" fg:w="1"/><text x="83.0915%" y="415.50"></text></g><g><title>amdgpu_irq_handler (1 samples, 0.02%)</title><rect x="82.8415%" y="389" width="0.0211%" height="15" fill="rgb(248,140,14)" fg:x="3930" fg:w="1"/><text x="83.0915%" y="399.50"></text></g><g><title>amdgpu_ih_process (1 samples, 0.02%)</title><rect x="82.8415%" y="373" width="0.0211%" height="15" fill="rgb(253,22,42)" fg:x="3930" fg:w="1"/><text x="83.0915%" y="383.50"></text></g><g><title>amdgpu_irq_dispatch (1 samples, 0.02%)</title><rect x="82.8415%" y="357" width="0.0211%" height="15" fill="rgb(234,61,47)" fg:x="3930" fg:w="1"/><text x="83.0915%" y="367.50"></text></g><g><title>amdgpu_dm_irq_handler (1 samples, 0.02%)</title><rect x="82.8415%" y="341" width="0.0211%" height="15" fill="rgb(208,226,15)" fg:x="3930" fg:w="1"/><text x="83.0915%" y="351.50"></text></g><g><title>drm_crtc_handle_vblank (1 samples, 0.02%)</title><rect x="82.8415%" y="325" width="0.0211%" height="15" fill="rgb(217,221,4)" fg:x="3930" fg:w="1"/><text x="83.0915%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (29 samples, 0.61%)</title><rect x="82.5042%" y="501" width="0.6113%" height="15" fill="rgb(212,174,34)" fg:x="3914" fg:w="29"/><text x="82.7542%" y="511.50"></text></g><g><title>core::ptr::null (1 samples, 0.02%)</title><rect x="83.1155%" y="485" width="0.0211%" height="15" fill="rgb(253,83,4)" fg:x="3943" fg:w="1"/><text x="83.3655%" y="495.50"></text></g><g><title>core::ptr::invalid (1 samples, 0.02%)</title><rect x="83.1155%" y="469" width="0.0211%" height="15" fill="rgb(250,195,49)" fg:x="3943" fg:w="1"/><text x="83.3655%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (7 samples, 0.15%)</title><rect x="83.1366%" y="485" width="0.1476%" height="15" fill="rgb(241,192,25)" fg:x="3944" fg:w="7"/><text x="83.3866%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (11 samples, 0.23%)</title><rect x="83.1155%" y="501" width="0.2319%" height="15" fill="rgb(208,124,10)" fg:x="3943" fg:w="11"/><text x="83.3655%" y="511.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (57 samples, 1.20%)</title><rect x="82.3145%" y="517" width="1.2015%" height="15" fill="rgb(222,33,0)" fg:x="3905" fg:w="57"/><text x="82.5645%" y="527.50"></text></g><g><title>&lt;scheduler::goal::Tag as core::cmp::PartialEq&gt;::eq (12 samples, 0.25%)</title><rect x="83.5160%" y="501" width="0.2530%" height="15" fill="rgb(234,209,28)" fg:x="3962" fg:w="12"/><text x="83.7660%" y="511.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains::{{closure}} (14 samples, 0.30%)</title><rect x="83.5160%" y="517" width="0.2951%" height="15" fill="rgb(224,11,23)" fg:x="3962" fg:w="14"/><text x="83.7660%" y="527.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (77 samples, 1.62%)</title><rect x="82.3145%" y="533" width="1.6231%" height="15" fill="rgb(232,99,1)" fg:x="3905" fg:w="77"/><text x="82.5645%" y="543.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (122 samples, 2.57%)</title><rect x="81.5135%" y="549" width="2.5717%" height="15" fill="rgb(237,95,45)" fg:x="3867" fg:w="122"/><text x="81.7635%" y="559.50">&lt;T..</text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (130 samples, 2.74%)</title><rect x="81.5135%" y="565" width="2.7403%" height="15" fill="rgb(208,109,11)" fg:x="3867" fg:w="130"/><text x="81.7635%" y="575.50">co..</text></g><g><title>core::ptr::read (15 samples, 0.32%)</title><rect x="84.2538%" y="517" width="0.3162%" height="15" fill="rgb(216,190,48)" fg:x="3997" fg:w="15"/><text x="84.5038%" y="527.50"></text></g><g><title>core::mem::replace (31 samples, 0.65%)</title><rect x="84.2538%" y="533" width="0.6535%" height="15" fill="rgb(251,171,36)" fg:x="3997" fg:w="31"/><text x="84.5038%" y="543.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (6 samples, 0.13%)</title><rect x="84.9073%" y="533" width="0.1265%" height="15" fill="rgb(230,62,22)" fg:x="4028" fg:w="6"/><text x="85.1573%" y="543.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for usize&gt;::clone (5 samples, 0.11%)</title><rect x="85.0337%" y="533" width="0.1054%" height="15" fill="rgb(225,114,35)" fg:x="4034" fg:w="5"/><text x="85.2837%" y="543.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (2 samples, 0.04%)</title><rect x="85.1391%" y="517" width="0.0422%" height="15" fill="rgb(215,118,42)" fg:x="4039" fg:w="2"/><text x="85.3891%" y="527.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (4 samples, 0.08%)</title><rect x="85.1391%" y="533" width="0.0843%" height="15" fill="rgb(243,119,21)" fg:x="4039" fg:w="4"/><text x="85.3891%" y="543.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (51 samples, 1.08%)</title><rect x="84.2538%" y="549" width="1.0750%" height="15" fill="rgb(252,177,53)" fg:x="3997" fg:w="51"/><text x="84.5038%" y="559.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (54 samples, 1.14%)</title><rect x="84.2538%" y="565" width="1.1383%" height="15" fill="rgb(237,209,29)" fg:x="3997" fg:w="54"/><text x="84.5038%" y="575.50"></text></g><g><title>core::option::Option&lt;T&gt;::expect (1 samples, 0.02%)</title><rect x="85.3921%" y="549" width="0.0211%" height="15" fill="rgb(212,65,23)" fg:x="4051" fg:w="1"/><text x="85.6421%" y="559.50"></text></g><g><title>chrono::naive::date::NaiveDate::and_hms_opt_opt (1 samples, 0.02%)</title><rect x="85.4132%" y="549" width="0.0211%" height="15" fill="rgb(230,222,46)" fg:x="4052" fg:w="1"/><text x="85.6632%" y="559.50"></text></g><g><title>chrono::naive::date::NaiveDate::and_hms_opt (3 samples, 0.06%)</title><rect x="85.3921%" y="565" width="0.0632%" height="15" fill="rgb(215,135,32)" fg:x="4051" fg:w="3"/><text x="85.6421%" y="575.50"></text></g><g><title>core::ptr::read (1 samples, 0.02%)</title><rect x="85.4553%" y="549" width="0.0211%" height="15" fill="rgb(246,101,22)" fg:x="4054" fg:w="1"/><text x="85.7053%" y="559.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (1 samples, 0.02%)</title><rect x="85.4553%" y="533" width="0.0211%" height="15" fill="rgb(206,107,13)" fg:x="4054" fg:w="1"/><text x="85.7053%" y="543.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::into_inner (1 samples, 0.02%)</title><rect x="85.4553%" y="517" width="0.0211%" height="15" fill="rgb(250,100,44)" fg:x="4054" fg:w="1"/><text x="85.7053%" y="527.50"></text></g><g><title>__memcpy_ssse3_back (1 samples, 0.02%)</title><rect x="85.4553%" y="501" width="0.0211%" height="15" fill="rgb(231,147,38)" fg:x="4054" fg:w="1"/><text x="85.7053%" y="511.50"></text></g><g><title>core::intrinsics::copy (34 samples, 0.72%)</title><rect x="85.4764%" y="549" width="0.7167%" height="15" fill="rgb(229,8,40)" fg:x="4055" fg:w="34"/><text x="85.7264%" y="559.50"></text></g><g><title>__memmove_ssse3_back (34 samples, 0.72%)</title><rect x="85.4764%" y="533" width="0.7167%" height="15" fill="rgb(221,135,30)" fg:x="4055" fg:w="34"/><text x="85.7264%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.02%)</title><rect x="86.1931%" y="549" width="0.0211%" height="15" fill="rgb(249,193,18)" fg:x="4089" fg:w="1"/><text x="86.4431%" y="559.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.02%)</title><rect x="86.1931%" y="533" width="0.0211%" height="15" fill="rgb(209,133,39)" fg:x="4089" fg:w="1"/><text x="86.4431%" y="543.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.02%)</title><rect x="86.1931%" y="517" width="0.0211%" height="15" fill="rgb(232,100,14)" fg:x="4089" fg:w="1"/><text x="86.4431%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::remove (37 samples, 0.78%)</title><rect x="85.4553%" y="565" width="0.7799%" height="15" fill="rgb(224,185,1)" fg:x="4054" fg:w="37"/><text x="85.7053%" y="575.50"></text></g><g><title>__memcpy_ssse3_back (1 samples, 0.02%)</title><rect x="86.2142%" y="549" width="0.0211%" height="15" fill="rgb(223,139,8)" fg:x="4090" fg:w="1"/><text x="86.4642%" y="559.50"></text></g><g><title>__memcpy_ssse3_back (1 samples, 0.02%)</title><rect x="86.2352%" y="549" width="0.0211%" height="15" fill="rgb(232,213,38)" fg:x="4091" fg:w="1"/><text x="86.4852%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.04%)</title><rect x="86.2352%" y="565" width="0.0422%" height="15" fill="rgb(207,94,22)" fg:x="4091" fg:w="2"/><text x="86.4852%" y="575.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const [T]&gt;::as_ptr (3 samples, 0.06%)</title><rect x="86.2774%" y="501" width="0.0632%" height="15" fill="rgb(219,183,54)" fg:x="4093" fg:w="3"/><text x="86.5274%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (6 samples, 0.13%)</title><rect x="86.3406%" y="501" width="0.1265%" height="15" fill="rgb(216,185,54)" fg:x="4096" fg:w="6"/><text x="86.5906%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (6 samples, 0.13%)</title><rect x="86.3406%" y="485" width="0.1265%" height="15" fill="rgb(254,217,39)" fg:x="4096" fg:w="6"/><text x="86.5906%" y="495.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (17 samples, 0.36%)</title><rect x="86.2774%" y="517" width="0.3583%" height="15" fill="rgb(240,178,23)" fg:x="4093" fg:w="17"/><text x="86.5274%" y="527.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (25 samples, 0.53%)</title><rect x="86.2774%" y="533" width="0.5270%" height="15" fill="rgb(218,11,47)" fg:x="4093" fg:w="25"/><text x="86.5274%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.02%)</title><rect x="86.8044%" y="485" width="0.0211%" height="15" fill="rgb(218,51,51)" fg:x="4118" fg:w="1"/><text x="87.0544%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;scheduler::task::Task&gt;&gt; (2 samples, 0.04%)</title><rect x="86.8044%" y="533" width="0.0422%" height="15" fill="rgb(238,126,27)" fg:x="4118" fg:w="2"/><text x="87.0544%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;scheduler::task::Task&gt;&gt; (2 samples, 0.04%)</title><rect x="86.8044%" y="517" width="0.0422%" height="15" fill="rgb(249,202,22)" fg:x="4118" fg:w="2"/><text x="87.0544%" y="527.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="86.8044%" y="501" width="0.0422%" height="15" fill="rgb(254,195,49)" fg:x="4118" fg:w="2"/><text x="87.0544%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="86.8255%" y="485" width="0.0211%" height="15" fill="rgb(208,123,14)" fg:x="4119" fg:w="1"/><text x="87.0755%" y="495.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="86.8255%" y="469" width="0.0211%" height="15" fill="rgb(224,200,8)" fg:x="4119" fg:w="1"/><text x="87.0755%" y="479.50"></text></g><g><title>_int_free (1 samples, 0.02%)</title><rect x="86.8255%" y="453" width="0.0211%" height="15" fill="rgb(217,61,36)" fg:x="4119" fg:w="1"/><text x="87.0755%" y="463.50"></text></g><g><title>systrim.isra.0.constprop.0 (1 samples, 0.02%)</title><rect x="86.8255%" y="437" width="0.0211%" height="15" fill="rgb(206,35,45)" fg:x="4119" fg:w="1"/><text x="87.0755%" y="447.50"></text></g><g><title>__GI___default_morecore (1 samples, 0.02%)</title><rect x="86.8255%" y="421" width="0.0211%" height="15" fill="rgb(217,65,33)" fg:x="4119" fg:w="1"/><text x="87.0755%" y="431.50"></text></g><g><title>__GI___sbrk (1 samples, 0.02%)</title><rect x="86.8255%" y="405" width="0.0211%" height="15" fill="rgb(222,158,48)" fg:x="4119" fg:w="1"/><text x="87.0755%" y="415.50"></text></g><g><title>__brk (1 samples, 0.02%)</title><rect x="86.8255%" y="389" width="0.0211%" height="15" fill="rgb(254,2,54)" fg:x="4119" fg:w="1"/><text x="87.0755%" y="399.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="86.8255%" y="373" width="0.0211%" height="15" fill="rgb(250,143,38)" fg:x="4119" fg:w="1"/><text x="87.0755%" y="383.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="86.8255%" y="357" width="0.0211%" height="15" fill="rgb(248,25,0)" fg:x="4119" fg:w="1"/><text x="87.0755%" y="367.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="86.8255%" y="341" width="0.0211%" height="15" fill="rgb(206,152,27)" fg:x="4119" fg:w="1"/><text x="87.0755%" y="351.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="86.8255%" y="325" width="0.0211%" height="15" fill="rgb(240,77,30)" fg:x="4119" fg:w="1"/><text x="87.0755%" y="335.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="86.8255%" y="309" width="0.0211%" height="15" fill="rgb(231,5,3)" fg:x="4119" fg:w="1"/><text x="87.0755%" y="319.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="86.8255%" y="293" width="0.0211%" height="15" fill="rgb(207,226,32)" fg:x="4119" fg:w="1"/><text x="87.0755%" y="303.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="86.8255%" y="277" width="0.0211%" height="15" fill="rgb(222,207,47)" fg:x="4119" fg:w="1"/><text x="87.0755%" y="287.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="86.8255%" y="261" width="0.0211%" height="15" fill="rgb(229,115,45)" fg:x="4119" fg:w="1"/><text x="87.0755%" y="271.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="86.8255%" y="245" width="0.0211%" height="15" fill="rgb(224,191,6)" fg:x="4119" fg:w="1"/><text x="87.0755%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::slice::merge_sort::Run&gt;&gt; (1 samples, 0.02%)</title><rect x="86.8465%" y="533" width="0.0211%" height="15" fill="rgb(230,227,24)" fg:x="4120" fg:w="1"/><text x="87.0965%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::slice::merge_sort::Run&gt;&gt; (1 samples, 0.02%)</title><rect x="86.8465%" y="517" width="0.0211%" height="15" fill="rgb(228,80,19)" fg:x="4120" fg:w="1"/><text x="87.0965%" y="527.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="86.8465%" y="501" width="0.0211%" height="15" fill="rgb(247,229,0)" fg:x="4120" fg:w="1"/><text x="87.0965%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="86.8465%" y="485" width="0.0211%" height="15" fill="rgb(237,194,15)" fg:x="4120" fg:w="1"/><text x="87.0965%" y="495.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.02%)</title><rect x="86.8465%" y="469" width="0.0211%" height="15" fill="rgb(219,203,20)" fg:x="4120" fg:w="1"/><text x="87.0965%" y="479.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::new_unchecked (1 samples, 0.02%)</title><rect x="86.8676%" y="469" width="0.0211%" height="15" fill="rgb(234,128,8)" fg:x="4121" fg:w="1"/><text x="87.1176%" y="479.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.02%)</title><rect x="86.8676%" y="453" width="0.0211%" height="15" fill="rgb(248,202,8)" fg:x="4121" fg:w="1"/><text x="87.1176%" y="463.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;[T]&gt;::slice_from_raw_parts (1 samples, 0.02%)</title><rect x="86.8887%" y="437" width="0.0211%" height="15" fill="rgb(206,104,37)" fg:x="4122" fg:w="1"/><text x="87.1387%" y="447.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="86.9098%" y="389" width="0.0211%" height="15" fill="rgb(223,8,27)" fg:x="4123" fg:w="1"/><text x="87.1598%" y="399.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="86.9098%" y="373" width="0.0211%" height="15" fill="rgb(216,217,28)" fg:x="4123" fg:w="1"/><text x="87.1598%" y="383.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="86.9098%" y="357" width="0.0211%" height="15" fill="rgb(249,199,1)" fg:x="4123" fg:w="1"/><text x="87.1598%" y="367.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="86.9098%" y="341" width="0.0211%" height="15" fill="rgb(240,85,17)" fg:x="4123" fg:w="1"/><text x="87.1598%" y="351.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="86.9098%" y="325" width="0.0211%" height="15" fill="rgb(206,108,45)" fg:x="4123" fg:w="1"/><text x="87.1598%" y="335.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.06%)</title><rect x="86.9098%" y="421" width="0.0632%" height="15" fill="rgb(245,210,41)" fg:x="4123" fg:w="3"/><text x="87.1598%" y="431.50"></text></g><g><title>_int_malloc (3 samples, 0.06%)</title><rect x="86.9098%" y="405" width="0.0632%" height="15" fill="rgb(206,13,37)" fg:x="4123" fg:w="3"/><text x="87.1598%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (6 samples, 0.13%)</title><rect x="86.8676%" y="533" width="0.1265%" height="15" fill="rgb(250,61,18)" fg:x="4121" fg:w="6"/><text x="87.1176%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6 samples, 0.13%)</title><rect x="86.8676%" y="517" width="0.1265%" height="15" fill="rgb(235,172,48)" fg:x="4121" fg:w="6"/><text x="87.1176%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.13%)</title><rect x="86.8676%" y="501" width="0.1265%" height="15" fill="rgb(249,201,17)" fg:x="4121" fg:w="6"/><text x="87.1176%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6 samples, 0.13%)</title><rect x="86.8676%" y="485" width="0.1265%" height="15" fill="rgb(219,208,6)" fg:x="4121" fg:w="6"/><text x="87.1176%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.11%)</title><rect x="86.8887%" y="469" width="0.1054%" height="15" fill="rgb(248,31,23)" fg:x="4122" fg:w="5"/><text x="87.1387%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.11%)</title><rect x="86.8887%" y="453" width="0.1054%" height="15" fill="rgb(245,15,42)" fg:x="4122" fg:w="5"/><text x="87.1387%" y="463.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.08%)</title><rect x="86.9098%" y="437" width="0.0843%" height="15" fill="rgb(222,217,39)" fg:x="4123" fg:w="4"/><text x="87.1598%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.02%)</title><rect x="86.9941%" y="533" width="0.0211%" height="15" fill="rgb(210,219,27)" fg:x="4127" fg:w="1"/><text x="87.2441%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.04%)</title><rect x="87.0152%" y="517" width="0.0422%" height="15" fill="rgb(252,166,36)" fg:x="4128" fg:w="2"/><text x="87.2652%" y="527.50"></text></g><g><title>__memcpy_ssse3_back (2 samples, 0.04%)</title><rect x="87.0152%" y="501" width="0.0422%" height="15" fill="rgb(245,132,34)" fg:x="4128" fg:w="2"/><text x="87.2652%" y="511.50"></text></g><g><title>alloc::slice::merge (3 samples, 0.06%)</title><rect x="87.0152%" y="533" width="0.0632%" height="15" fill="rgb(236,54,3)" fg:x="4128" fg:w="3"/><text x="87.2652%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort::{{closure}} (1 samples, 0.02%)</title><rect x="87.0573%" y="517" width="0.0211%" height="15" fill="rgb(241,173,43)" fg:x="4130" fg:w="1"/><text x="87.3073%" y="527.50"></text></g><g><title>core::cmp::PartialOrd::lt (1 samples, 0.02%)</title><rect x="87.0573%" y="501" width="0.0211%" height="15" fill="rgb(215,190,9)" fg:x="4130" fg:w="1"/><text x="87.3073%" y="511.50"></text></g><g><title>&lt;scheduler::task::Task as core::cmp::PartialOrd&gt;::partial_cmp (1 samples, 0.02%)</title><rect x="87.0573%" y="485" width="0.0211%" height="15" fill="rgb(242,101,16)" fg:x="4130" fg:w="1"/><text x="87.3073%" y="495.50"></text></g><g><title>&lt;scheduler::task::Task as core::cmp::PartialOrd&gt;::partial_cmp (4 samples, 0.08%)</title><rect x="87.0784%" y="501" width="0.0843%" height="15" fill="rgb(223,190,21)" fg:x="4131" fg:w="4"/><text x="87.3284%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort::{{closure}} (11 samples, 0.23%)</title><rect x="87.0784%" y="533" width="0.2319%" height="15" fill="rgb(215,228,25)" fg:x="4131" fg:w="11"/><text x="87.3284%" y="543.50"></text></g><g><title>core::cmp::PartialOrd::lt (11 samples, 0.23%)</title><rect x="87.0784%" y="517" width="0.2319%" height="15" fill="rgb(225,36,22)" fg:x="4131" fg:w="11"/><text x="87.3284%" y="527.50"></text></g><g><title>alloc::slice::merge_sort (70 samples, 1.48%)</title><rect x="86.2774%" y="549" width="1.4755%" height="15" fill="rgb(251,106,46)" fg:x="4093" fg:w="70"/><text x="86.5274%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort (71 samples, 1.50%)</title><rect x="86.2774%" y="565" width="1.4966%" height="15" fill="rgb(208,90,1)" fg:x="4093" fg:w="71"/><text x="86.5274%" y="575.50"></text></g><g><title>&lt;scheduler::task::TaskStatus as core::cmp::PartialEq&gt;::eq (9 samples, 0.19%)</title><rect x="87.7740%" y="565" width="0.1897%" height="15" fill="rgb(243,10,4)" fg:x="4164" fg:w="9"/><text x="88.0240%" y="575.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (1 samples, 0.02%)</title><rect x="87.9637%" y="485" width="0.0211%" height="15" fill="rgb(212,137,27)" fg:x="4173" fg:w="1"/><text x="88.2137%" y="495.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i32&gt;::le (1 samples, 0.02%)</title><rect x="87.9637%" y="469" width="0.0211%" height="15" fill="rgb(231,220,49)" fg:x="4173" fg:w="1"/><text x="88.2137%" y="479.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::ops::range::RangeBounds&lt;T&gt;&gt;::start_bound (1 samples, 0.02%)</title><rect x="87.9848%" y="485" width="0.0211%" height="15" fill="rgb(237,96,20)" fg:x="4174" fg:w="1"/><text x="88.2348%" y="495.50"></text></g><g><title>core::ops::range::Range&lt;Idx&gt;::contains (3 samples, 0.06%)</title><rect x="87.9637%" y="517" width="0.0632%" height="15" fill="rgb(239,229,30)" fg:x="4173" fg:w="3"/><text x="88.2137%" y="527.50"></text></g><g><title>core::ops::range::RangeBounds::contains (3 samples, 0.06%)</title><rect x="87.9637%" y="501" width="0.0632%" height="15" fill="rgb(219,65,33)" fg:x="4173" fg:w="3"/><text x="88.2137%" y="511.50"></text></g><g><title>chrono::naive::time::NaiveTime::overflowing_add_signed (4 samples, 0.08%)</title><rect x="87.9637%" y="533" width="0.0843%" height="15" fill="rgb(243,134,7)" fg:x="4173" fg:w="4"/><text x="88.2137%" y="543.50"></text></g><g><title>&lt;time::duration::Duration as core::ops::arith::Sub&gt;::sub (1 samples, 0.02%)</title><rect x="88.0270%" y="517" width="0.0211%" height="15" fill="rgb(216,177,54)" fg:x="4176" fg:w="1"/><text x="88.2770%" y="527.50"></text></g><g><title>chrono::naive::internals::yo_to_cycle (1 samples, 0.02%)</title><rect x="88.0481%" y="517" width="0.0211%" height="15" fill="rgb(211,160,20)" fg:x="4177" fg:w="1"/><text x="88.2981%" y="527.50"></text></g><g><title>chrono::naive::internals::cycle_to_yo (1 samples, 0.02%)</title><rect x="88.0691%" y="517" width="0.0211%" height="15" fill="rgb(239,85,39)" fg:x="4178" fg:w="1"/><text x="88.3191%" y="527.50"></text></g><g><title>core::ops::range::RangeInclusive&lt;Idx&gt;::contains (2 samples, 0.04%)</title><rect x="88.0902%" y="501" width="0.0422%" height="15" fill="rgb(232,125,22)" fg:x="4179" fg:w="2"/><text x="88.3402%" y="511.50"></text></g><g><title>core::ops::range::RangeBounds::contains (2 samples, 0.04%)</title><rect x="88.0902%" y="485" width="0.0422%" height="15" fill="rgb(244,57,34)" fg:x="4179" fg:w="2"/><text x="88.3402%" y="495.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (2 samples, 0.04%)</title><rect x="88.0902%" y="469" width="0.0422%" height="15" fill="rgb(214,203,32)" fg:x="4179" fg:w="2"/><text x="88.3402%" y="479.50"></text></g><g><title>chrono::naive::date::NaiveDate::checked_add_signed (6 samples, 0.13%)</title><rect x="88.0481%" y="533" width="0.1265%" height="15" fill="rgb(207,58,43)" fg:x="4177" fg:w="6"/><text x="88.2981%" y="543.50"></text></g><g><title>chrono::naive::date::NaiveDate::from_of (4 samples, 0.08%)</title><rect x="88.0902%" y="517" width="0.0843%" height="15" fill="rgb(215,193,15)" fg:x="4179" fg:w="4"/><text x="88.3402%" y="527.50"></text></g><g><title>&lt;chrono::naive::datetime::NaiveDateTime as core::ops::arith::Add&lt;time::duration::Duration&gt;&gt;::add (11 samples, 0.23%)</title><rect x="87.9637%" y="565" width="0.2319%" height="15" fill="rgb(232,15,44)" fg:x="4173" fg:w="11"/><text x="88.2137%" y="575.50"></text></g><g><title>chrono::naive::datetime::NaiveDateTime::checked_add_signed (11 samples, 0.23%)</title><rect x="87.9637%" y="549" width="0.2319%" height="15" fill="rgb(212,3,48)" fg:x="4173" fg:w="11"/><text x="88.2137%" y="559.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (6 samples, 0.13%)</title><rect x="88.1956%" y="533" width="0.1265%" height="15" fill="rgb(218,128,7)" fg:x="4184" fg:w="6"/><text x="88.4456%" y="543.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (12 samples, 0.25%)</title><rect x="88.1956%" y="549" width="0.2530%" height="15" fill="rgb(226,216,39)" fg:x="4184" fg:w="12"/><text x="88.4456%" y="559.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (4 samples, 0.08%)</title><rect x="88.4486%" y="501" width="0.0843%" height="15" fill="rgb(243,47,51)" fg:x="4196" fg:w="4"/><text x="88.6986%" y="511.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="88.5329%" y="501" width="0.0211%" height="15" fill="rgb(241,183,40)" fg:x="4200" fg:w="1"/><text x="88.7829%" y="511.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="88.5329%" y="485" width="0.0211%" height="15" fill="rgb(231,217,32)" fg:x="4200" fg:w="1"/><text x="88.7829%" y="495.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="88.5329%" y="469" width="0.0211%" height="15" fill="rgb(229,61,38)" fg:x="4200" fg:w="1"/><text x="88.7829%" y="479.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (9 samples, 0.19%)</title><rect x="88.4486%" y="517" width="0.1897%" height="15" fill="rgb(225,210,5)" fg:x="4196" fg:w="9"/><text x="88.6986%" y="527.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (13 samples, 0.27%)</title><rect x="88.4486%" y="533" width="0.2740%" height="15" fill="rgb(231,79,45)" fg:x="4196" fg:w="13"/><text x="88.6986%" y="543.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (1 samples, 0.02%)</title><rect x="88.7226%" y="485" width="0.0211%" height="15" fill="rgb(224,100,7)" fg:x="4209" fg:w="1"/><text x="88.9726%" y="495.50"></text></g><g><title>core::ptr::null_mut (2 samples, 0.04%)</title><rect x="88.7226%" y="501" width="0.0422%" height="15" fill="rgb(241,198,18)" fg:x="4209" fg:w="2"/><text x="88.9726%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (14 samples, 0.30%)</title><rect x="88.7648%" y="501" width="0.2951%" height="15" fill="rgb(252,97,53)" fg:x="4211" fg:w="14"/><text x="89.0148%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (18 samples, 0.38%)</title><rect x="88.7226%" y="517" width="0.3794%" height="15" fill="rgb(220,88,7)" fg:x="4209" fg:w="18"/><text x="88.9726%" y="527.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (2 samples, 0.04%)</title><rect x="89.1020%" y="485" width="0.0422%" height="15" fill="rgb(213,176,14)" fg:x="4227" fg:w="2"/><text x="89.3520%" y="495.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (10 samples, 0.21%)</title><rect x="89.1020%" y="501" width="0.2108%" height="15" fill="rgb(246,73,7)" fg:x="4227" fg:w="10"/><text x="89.3520%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (13 samples, 0.27%)</title><rect x="89.1020%" y="517" width="0.2740%" height="15" fill="rgb(245,64,36)" fg:x="4227" fg:w="13"/><text x="89.3520%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (36 samples, 0.76%)</title><rect x="88.7226%" y="533" width="0.7589%" height="15" fill="rgb(245,80,10)" fg:x="4209" fg:w="36"/><text x="88.9726%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (52 samples, 1.10%)</title><rect x="88.4486%" y="549" width="1.0961%" height="15" fill="rgb(232,107,50)" fg:x="4196" fg:w="52"/><text x="88.6986%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (65 samples, 1.37%)</title><rect x="88.1956%" y="565" width="1.3702%" height="15" fill="rgb(253,3,0)" fg:x="4184" fg:w="65"/><text x="88.4456%" y="575.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (11 samples, 0.23%)</title><rect x="89.5658%" y="533" width="0.2319%" height="15" fill="rgb(212,99,53)" fg:x="4249" fg:w="11"/><text x="89.8158%" y="543.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (29 samples, 0.61%)</title><rect x="89.5658%" y="549" width="0.6113%" height="15" fill="rgb(249,111,54)" fg:x="4249" fg:w="29"/><text x="89.8158%" y="559.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (5 samples, 0.11%)</title><rect x="90.1771%" y="501" width="0.1054%" height="15" fill="rgb(249,55,30)" fg:x="4278" fg:w="5"/><text x="90.4271%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::cast (2 samples, 0.04%)</title><rect x="90.2825%" y="501" width="0.0422%" height="15" fill="rgb(237,47,42)" fg:x="4283" fg:w="2"/><text x="90.5325%" y="511.50"></text></g><g><title>core::ptr::slice_from_raw_parts (25 samples, 0.53%)</title><rect x="90.1771%" y="517" width="0.5270%" height="15" fill="rgb(211,20,18)" fg:x="4278" fg:w="25"/><text x="90.4271%" y="527.50"></text></g><g><title>core::slice::raw::from_raw_parts (31 samples, 0.65%)</title><rect x="90.1771%" y="533" width="0.6535%" height="15" fill="rgb(231,203,46)" fg:x="4278" fg:w="31"/><text x="90.4271%" y="543.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (7 samples, 0.15%)</title><rect x="90.8305%" y="485" width="0.1476%" height="15" fill="rgb(237,142,3)" fg:x="4309" fg:w="7"/><text x="91.0805%" y="495.50"></text></g><g><title>core::ptr::invalid_mut (4 samples, 0.08%)</title><rect x="90.9781%" y="485" width="0.0843%" height="15" fill="rgb(241,107,1)" fg:x="4316" fg:w="4"/><text x="91.2281%" y="495.50"></text></g><g><title>core::ptr::null_mut (19 samples, 0.40%)</title><rect x="90.8305%" y="501" width="0.4005%" height="15" fill="rgb(229,83,13)" fg:x="4309" fg:w="19"/><text x="91.0805%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (40 samples, 0.84%)</title><rect x="91.2310%" y="501" width="0.8432%" height="15" fill="rgb(241,91,40)" fg:x="4328" fg:w="40"/><text x="91.4810%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (74 samples, 1.56%)</title><rect x="90.8305%" y="517" width="1.5599%" height="15" fill="rgb(225,3,45)" fg:x="4309" fg:w="74"/><text x="91.0805%" y="527.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (9 samples, 0.19%)</title><rect x="92.3904%" y="485" width="0.1897%" height="15" fill="rgb(244,223,14)" fg:x="4383" fg:w="9"/><text x="92.6404%" y="495.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (19 samples, 0.40%)</title><rect x="92.3904%" y="501" width="0.4005%" height="15" fill="rgb(224,124,37)" fg:x="4383" fg:w="19"/><text x="92.6404%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (34 samples, 0.72%)</title><rect x="92.3904%" y="517" width="0.7167%" height="15" fill="rgb(251,171,30)" fg:x="4383" fg:w="34"/><text x="92.6404%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (119 samples, 2.51%)</title><rect x="90.8305%" y="533" width="2.5084%" height="15" fill="rgb(236,46,54)" fg:x="4309" fg:w="119"/><text x="91.0805%" y="543.50">al..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (157 samples, 3.31%)</title><rect x="90.1771%" y="549" width="3.3094%" height="15" fill="rgb(245,213,5)" fg:x="4278" fg:w="157"/><text x="90.4271%" y="559.50">&lt;al..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (225 samples, 4.74%)</title><rect x="89.5658%" y="565" width="4.7428%" height="15" fill="rgb(230,144,27)" fg:x="4249" fg:w="225"/><text x="89.8158%" y="575.50">&lt;alloc..</text></g><g><title>core::ptr::metadata::from_raw_parts (3 samples, 0.06%)</title><rect x="94.3086%" y="517" width="0.0632%" height="15" fill="rgb(220,86,6)" fg:x="4474" fg:w="3"/><text x="94.5586%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::cast (8 samples, 0.17%)</title><rect x="94.3718%" y="517" width="0.1686%" height="15" fill="rgb(240,20,13)" fg:x="4477" fg:w="8"/><text x="94.6218%" y="527.50"></text></g><g><title>core::ptr::slice_from_raw_parts (21 samples, 0.44%)</title><rect x="94.3086%" y="533" width="0.4427%" height="15" fill="rgb(217,89,34)" fg:x="4474" fg:w="21"/><text x="94.5586%" y="543.50"></text></g><g><title>core::slice::raw::from_raw_parts (23 samples, 0.48%)</title><rect x="94.3086%" y="549" width="0.4848%" height="15" fill="rgb(229,13,5)" fg:x="4474" fg:w="23"/><text x="94.5586%" y="559.50"></text></g><g><title>core::ptr::null_mut (2 samples, 0.04%)</title><rect x="94.7934%" y="517" width="0.0422%" height="15" fill="rgb(244,67,35)" fg:x="4497" fg:w="2"/><text x="95.0434%" y="527.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (2 samples, 0.04%)</title><rect x="94.7934%" y="501" width="0.0422%" height="15" fill="rgb(221,40,2)" fg:x="4497" fg:w="2"/><text x="95.0434%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (13 samples, 0.27%)</title><rect x="94.8356%" y="517" width="0.2740%" height="15" fill="rgb(237,157,21)" fg:x="4499" fg:w="13"/><text x="95.0856%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (29 samples, 0.61%)</title><rect x="94.7934%" y="533" width="0.6113%" height="15" fill="rgb(222,94,11)" fg:x="4497" fg:w="29"/><text x="95.0434%" y="543.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (2 samples, 0.04%)</title><rect x="95.4047%" y="501" width="0.0422%" height="15" fill="rgb(249,113,6)" fg:x="4526" fg:w="2"/><text x="95.6547%" y="511.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (9 samples, 0.19%)</title><rect x="95.4047%" y="517" width="0.1897%" height="15" fill="rgb(238,137,36)" fg:x="4526" fg:w="9"/><text x="95.6547%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (20 samples, 0.42%)</title><rect x="95.4047%" y="533" width="0.4216%" height="15" fill="rgb(210,102,26)" fg:x="4526" fg:w="20"/><text x="95.6547%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (61 samples, 1.29%)</title><rect x="94.7934%" y="549" width="1.2858%" height="15" fill="rgb(218,30,30)" fg:x="4497" fg:w="61"/><text x="95.0434%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (88 samples, 1.85%)</title><rect x="94.3086%" y="565" width="1.8550%" height="15" fill="rgb(214,67,26)" fg:x="4474" fg:w="88"/><text x="94.5586%" y="575.50">&lt;..</text></g><g><title>core::str::&lt;impl str&gt;::as_bytes (2 samples, 0.04%)</title><rect x="96.1636%" y="533" width="0.0422%" height="15" fill="rgb(251,9,53)" fg:x="4562" fg:w="2"/><text x="96.4136%" y="543.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::as_ptr (2 samples, 0.04%)</title><rect x="96.2057%" y="485" width="0.0422%" height="15" fill="rgb(228,204,25)" fg:x="4564" fg:w="2"/><text x="96.4557%" y="495.50"></text></g><g><title>core::mem::size_of_val (2 samples, 0.04%)</title><rect x="96.2479%" y="485" width="0.0422%" height="15" fill="rgb(207,153,8)" fg:x="4566" fg:w="2"/><text x="96.4979%" y="495.50"></text></g><g><title>[libc-2.31.so] (8 samples, 0.17%)</title><rect x="96.2901%" y="485" width="0.1686%" height="15" fill="rgb(242,9,16)" fg:x="4568" fg:w="8"/><text x="96.5401%" y="495.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (17 samples, 0.36%)</title><rect x="96.2057%" y="517" width="0.3583%" height="15" fill="rgb(217,211,10)" fg:x="4564" fg:w="17"/><text x="96.4557%" y="527.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (17 samples, 0.36%)</title><rect x="96.2057%" y="501" width="0.3583%" height="15" fill="rgb(219,228,52)" fg:x="4564" fg:w="17"/><text x="96.4557%" y="511.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (18 samples, 0.38%)</title><rect x="96.2057%" y="533" width="0.3794%" height="15" fill="rgb(231,92,29)" fg:x="4564" fg:w="18"/><text x="96.4557%" y="543.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (22 samples, 0.46%)</title><rect x="96.1636%" y="549" width="0.4637%" height="15" fill="rgb(232,8,23)" fg:x="4562" fg:w="22"/><text x="96.4136%" y="559.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (2 samples, 0.04%)</title><rect x="96.6273%" y="485" width="0.0422%" height="15" fill="rgb(216,211,34)" fg:x="4584" fg:w="2"/><text x="96.8773%" y="495.50"></text></g><g><title>core::slice::raw::from_raw_parts (5 samples, 0.11%)</title><rect x="96.6273%" y="517" width="0.1054%" height="15" fill="rgb(236,151,0)" fg:x="4584" fg:w="5"/><text x="96.8773%" y="527.50"></text></g><g><title>core::ptr::slice_from_raw_parts (5 samples, 0.11%)</title><rect x="96.6273%" y="501" width="0.1054%" height="15" fill="rgb(209,168,3)" fg:x="4584" fg:w="5"/><text x="96.8773%" y="511.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (1 samples, 0.02%)</title><rect x="96.7327%" y="469" width="0.0211%" height="15" fill="rgb(208,129,28)" fg:x="4589" fg:w="1"/><text x="96.9827%" y="479.50"></text></g><g><title>core::ptr::null_mut (2 samples, 0.04%)</title><rect x="96.7327%" y="485" width="0.0422%" height="15" fill="rgb(229,78,22)" fg:x="4589" fg:w="2"/><text x="96.9827%" y="495.50"></text></g><g><title>core::ptr::invalid_mut (1 samples, 0.02%)</title><rect x="96.7538%" y="469" width="0.0211%" height="15" fill="rgb(228,187,13)" fg:x="4590" fg:w="1"/><text x="97.0038%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (5 samples, 0.11%)</title><rect x="96.7749%" y="485" width="0.1054%" height="15" fill="rgb(240,119,24)" fg:x="4591" fg:w="5"/><text x="97.0249%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (8 samples, 0.17%)</title><rect x="96.7327%" y="501" width="0.1686%" height="15" fill="rgb(209,194,42)" fg:x="4589" fg:w="8"/><text x="96.9827%" y="511.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (2 samples, 0.04%)</title><rect x="96.9013%" y="469" width="0.0422%" height="15" fill="rgb(247,200,46)" fg:x="4597" fg:w="2"/><text x="97.1513%" y="479.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (3 samples, 0.06%)</title><rect x="96.9013%" y="485" width="0.0632%" height="15" fill="rgb(218,76,16)" fg:x="4597" fg:w="3"/><text x="97.1513%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (4 samples, 0.08%)</title><rect x="96.9013%" y="501" width="0.0843%" height="15" fill="rgb(225,21,48)" fg:x="4597" fg:w="4"/><text x="97.1513%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (15 samples, 0.32%)</title><rect x="96.7327%" y="517" width="0.3162%" height="15" fill="rgb(239,223,50)" fg:x="4589" fg:w="15"/><text x="96.9827%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (24 samples, 0.51%)</title><rect x="96.6273%" y="533" width="0.5059%" height="15" fill="rgb(244,45,21)" fg:x="4584" fg:w="24"/><text x="96.8773%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::ops::index::Index&lt;core::ops::range::RangeFull&gt;&gt;::index (26 samples, 0.55%)</title><rect x="96.6273%" y="549" width="0.5481%" height="15" fill="rgb(232,33,43)" fg:x="4584" fg:w="26"/><text x="96.8773%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (49 samples, 1.03%)</title><rect x="96.1636%" y="565" width="1.0329%" height="15" fill="rgb(209,8,3)" fg:x="4562" fg:w="49"/><text x="96.4136%" y="575.50"></text></g><g><title>scheduler::task_placer::task_placer (4,646 samples, 97.93%)</title><rect x="0.1686%" y="597" width="97.9342%" height="15" fill="rgb(214,25,53)" fg:x="8" fg:w="4646"/><text x="0.4186%" y="607.50">scheduler::task_placer::task_placer</text></g><g><title>scheduler::task_placer::schedule (4,646 samples, 97.93%)</title><rect x="0.1686%" y="581" width="97.9342%" height="15" fill="rgb(254,186,54)" fg:x="8" fg:w="4646"/><text x="0.4186%" y="591.50">scheduler::task_placer::schedule</text></g><g><title>scheduler::task::Task::new (1 samples, 0.02%)</title><rect x="98.1029%" y="565" width="0.0211%" height="15" fill="rgb(208,174,49)" fg:x="4654" fg:w="1"/><text x="98.3529%" y="575.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or (1 samples, 0.02%)</title><rect x="98.1029%" y="549" width="0.0211%" height="15" fill="rgb(233,191,51)" fg:x="4654" fg:w="1"/><text x="98.3529%" y="559.50"></text></g><g><title>scheduler::slot_generator::assign_slots (1 samples, 0.02%)</title><rect x="98.1239%" y="549" width="0.0211%" height="15" fill="rgb(222,134,10)" fg:x="4655" fg:w="1"/><text x="98.3739%" y="559.50"></text></g><g><title>&lt;chrono::naive::datetime::NaiveDateTime as core::ops::arith::Add&lt;time::duration::Duration&gt;&gt;::add (1 samples, 0.02%)</title><rect x="98.1239%" y="533" width="0.0211%" height="15" fill="rgb(230,226,20)" fg:x="4655" fg:w="1"/><text x="98.3739%" y="543.50"></text></g><g><title>chrono::naive::datetime::NaiveDateTime::checked_add_signed (1 samples, 0.02%)</title><rect x="98.1239%" y="517" width="0.0211%" height="15" fill="rgb(251,111,25)" fg:x="4655" fg:w="1"/><text x="98.3739%" y="527.50"></text></g><g><title>chrono::naive::time::NaiveTime::overflowing_add_signed (1 samples, 0.02%)</title><rect x="98.1239%" y="501" width="0.0211%" height="15" fill="rgb(224,40,46)" fg:x="4655" fg:w="1"/><text x="98.3739%" y="511.50"></text></g><g><title>core::ops::range::Range&lt;Idx&gt;::contains (1 samples, 0.02%)</title><rect x="98.1239%" y="485" width="0.0211%" height="15" fill="rgb(236,108,47)" fg:x="4655" fg:w="1"/><text x="98.3739%" y="495.50"></text></g><g><title>core::ops::range::RangeBounds::contains (1 samples, 0.02%)</title><rect x="98.1239%" y="469" width="0.0211%" height="15" fill="rgb(234,93,0)" fg:x="4655" fg:w="1"/><text x="98.3739%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::lt (1 samples, 0.02%)</title><rect x="98.1239%" y="453" width="0.0211%" height="15" fill="rgb(224,213,32)" fg:x="4655" fg:w="1"/><text x="98.3739%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i32&gt;::lt (1 samples, 0.02%)</title><rect x="98.1239%" y="437" width="0.0211%" height="15" fill="rgb(251,11,48)" fg:x="4655" fg:w="1"/><text x="98.3739%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;scheduler::slot::Slot&gt;&gt; (1 samples, 0.02%)</title><rect x="98.1450%" y="549" width="0.0211%" height="15" fill="rgb(236,173,5)" fg:x="4656" fg:w="1"/><text x="98.3950%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;scheduler::slot::Slot&gt;&gt; (1 samples, 0.02%)</title><rect x="98.1450%" y="533" width="0.0211%" height="15" fill="rgb(230,95,12)" fg:x="4656" fg:w="1"/><text x="98.3950%" y="543.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="98.1450%" y="517" width="0.0211%" height="15" fill="rgb(232,209,1)" fg:x="4656" fg:w="1"/><text x="98.3950%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="98.1450%" y="501" width="0.0211%" height="15" fill="rgb(232,6,1)" fg:x="4656" fg:w="1"/><text x="98.3950%" y="511.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.02%)</title><rect x="98.1661%" y="421" width="0.0211%" height="15" fill="rgb(210,224,50)" fg:x="4657" fg:w="1"/><text x="98.4161%" y="431.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (1 samples, 0.02%)</title><rect x="98.1661%" y="405" width="0.0211%" height="15" fill="rgb(228,127,35)" fg:x="4657" fg:w="1"/><text x="98.4161%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.04%)</title><rect x="98.1661%" y="485" width="0.0422%" height="15" fill="rgb(245,102,45)" fg:x="4657" fg:w="2"/><text x="98.4161%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.04%)</title><rect x="98.1661%" y="469" width="0.0422%" height="15" fill="rgb(214,1,49)" fg:x="4657" fg:w="2"/><text x="98.4161%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.04%)</title><rect x="98.1661%" y="453" width="0.0422%" height="15" fill="rgb(226,163,40)" fg:x="4657" fg:w="2"/><text x="98.4161%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.04%)</title><rect x="98.1661%" y="437" width="0.0422%" height="15" fill="rgb(239,212,28)" fg:x="4657" fg:w="2"/><text x="98.4161%" y="447.50"></text></g><g><title>&lt;scheduler::time_slot_iterator::TimeSlotsIterator as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="98.2083%" y="485" width="0.0211%" height="15" fill="rgb(220,20,13)" fg:x="4659" fg:w="1"/><text x="98.4583%" y="495.50"></text></g><g><title>core::cmp::PartialOrd::gt (1 samples, 0.02%)</title><rect x="98.2083%" y="469" width="0.0211%" height="15" fill="rgb(210,164,35)" fg:x="4659" fg:w="1"/><text x="98.4583%" y="479.50"></text></g><g><title>&lt;chrono::naive::datetime::NaiveDateTime as core::cmp::PartialOrd&gt;::partial_cmp (1 samples, 0.02%)</title><rect x="98.2083%" y="453" width="0.0211%" height="15" fill="rgb(248,109,41)" fg:x="4659" fg:w="1"/><text x="98.4583%" y="463.50"></text></g><g><title>&lt;chrono::naive::date::NaiveDate as core::cmp::PartialOrd&gt;::partial_cmp (1 samples, 0.02%)</title><rect x="98.2083%" y="437" width="0.0211%" height="15" fill="rgb(238,23,50)" fg:x="4659" fg:w="1"/><text x="98.4583%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="98.2293%" y="421" width="0.0211%" height="15" fill="rgb(211,48,49)" fg:x="4660" fg:w="1"/><text x="98.4793%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="98.2293%" y="405" width="0.0211%" height="15" fill="rgb(223,36,21)" fg:x="4660" fg:w="1"/><text x="98.4793%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="98.2293%" y="389" width="0.0211%" height="15" fill="rgb(207,123,46)" fg:x="4660" fg:w="1"/><text x="98.4793%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.02%)</title><rect x="98.2293%" y="373" width="0.0211%" height="15" fill="rgb(240,218,32)" fg:x="4660" fg:w="1"/><text x="98.4793%" y="383.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.02%)</title><rect x="98.2293%" y="357" width="0.0211%" height="15" fill="rgb(252,5,43)" fg:x="4660" fg:w="1"/><text x="98.4793%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.04%)</title><rect x="98.2293%" y="453" width="0.0422%" height="15" fill="rgb(252,84,19)" fg:x="4660" fg:w="2"/><text x="98.4793%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.04%)</title><rect x="98.2293%" y="437" width="0.0422%" height="15" fill="rgb(243,152,39)" fg:x="4660" fg:w="2"/><text x="98.4793%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.02%)</title><rect x="98.2504%" y="421" width="0.0211%" height="15" fill="rgb(234,160,15)" fg:x="4661" fg:w="1"/><text x="98.5004%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.02%)</title><rect x="98.2715%" y="437" width="0.0211%" height="15" fill="rgb(237,34,20)" fg:x="4662" fg:w="1"/><text x="98.5215%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (2 samples, 0.04%)</title><rect x="98.2715%" y="453" width="0.0422%" height="15" fill="rgb(229,97,13)" fg:x="4662" fg:w="2"/><text x="98.5215%" y="463.50"></text></g><g><title>core::cmp::PartialOrd::gt (1 samples, 0.02%)</title><rect x="98.3137%" y="405" width="0.0211%" height="15" fill="rgb(234,71,50)" fg:x="4664" fg:w="1"/><text x="98.5637%" y="415.50"></text></g><g><title>time::duration::Duration::seconds (2 samples, 0.04%)</title><rect x="98.3137%" y="421" width="0.0422%" height="15" fill="rgb(253,155,4)" fg:x="4664" fg:w="2"/><text x="98.5637%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::expect (1 samples, 0.02%)</title><rect x="98.3558%" y="421" width="0.0211%" height="15" fill="rgb(222,185,37)" fg:x="4666" fg:w="1"/><text x="98.6058%" y="431.50"></text></g><g><title>time::duration::Duration::hours (4 samples, 0.08%)</title><rect x="98.3137%" y="437" width="0.0843%" height="15" fill="rgb(251,177,13)" fg:x="4664" fg:w="4"/><text x="98.5637%" y="447.50"></text></g><g><title>core::num::&lt;impl i64&gt;::checked_mul (1 samples, 0.02%)</title><rect x="98.3769%" y="421" width="0.0211%" height="15" fill="rgb(250,179,40)" fg:x="4667" fg:w="1"/><text x="98.6269%" y="431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u32&gt;::partial_cmp (1 samples, 0.02%)</title><rect x="98.3980%" y="389" width="0.0211%" height="15" fill="rgb(242,44,2)" fg:x="4668" fg:w="1"/><text x="98.6480%" y="399.50"></text></g><g><title>&lt;chrono::naive::time::NaiveTime as core::cmp::PartialOrd&gt;::partial_cmp (3 samples, 0.06%)</title><rect x="98.3980%" y="405" width="0.0632%" height="15" fill="rgb(216,177,13)" fg:x="4668" fg:w="3"/><text x="98.6480%" y="415.50"></text></g><g><title>core::cmp::PartialOrd::gt (4 samples, 0.08%)</title><rect x="98.3980%" y="437" width="0.0843%" height="15" fill="rgb(216,106,43)" fg:x="4668" fg:w="4"/><text x="98.6480%" y="447.50"></text></g><g><title>&lt;chrono::naive::datetime::NaiveDateTime as core::cmp::PartialOrd&gt;::partial_cmp (4 samples, 0.08%)</title><rect x="98.3980%" y="421" width="0.0843%" height="15" fill="rgb(216,183,2)" fg:x="4668" fg:w="4"/><text x="98.6480%" y="431.50"></text></g><g><title>&lt;chrono::naive::date::NaiveDate as core::cmp::PartialOrd&gt;::partial_cmp (1 samples, 0.02%)</title><rect x="98.4612%" y="405" width="0.0211%" height="15" fill="rgb(249,75,3)" fg:x="4671" fg:w="1"/><text x="98.7112%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i32&gt;::partial_cmp (1 samples, 0.02%)</title><rect x="98.4612%" y="389" width="0.0211%" height="15" fill="rgb(219,67,39)" fg:x="4671" fg:w="1"/><text x="98.7112%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i32&gt;::cmp (1 samples, 0.02%)</title><rect x="98.4612%" y="373" width="0.0211%" height="15" fill="rgb(253,228,2)" fg:x="4671" fg:w="1"/><text x="98.7112%" y="383.50"></text></g><g><title>chrono::naive::datetime::NaiveDateTime::timestamp (1 samples, 0.02%)</title><rect x="98.4823%" y="405" width="0.0211%" height="15" fill="rgb(235,138,27)" fg:x="4672" fg:w="1"/><text x="98.7323%" y="415.50"></text></g><g><title>chrono::naive::datetime::NaiveDateTime::timestamp_nanos (2 samples, 0.04%)</title><rect x="98.4823%" y="421" width="0.0422%" height="15" fill="rgb(236,97,51)" fg:x="4672" fg:w="2"/><text x="98.7323%" y="431.50"></text></g><g><title>chrono::naive::datetime::NaiveDateTime::timestamp (1 samples, 0.02%)</title><rect x="98.5245%" y="421" width="0.0211%" height="15" fill="rgb(240,80,30)" fg:x="4674" fg:w="1"/><text x="98.7745%" y="431.50"></text></g><g><title>chrono::traits::Datelike::num_days_from_ce (1 samples, 0.02%)</title><rect x="98.5245%" y="405" width="0.0211%" height="15" fill="rgb(230,178,19)" fg:x="4674" fg:w="1"/><text x="98.7745%" y="415.50"></text></g><g><title>&lt;chrono::naive::date::NaiveDate as chrono::traits::Datelike&gt;::ordinal (1 samples, 0.02%)</title><rect x="98.5245%" y="389" width="0.0211%" height="15" fill="rgb(210,190,27)" fg:x="4674" fg:w="1"/><text x="98.7745%" y="399.50"></text></g><g><title>chrono::naive::internals::Of::ordinal (1 samples, 0.02%)</title><rect x="98.5245%" y="373" width="0.0211%" height="15" fill="rgb(222,107,31)" fg:x="4674" fg:w="1"/><text x="98.7745%" y="383.50"></text></g><g><title>&lt;chrono::naive::datetime::NaiveDateTime as scheduler::util::MyDurationRound&gt;::duration_round (5 samples, 0.11%)</title><rect x="98.4823%" y="437" width="0.1054%" height="15" fill="rgb(216,127,34)" fg:x="4672" fg:w="5"/><text x="98.7323%" y="447.50"></text></g><g><title>core::cmp::PartialOrd::lt (1 samples, 0.02%)</title><rect x="98.5877%" y="389" width="0.0211%" height="15" fill="rgb(234,116,52)" fg:x="4677" fg:w="1"/><text x="98.8377%" y="399.50"></text></g><g><title>&lt;time::duration::Duration as core::cmp::PartialOrd&gt;::partial_cmp (1 samples, 0.02%)</title><rect x="98.5877%" y="373" width="0.0211%" height="15" fill="rgb(222,124,15)" fg:x="4677" fg:w="1"/><text x="98.8377%" y="383.50"></text></g><g><title>core::cmp::PartialOrd::gt (1 samples, 0.02%)</title><rect x="98.6088%" y="389" width="0.0211%" height="15" fill="rgb(231,179,28)" fg:x="4678" fg:w="1"/><text x="98.8588%" y="399.50"></text></g><g><title>time::duration::Duration::seconds (3 samples, 0.06%)</title><rect x="98.5877%" y="405" width="0.0632%" height="15" fill="rgb(226,93,45)" fg:x="4677" fg:w="3"/><text x="98.8377%" y="415.50"></text></g><g><title>&lt;time::duration::Duration as core::cmp::PartialOrd&gt;::partial_cmp (1 samples, 0.02%)</title><rect x="98.6509%" y="357" width="0.0211%" height="15" fill="rgb(215,8,51)" fg:x="4680" fg:w="1"/><text x="98.9009%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i64&gt;::partial_cmp (1 samples, 0.02%)</title><rect x="98.6509%" y="341" width="0.0211%" height="15" fill="rgb(223,106,5)" fg:x="4680" fg:w="1"/><text x="98.9009%" y="351.50"></text></g><g><title>time::duration::Duration::seconds (2 samples, 0.04%)</title><rect x="98.6509%" y="389" width="0.0422%" height="15" fill="rgb(250,191,5)" fg:x="4680" fg:w="2"/><text x="98.9009%" y="399.50"></text></g><g><title>core::cmp::PartialOrd::lt (2 samples, 0.04%)</title><rect x="98.6509%" y="373" width="0.0422%" height="15" fill="rgb(242,132,44)" fg:x="4680" fg:w="2"/><text x="98.9009%" y="383.50"></text></g><g><title>core::num::&lt;impl i64&gt;::checked_mul (1 samples, 0.02%)</title><rect x="98.6931%" y="373" width="0.0211%" height="15" fill="rgb(251,152,29)" fg:x="4682" fg:w="1"/><text x="98.9431%" y="383.50"></text></g><g><title>time::duration::Duration::num_nanoseconds (2 samples, 0.04%)</title><rect x="98.6931%" y="389" width="0.0422%" height="15" fill="rgb(218,179,5)" fg:x="4682" fg:w="2"/><text x="98.9431%" y="399.50"></text></g><g><title>core::num::&lt;impl i64&gt;::checked_add (1 samples, 0.02%)</title><rect x="98.7142%" y="373" width="0.0211%" height="15" fill="rgb(227,67,19)" fg:x="4683" fg:w="1"/><text x="98.9642%" y="383.50"></text></g><g><title>core::num::&lt;impl i64&gt;::overflowing_add (1 samples, 0.02%)</title><rect x="98.7142%" y="357" width="0.0211%" height="15" fill="rgb(233,119,31)" fg:x="4683" fg:w="1"/><text x="98.9642%" y="367.50"></text></g><g><title>time::duration::Duration::nanoseconds (1 samples, 0.02%)</title><rect x="98.7352%" y="389" width="0.0211%" height="15" fill="rgb(241,120,22)" fg:x="4684" fg:w="1"/><text x="98.9852%" y="399.50"></text></g><g><title>time::duration::div_mod_floor_64 (1 samples, 0.02%)</title><rect x="98.7352%" y="373" width="0.0211%" height="15" fill="rgb(224,102,30)" fg:x="4684" fg:w="1"/><text x="98.9852%" y="383.50"></text></g><g><title>time::duration::mod_floor_64 (1 samples, 0.02%)</title><rect x="98.7352%" y="357" width="0.0211%" height="15" fill="rgb(210,164,37)" fg:x="4684" fg:w="1"/><text x="98.9852%" y="367.50"></text></g><g><title>core::ops::range::Range&lt;Idx&gt;::contains (1 samples, 0.02%)</title><rect x="98.7563%" y="389" width="0.0211%" height="15" fill="rgb(226,191,16)" fg:x="4685" fg:w="1"/><text x="99.0063%" y="399.50"></text></g><g><title>core::ops::range::RangeBounds::contains (1 samples, 0.02%)</title><rect x="98.7563%" y="373" width="0.0211%" height="15" fill="rgb(214,40,45)" fg:x="4685" fg:w="1"/><text x="99.0063%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::lt (1 samples, 0.02%)</title><rect x="98.7563%" y="357" width="0.0211%" height="15" fill="rgb(244,29,26)" fg:x="4685" fg:w="1"/><text x="99.0063%" y="367.50"></text></g><g><title>&lt;time::duration::Duration as core::ops::arith::Sub&gt;::sub (1 samples, 0.02%)</title><rect x="98.7774%" y="389" width="0.0211%" height="15" fill="rgb(216,16,5)" fg:x="4686" fg:w="1"/><text x="99.0274%" y="399.50"></text></g><g><title>&lt;time::duration::Duration as core::ops::arith::Add&gt;::add (2 samples, 0.04%)</title><rect x="98.7985%" y="389" width="0.0422%" height="15" fill="rgb(249,76,35)" fg:x="4687" fg:w="2"/><text x="99.0485%" y="399.50"></text></g><g><title>chrono::naive::time::NaiveTime::overflowing_add_signed (11 samples, 0.23%)</title><rect x="98.6509%" y="405" width="0.2319%" height="15" fill="rgb(207,11,44)" fg:x="4680" fg:w="11"/><text x="98.9009%" y="415.50"></text></g><g><title>&lt;time::duration::Duration as core::cmp::PartialEq&gt;::eq (2 samples, 0.04%)</title><rect x="98.8406%" y="389" width="0.0422%" height="15" fill="rgb(228,190,49)" fg:x="4689" fg:w="2"/><text x="99.0906%" y="399.50"></text></g><g><title>&lt;i32 as num_integer::Integer&gt;::div_rem (1 samples, 0.02%)</title><rect x="98.8828%" y="357" width="0.0211%" height="15" fill="rgb(214,173,12)" fg:x="4691" fg:w="1"/><text x="99.1328%" y="367.50"></text></g><g><title>&lt;i32 as num_integer::Integer&gt;::div_mod_floor (2 samples, 0.04%)</title><rect x="98.8828%" y="373" width="0.0422%" height="15" fill="rgb(218,26,35)" fg:x="4691" fg:w="2"/><text x="99.1328%" y="383.50"></text></g><g><title>num_integer::div_mod_floor (3 samples, 0.06%)</title><rect x="98.8828%" y="389" width="0.0632%" height="15" fill="rgb(220,200,19)" fg:x="4691" fg:w="3"/><text x="99.1328%" y="399.50"></text></g><g><title>core::num::&lt;impl i32&gt;::checked_add (1 samples, 0.02%)</title><rect x="98.9460%" y="389" width="0.0211%" height="15" fill="rgb(239,95,49)" fg:x="4694" fg:w="1"/><text x="99.1960%" y="399.50"></text></g><g><title>core::num::&lt;impl i32&gt;::overflowing_add (1 samples, 0.02%)</title><rect x="98.9460%" y="373" width="0.0211%" height="15" fill="rgb(235,85,53)" fg:x="4694" fg:w="1"/><text x="99.1960%" y="383.50"></text></g><g><title>chrono::naive::internals::yo_to_cycle (1 samples, 0.02%)</title><rect x="98.9671%" y="389" width="0.0211%" height="15" fill="rgb(233,133,31)" fg:x="4695" fg:w="1"/><text x="99.2171%" y="399.50"></text></g><g><title>chrono::naive::internals::cycle_to_yo (1 samples, 0.02%)</title><rect x="98.9882%" y="389" width="0.0211%" height="15" fill="rgb(218,25,20)" fg:x="4696" fg:w="1"/><text x="99.2382%" y="399.50"></text></g><g><title>chrono::naive::internals::Of::new (1 samples, 0.02%)</title><rect x="99.0093%" y="389" width="0.0211%" height="15" fill="rgb(252,210,38)" fg:x="4697" fg:w="1"/><text x="99.2593%" y="399.50"></text></g><g><title>&lt;core::ops::range::RangeInclusive&lt;T&gt; as core::ops::range::RangeBounds&lt;T&gt;&gt;::end_bound (1 samples, 0.02%)</title><rect x="99.0304%" y="341" width="0.0211%" height="15" fill="rgb(242,134,21)" fg:x="4698" fg:w="1"/><text x="99.2804%" y="351.50"></text></g><g><title>core::ops::range::RangeInclusive&lt;Idx&gt;::contains (2 samples, 0.04%)</title><rect x="99.0304%" y="373" width="0.0422%" height="15" fill="rgb(213,28,48)" fg:x="4698" fg:w="2"/><text x="99.2804%" y="383.50"></text></g><g><title>core::ops::range::RangeBounds::contains (2 samples, 0.04%)</title><rect x="99.0304%" y="357" width="0.0422%" height="15" fill="rgb(250,196,2)" fg:x="4698" fg:w="2"/><text x="99.2804%" y="367.50"></text></g><g><title>chrono::naive::internals::Of::valid (1 samples, 0.02%)</title><rect x="99.0725%" y="373" width="0.0211%" height="15" fill="rgb(227,5,17)" fg:x="4700" fg:w="1"/><text x="99.3225%" y="383.50"></text></g><g><title>core::ops::range::RangeInclusive&lt;Idx&gt;::contains (1 samples, 0.02%)</title><rect x="99.0725%" y="357" width="0.0211%" height="15" fill="rgb(221,226,24)" fg:x="4700" fg:w="1"/><text x="99.3225%" y="367.50"></text></g><g><title>core::ops::range::RangeBounds::contains (1 samples, 0.02%)</title><rect x="99.0725%" y="341" width="0.0211%" height="15" fill="rgb(211,5,48)" fg:x="4700" fg:w="1"/><text x="99.3225%" y="351.50"></text></g><g><title>chrono::naive::date::NaiveDate::from_of (5 samples, 0.11%)</title><rect x="99.0304%" y="389" width="0.1054%" height="15" fill="rgb(219,150,6)" fg:x="4698" fg:w="5"/><text x="99.2804%" y="399.50"></text></g><g><title>chrono::naive::date::NaiveDate::checked_add_signed (13 samples, 0.27%)</title><rect x="98.8828%" y="405" width="0.2740%" height="15" fill="rgb(251,46,16)" fg:x="4691" fg:w="13"/><text x="99.1328%" y="415.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.02%)</title><rect x="99.1568%" y="405" width="0.0211%" height="15" fill="rgb(220,204,40)" fg:x="4704" fg:w="1"/><text x="99.4068%" y="415.50"></text></g><g><title>chrono::naive::datetime::NaiveDateTime::checked_add_signed (29 samples, 0.61%)</title><rect x="98.5877%" y="421" width="0.6113%" height="15" fill="rgb(211,85,2)" fg:x="4677" fg:w="29"/><text x="98.8377%" y="431.50"></text></g><g><title>&lt;chrono::naive::datetime::NaiveDateTime as core::ops::arith::Add&lt;time::duration::Duration&gt;&gt;::add (30 samples, 0.63%)</title><rect x="98.5877%" y="437" width="0.6324%" height="15" fill="rgb(229,17,7)" fg:x="4677" fg:w="30"/><text x="98.8377%" y="447.50"></text></g><g><title>&lt;scheduler::time_slot_iterator::TimeSlotsIterator as core::iter::traits::iterator::Iterator&gt;::next (44 samples, 0.93%)</title><rect x="98.3137%" y="453" width="0.9275%" height="15" fill="rgb(239,72,28)" fg:x="4664" fg:w="44"/><text x="98.5637%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (54 samples, 1.14%)</title><rect x="98.1661%" y="549" width="1.1383%" height="15" fill="rgb(230,47,54)" fg:x="4657" fg:w="54"/><text x="98.4161%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (54 samples, 1.14%)</title><rect x="98.1661%" y="533" width="1.1383%" height="15" fill="rgb(214,50,8)" fg:x="4657" fg:w="54"/><text x="98.4161%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (54 samples, 1.14%)</title><rect x="98.1661%" y="517" width="1.1383%" height="15" fill="rgb(216,198,43)" fg:x="4657" fg:w="54"/><text x="98.4161%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (54 samples, 1.14%)</title><rect x="98.1661%" y="501" width="1.1383%" height="15" fill="rgb(234,20,35)" fg:x="4657" fg:w="54"/><text x="98.4161%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (51 samples, 1.08%)</title><rect x="98.2293%" y="485" width="1.0750%" height="15" fill="rgb(254,45,19)" fg:x="4660" fg:w="51"/><text x="98.4793%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (51 samples, 1.08%)</title><rect x="98.2293%" y="469" width="1.0750%" height="15" fill="rgb(219,14,44)" fg:x="4660" fg:w="51"/><text x="98.4793%" y="479.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.02%)</title><rect x="99.3044%" y="501" width="0.0211%" height="15" fill="rgb(217,220,26)" fg:x="4711" fg:w="1"/><text x="99.5544%" y="511.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (1 samples, 0.02%)</title><rect x="99.3044%" y="485" width="0.0211%" height="15" fill="rgb(213,158,28)" fg:x="4711" fg:w="1"/><text x="99.5544%" y="495.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (1 samples, 0.02%)</title><rect x="99.3044%" y="469" width="0.0211%" height="15" fill="rgb(252,51,52)" fg:x="4711" fg:w="1"/><text x="99.5544%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="99.3255%" y="485" width="0.0211%" height="15" fill="rgb(246,89,16)" fg:x="4712" fg:w="1"/><text x="99.5755%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="99.3255%" y="469" width="0.0211%" height="15" fill="rgb(216,158,49)" fg:x="4712" fg:w="1"/><text x="99.5755%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.04%)</title><rect x="99.3255%" y="501" width="0.0422%" height="15" fill="rgb(236,107,19)" fg:x="4712" fg:w="2"/><text x="99.5755%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (4 samples, 0.08%)</title><rect x="99.3044%" y="549" width="0.0843%" height="15" fill="rgb(228,185,30)" fg:x="4711" fg:w="4"/><text x="99.5544%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (4 samples, 0.08%)</title><rect x="99.3044%" y="533" width="0.0843%" height="15" fill="rgb(246,134,8)" fg:x="4711" fg:w="4"/><text x="99.5544%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.08%)</title><rect x="99.3044%" y="517" width="0.0843%" height="15" fill="rgb(214,143,50)" fg:x="4711" fg:w="4"/><text x="99.5544%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr_and_cap (1 samples, 0.02%)</title><rect x="99.3676%" y="501" width="0.0211%" height="15" fill="rgb(228,75,8)" fg:x="4714" fg:w="1"/><text x="99.6176%" y="511.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::new_unchecked (1 samples, 0.02%)</title><rect x="99.3676%" y="485" width="0.0211%" height="15" fill="rgb(207,175,4)" fg:x="4714" fg:w="1"/><text x="99.6176%" y="495.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.02%)</title><rect x="99.3887%" y="533" width="0.0211%" height="15" fill="rgb(205,108,24)" fg:x="4715" fg:w="1"/><text x="99.6387%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (3 samples, 0.06%)</title><rect x="99.3887%" y="549" width="0.0632%" height="15" fill="rgb(244,120,49)" fg:x="4715" fg:w="3"/><text x="99.6387%" y="559.50"></text></g><g><title>scheduler::slot_generator::slot_generator (64 samples, 1.35%)</title><rect x="98.1239%" y="565" width="1.3491%" height="15" fill="rgb(223,47,38)" fg:x="4655" fg:w="64"/><text x="98.3739%" y="575.50"></text></g><g><title>time::duration::Duration::seconds (1 samples, 0.02%)</title><rect x="99.4730%" y="501" width="0.0211%" height="15" fill="rgb(229,179,11)" fg:x="4719" fg:w="1"/><text x="99.7230%" y="511.50"></text></g><g><title>core::cmp::PartialOrd::gt (1 samples, 0.02%)</title><rect x="99.4730%" y="485" width="0.0211%" height="15" fill="rgb(231,122,1)" fg:x="4719" fg:w="1"/><text x="99.7230%" y="495.50"></text></g><g><title>&lt;time::duration::Duration as core::cmp::PartialOrd&gt;::partial_cmp (1 samples, 0.02%)</title><rect x="99.4730%" y="469" width="0.0211%" height="15" fill="rgb(245,119,9)" fg:x="4719" fg:w="1"/><text x="99.7230%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i64&gt;::partial_cmp (1 samples, 0.02%)</title><rect x="99.4730%" y="453" width="0.0211%" height="15" fill="rgb(241,163,25)" fg:x="4719" fg:w="1"/><text x="99.7230%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (1 samples, 0.02%)</title><rect x="99.4730%" y="437" width="0.0211%" height="15" fill="rgb(217,214,3)" fg:x="4719" fg:w="1"/><text x="99.7230%" y="447.50"></text></g><g><title>chrono::naive::time::NaiveTime::signed_duration_since (2 samples, 0.04%)</title><rect x="99.4730%" y="517" width="0.0422%" height="15" fill="rgb(240,86,28)" fg:x="4719" fg:w="2"/><text x="99.7230%" y="527.50"></text></g><g><title>time::duration::Duration::nanoseconds (1 samples, 0.02%)</title><rect x="99.4941%" y="501" width="0.0211%" height="15" fill="rgb(215,47,9)" fg:x="4720" fg:w="1"/><text x="99.7441%" y="511.50"></text></g><g><title>time::duration::Duration::days (1 samples, 0.02%)</title><rect x="99.5152%" y="501" width="0.0211%" height="15" fill="rgb(252,25,45)" fg:x="4721" fg:w="1"/><text x="99.7652%" y="511.50"></text></g><g><title>time::duration::Duration::seconds (1 samples, 0.02%)</title><rect x="99.5152%" y="485" width="0.0211%" height="15" fill="rgb(251,164,9)" fg:x="4721" fg:w="1"/><text x="99.7652%" y="495.50"></text></g><g><title>core::cmp::PartialOrd::gt (1 samples, 0.02%)</title><rect x="99.5152%" y="469" width="0.0211%" height="15" fill="rgb(233,194,0)" fg:x="4721" fg:w="1"/><text x="99.7652%" y="479.50"></text></g><g><title>&lt;time::duration::Duration as core::cmp::PartialOrd&gt;::partial_cmp (1 samples, 0.02%)</title><rect x="99.5152%" y="453" width="0.0211%" height="15" fill="rgb(249,111,24)" fg:x="4721" fg:w="1"/><text x="99.7652%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i64&gt;::partial_cmp (1 samples, 0.02%)</title><rect x="99.5152%" y="437" width="0.0211%" height="15" fill="rgb(250,223,3)" fg:x="4721" fg:w="1"/><text x="99.7652%" y="447.50"></text></g><g><title>chrono::naive::datetime::NaiveDateTime::signed_duration_since (4 samples, 0.08%)</title><rect x="99.4730%" y="533" width="0.0843%" height="15" fill="rgb(236,178,37)" fg:x="4719" fg:w="4"/><text x="99.7230%" y="543.50"></text></g><g><title>chrono::naive::date::NaiveDate::signed_duration_since (2 samples, 0.04%)</title><rect x="99.5152%" y="517" width="0.0422%" height="15" fill="rgb(241,158,50)" fg:x="4721" fg:w="2"/><text x="99.7652%" y="527.50"></text></g><g><title>num_integer::div_mod_floor (1 samples, 0.02%)</title><rect x="99.5363%" y="501" width="0.0211%" height="15" fill="rgb(213,121,41)" fg:x="4722" fg:w="1"/><text x="99.7863%" y="511.50"></text></g><g><title>scheduler::slot::Slot::num_hours (5 samples, 0.11%)</title><rect x="99.4730%" y="565" width="0.1054%" height="15" fill="rgb(240,92,3)" fg:x="4719" fg:w="5"/><text x="99.7230%" y="575.50"></text></g><g><title>&lt;chrono::naive::datetime::NaiveDateTime as core::ops::arith::Sub&gt;::sub (5 samples, 0.11%)</title><rect x="99.4730%" y="549" width="0.1054%" height="15" fill="rgb(205,123,3)" fg:x="4719" fg:w="5"/><text x="99.7230%" y="559.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="99.5784%" y="549" width="0.0211%" height="15" fill="rgb(205,97,47)" fg:x="4724" fg:w="1"/><text x="99.8284%" y="559.50"></text></g><g><title>__memcpy_ssse3_back (1 samples, 0.02%)</title><rect x="99.5784%" y="533" width="0.0211%" height="15" fill="rgb(247,152,14)" fg:x="4724" fg:w="1"/><text x="99.8284%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.04%)</title><rect x="99.5784%" y="565" width="0.0422%" height="15" fill="rgb(248,195,53)" fg:x="4724" fg:w="2"/><text x="99.8284%" y="575.50"></text></g><g><title>__memcpy_ssse3_back (1 samples, 0.02%)</title><rect x="99.5995%" y="549" width="0.0211%" height="15" fill="rgb(226,201,16)" fg:x="4725" fg:w="1"/><text x="99.8495%" y="559.50"></text></g><g><title>&lt;chrono::naive::datetime::NaiveDateTime as core::ops::arith::Add&lt;time::duration::Duration&gt;&gt;::add (1 samples, 0.02%)</title><rect x="99.6206%" y="549" width="0.0211%" height="15" fill="rgb(205,98,0)" fg:x="4726" fg:w="1"/><text x="99.8706%" y="559.50"></text></g><g><title>chrono::naive::datetime::NaiveDateTime::checked_add_signed (1 samples, 0.02%)</title><rect x="99.6206%" y="533" width="0.0211%" height="15" fill="rgb(214,191,48)" fg:x="4726" fg:w="1"/><text x="99.8706%" y="543.50"></text></g><g><title>chrono::naive::date::NaiveDate::checked_add_signed (1 samples, 0.02%)</title><rect x="99.6206%" y="517" width="0.0211%" height="15" fill="rgb(237,112,39)" fg:x="4726" fg:w="1"/><text x="99.8706%" y="527.50"></text></g><g><title>chrono::naive::internals::cycle_to_yo (1 samples, 0.02%)</title><rect x="99.6206%" y="501" width="0.0211%" height="15" fill="rgb(247,203,27)" fg:x="4726" fg:w="1"/><text x="99.8706%" y="511.50"></text></g><g><title>num_integer::div_rem (1 samples, 0.02%)</title><rect x="99.6206%" y="485" width="0.0211%" height="15" fill="rgb(235,124,28)" fg:x="4726" fg:w="1"/><text x="99.8706%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="99.6417%" y="549" width="0.0211%" height="15" fill="rgb(208,207,46)" fg:x="4727" fg:w="1"/><text x="99.8917%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::ops::index::Index&lt;core::ops::range::RangeFull&gt;&gt;::index (1 samples, 0.02%)</title><rect x="99.6417%" y="533" width="0.0211%" height="15" fill="rgb(234,176,4)" fg:x="4727" fg:w="1"/><text x="99.8917%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.02%)</title><rect x="99.6417%" y="517" width="0.0211%" height="15" fill="rgb(230,133,28)" fg:x="4727" fg:w="1"/><text x="99.8917%" y="527.50"></text></g><g><title>core::slice::raw::from_raw_parts (1 samples, 0.02%)</title><rect x="99.6417%" y="501" width="0.0211%" height="15" fill="rgb(211,137,40)" fg:x="4727" fg:w="1"/><text x="99.8917%" y="511.50"></text></g><g><title>core::ptr::slice_from_raw_parts (1 samples, 0.02%)</title><rect x="99.6417%" y="485" width="0.0211%" height="15" fill="rgb(254,35,13)" fg:x="4727" fg:w="1"/><text x="99.8917%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::cast (1 samples, 0.02%)</title><rect x="99.6417%" y="469" width="0.0211%" height="15" fill="rgb(225,49,51)" fg:x="4727" fg:w="1"/><text x="99.8917%" y="479.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.02%)</title><rect x="99.6627%" y="373" width="0.0211%" height="15" fill="rgb(251,10,15)" fg:x="4728" fg:w="1"/><text x="99.9127%" y="383.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.02%)</title><rect x="99.6627%" y="357" width="0.0211%" height="15" fill="rgb(228,207,15)" fg:x="4728" fg:w="1"/><text x="99.9127%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="99.6838%" y="373" width="0.0211%" height="15" fill="rgb(241,99,19)" fg:x="4729" fg:w="1"/><text x="99.9338%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="99.6838%" y="357" width="0.0211%" height="15" fill="rgb(207,104,49)" fg:x="4729" fg:w="1"/><text x="99.9338%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="99.6838%" y="341" width="0.0211%" height="15" fill="rgb(234,99,18)" fg:x="4729" fg:w="1"/><text x="99.9338%" y="351.50"></text></g><g><title>&lt;scheduler::time_slot_iterator::TimeSlotsIterator as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.11%)</title><rect x="99.6206%" y="565" width="0.1054%" height="15" fill="rgb(213,191,49)" fg:x="4726" fg:w="5"/><text x="99.8706%" y="575.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (3 samples, 0.06%)</title><rect x="99.6627%" y="549" width="0.0632%" height="15" fill="rgb(210,226,19)" fg:x="4728" fg:w="3"/><text x="99.9127%" y="559.50"></text></g><g><title>&lt;chrono::weekday::Weekday as core::fmt::Display&gt;::fmt (3 samples, 0.06%)</title><rect x="99.6627%" y="533" width="0.0632%" height="15" fill="rgb(229,97,18)" fg:x="4728" fg:w="3"/><text x="99.9127%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.06%)</title><rect x="99.6627%" y="517" width="0.0632%" height="15" fill="rgb(211,167,15)" fg:x="4728" fg:w="3"/><text x="99.9127%" y="527.50"></text></g><g><title>alloc::string::String::push_str (3 samples, 0.06%)</title><rect x="99.6627%" y="501" width="0.0632%" height="15" fill="rgb(210,169,34)" fg:x="4728" fg:w="3"/><text x="99.9127%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (3 samples, 0.06%)</title><rect x="99.6627%" y="485" width="0.0632%" height="15" fill="rgb(241,121,31)" fg:x="4728" fg:w="3"/><text x="99.9127%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3 samples, 0.06%)</title><rect x="99.6627%" y="469" width="0.0632%" height="15" fill="rgb(232,40,11)" fg:x="4728" fg:w="3"/><text x="99.9127%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (3 samples, 0.06%)</title><rect x="99.6627%" y="453" width="0.0632%" height="15" fill="rgb(205,86,26)" fg:x="4728" fg:w="3"/><text x="99.9127%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3 samples, 0.06%)</title><rect x="99.6627%" y="437" width="0.0632%" height="15" fill="rgb(231,126,28)" fg:x="4728" fg:w="3"/><text x="99.9127%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.06%)</title><rect x="99.6627%" y="421" width="0.0632%" height="15" fill="rgb(219,221,18)" fg:x="4728" fg:w="3"/><text x="99.9127%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.06%)</title><rect x="99.6627%" y="405" width="0.0632%" height="15" fill="rgb(211,40,0)" fg:x="4728" fg:w="3"/><text x="99.9127%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.06%)</title><rect x="99.6627%" y="389" width="0.0632%" height="15" fill="rgb(239,85,43)" fg:x="4728" fg:w="3"/><text x="99.9127%" y="399.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (1 samples, 0.02%)</title><rect x="99.7260%" y="549" width="0.0211%" height="15" fill="rgb(231,55,21)" fg:x="4731" fg:w="1"/><text x="99.9760%" y="559.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.02%)</title><rect x="99.7260%" y="533" width="0.0211%" height="15" fill="rgb(225,184,43)" fg:x="4731" fg:w="1"/><text x="99.9760%" y="543.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (1 samples, 0.02%)</title><rect x="99.7260%" y="517" width="0.0211%" height="15" fill="rgb(251,158,41)" fg:x="4731" fg:w="1"/><text x="99.9760%" y="527.50"></text></g><g><title>scheduler::goal::Goal::generate_tasks (79 samples, 1.67%)</title><rect x="98.1029%" y="581" width="1.6653%" height="15" fill="rgb(234,159,37)" fg:x="4654" fg:w="79"/><text x="98.3529%" y="591.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (2 samples, 0.04%)</title><rect x="99.7260%" y="565" width="0.0422%" height="15" fill="rgb(216,204,22)" fg:x="4731" fg:w="2"/><text x="99.9760%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.02%)</title><rect x="99.7470%" y="549" width="0.0211%" height="15" fill="rgb(214,17,3)" fg:x="4732" fg:w="1"/><text x="99.9970%" y="559.50"></text></g><g><title>core::slice::raw::from_raw_parts (1 samples, 0.02%)</title><rect x="99.7470%" y="533" width="0.0211%" height="15" fill="rgb(212,111,17)" fg:x="4732" fg:w="1"/><text x="99.9970%" y="543.50"></text></g><g><title>core::ptr::slice_from_raw_parts (1 samples, 0.02%)</title><rect x="99.7470%" y="517" width="0.0211%" height="15" fill="rgb(221,157,24)" fg:x="4732" fg:w="1"/><text x="99.9970%" y="527.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (1 samples, 0.02%)</title><rect x="99.7470%" y="501" width="0.0211%" height="15" fill="rgb(252,16,13)" fg:x="4732" fg:w="1"/><text x="99.9970%" y="511.50"></text></g><g><title>scheduler::task_generator::task_generator (80 samples, 1.69%)</title><rect x="98.1029%" y="597" width="1.6863%" height="15" fill="rgb(221,62,2)" fg:x="4654" fg:w="80"/><text x="98.3529%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.02%)</title><rect x="99.7681%" y="581" width="0.0211%" height="15" fill="rgb(247,87,22)" fg:x="4733" fg:w="1"/><text x="100.0181%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,alloc::vec::into_iter::IntoIter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.02%)</title><rect x="99.7681%" y="565" width="0.0211%" height="15" fill="rgb(215,73,9)" fg:x="4733" fg:w="1"/><text x="100.0181%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.02%)</title><rect x="99.7681%" y="549" width="0.0211%" height="15" fill="rgb(207,175,33)" fg:x="4733" fg:w="1"/><text x="100.0181%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="99.7681%" y="533" width="0.0211%" height="15" fill="rgb(243,129,54)" fg:x="4733" fg:w="1"/><text x="100.0181%" y="543.50"></text></g><g><title>__memcpy_ssse3_back (1 samples, 0.02%)</title><rect x="99.7681%" y="517" width="0.0211%" height="15" fill="rgb(227,119,45)" fg:x="4733" fg:w="1"/><text x="100.0181%" y="527.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="99.7681%" y="501" width="0.0211%" height="15" fill="rgb(205,109,36)" fg:x="4733" fg:w="1"/><text x="100.0181%" y="511.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="99.7681%" y="485" width="0.0211%" height="15" fill="rgb(205,6,39)" fg:x="4733" fg:w="1"/><text x="100.0181%" y="495.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="99.7681%" y="469" width="0.0211%" height="15" fill="rgb(221,32,16)" fg:x="4733" fg:w="1"/><text x="100.0181%" y="479.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="99.7681%" y="453" width="0.0211%" height="15" fill="rgb(228,144,50)" fg:x="4733" fg:w="1"/><text x="100.0181%" y="463.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="99.7681%" y="437" width="0.0211%" height="15" fill="rgb(229,201,53)" fg:x="4733" fg:w="1"/><text x="100.0181%" y="447.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="99.7681%" y="421" width="0.0211%" height="15" fill="rgb(249,153,27)" fg:x="4733" fg:w="1"/><text x="100.0181%" y="431.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="99.7681%" y="405" width="0.0211%" height="15" fill="rgb(227,106,25)" fg:x="4733" fg:w="1"/><text x="100.0181%" y="415.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="99.7681%" y="389" width="0.0211%" height="15" fill="rgb(230,65,29)" fg:x="4733" fg:w="1"/><text x="100.0181%" y="399.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="99.7681%" y="373" width="0.0211%" height="15" fill="rgb(221,57,46)" fg:x="4733" fg:w="1"/><text x="100.0181%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;scheduler::task::Task&gt; (1 samples, 0.02%)</title><rect x="99.7892%" y="581" width="0.0211%" height="15" fill="rgb(229,161,17)" fg:x="4734" fg:w="1"/><text x="100.0392%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(scheduler::slot::Slot,alloc::string::String)&gt;&gt; (1 samples, 0.02%)</title><rect x="99.7892%" y="565" width="0.0211%" height="15" fill="rgb(222,213,11)" fg:x="4734" fg:w="1"/><text x="100.0392%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(scheduler::slot::Slot,alloc::string::String)&gt;&gt; (1 samples, 0.02%)</title><rect x="99.7892%" y="549" width="0.0211%" height="15" fill="rgb(235,35,13)" fg:x="4734" fg:w="1"/><text x="100.0392%" y="559.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="99.7892%" y="533" width="0.0211%" height="15" fill="rgb(233,158,34)" fg:x="4734" fg:w="1"/><text x="100.0392%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort (1 samples, 0.02%)</title><rect x="99.8103%" y="581" width="0.0211%" height="15" fill="rgb(215,151,48)" fg:x="4735" fg:w="1"/><text x="100.0603%" y="591.50"></text></g><g><title>alloc::slice::merge_sort (1 samples, 0.02%)</title><rect x="99.8103%" y="565" width="0.0211%" height="15" fill="rgb(229,84,14)" fg:x="4735" fg:w="1"/><text x="100.0603%" y="575.50"></text></g><g><title>alloc::slice::merge (1 samples, 0.02%)</title><rect x="99.8103%" y="549" width="0.0211%" height="15" fill="rgb(229,68,14)" fg:x="4735" fg:w="1"/><text x="100.0603%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort::{{closure}} (1 samples, 0.02%)</title><rect x="99.8103%" y="533" width="0.0211%" height="15" fill="rgb(243,106,26)" fg:x="4735" fg:w="1"/><text x="100.0603%" y="543.50"></text></g><g><title>core::cmp::PartialOrd::lt (1 samples, 0.02%)</title><rect x="99.8103%" y="517" width="0.0211%" height="15" fill="rgb(206,45,38)" fg:x="4735" fg:w="1"/><text x="100.0603%" y="527.50"></text></g><g><title>&lt;scheduler::output_formatter::Output as core::cmp::PartialOrd&gt;::partial_cmp (1 samples, 0.02%)</title><rect x="99.8103%" y="501" width="0.0211%" height="15" fill="rgb(226,6,15)" fg:x="4735" fg:w="1"/><text x="100.0603%" y="511.50"></text></g><g><title>&lt;scheduler::output_formatter::Output as core::cmp::Ord&gt;::cmp (1 samples, 0.02%)</title><rect x="99.8103%" y="485" width="0.0211%" height="15" fill="rgb(232,22,54)" fg:x="4735" fg:w="1"/><text x="100.0603%" y="495.50"></text></g><g><title>&lt;chrono::naive::datetime::NaiveDateTime as core::cmp::Ord&gt;::cmp (1 samples, 0.02%)</title><rect x="99.8103%" y="469" width="0.0211%" height="15" fill="rgb(229,222,32)" fg:x="4735" fg:w="1"/><text x="100.0603%" y="479.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="99.8314%" y="581" width="0.0211%" height="15" fill="rgb(228,62,29)" fg:x="4736" fg:w="1"/><text x="100.0814%" y="591.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.02%)</title><rect x="99.8314%" y="565" width="0.0211%" height="15" fill="rgb(251,103,34)" fg:x="4736" fg:w="1"/><text x="100.0814%" y="575.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.02%)</title><rect x="99.8314%" y="549" width="0.0211%" height="15" fill="rgb(233,12,30)" fg:x="4736" fg:w="1"/><text x="100.0814%" y="559.50"></text></g><g><title>scheduler::run_scheduler (4,730 samples, 99.70%)</title><rect x="0.1686%" y="613" width="99.7049%" height="15" fill="rgb(238,52,0)" fg:x="8" fg:w="4730"/><text x="0.4186%" y="623.50">scheduler::run_scheduler</text></g><g><title>scheduler::output_formatter::output_formatter (4 samples, 0.08%)</title><rect x="99.7892%" y="597" width="0.0843%" height="15" fill="rgb(223,98,5)" fg:x="4734" fg:w="4"/><text x="100.0392%" y="607.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="99.8524%" y="581" width="0.0211%" height="15" fill="rgb(228,75,37)" fg:x="4737" fg:w="1"/><text x="100.1024%" y="591.50"></text></g><g><title>__memcpy_ssse3_back (1 samples, 0.02%)</title><rect x="99.8524%" y="565" width="0.0211%" height="15" fill="rgb(205,115,49)" fg:x="4737" fg:w="1"/><text x="100.1024%" y="575.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_whitespace (1 samples, 0.02%)</title><rect x="99.8735%" y="293" width="0.0211%" height="15" fill="rgb(250,154,43)" fg:x="4738" fg:w="1"/><text x="100.1235%" y="303.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::peek (1 samples, 0.02%)</title><rect x="99.8735%" y="277" width="0.0211%" height="15" fill="rgb(226,43,29)" fg:x="4738" fg:w="1"/><text x="100.1235%" y="287.50"></text></g><g><title>&lt;serde_json::read::IoRead&lt;R&gt; as serde_json::read::Read&gt;::peek (1 samples, 0.02%)</title><rect x="99.8735%" y="261" width="0.0211%" height="15" fill="rgb(249,228,39)" fg:x="4738" fg:w="1"/><text x="100.1235%" y="271.50"></text></g><g><title>&lt;serde_json::iter::LineColIterator&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="99.8735%" y="245" width="0.0211%" height="15" fill="rgb(216,79,43)" fg:x="4738" fg:w="1"/><text x="100.1235%" y="255.50"></text></g><g><title>&lt;std::io::Bytes&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="99.8735%" y="229" width="0.0211%" height="15" fill="rgb(228,95,12)" fg:x="4738" fg:w="1"/><text x="100.1235%" y="239.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read (1 samples, 0.02%)</title><rect x="99.8735%" y="213" width="0.0211%" height="15" fill="rgb(249,221,15)" fg:x="4738" fg:w="1"/><text x="100.1235%" y="223.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::BufRead&gt;::consume (1 samples, 0.02%)</title><rect x="99.8735%" y="197" width="0.0211%" height="15" fill="rgb(233,34,13)" fg:x="4738" fg:w="1"/><text x="100.1235%" y="207.50"></text></g><g><title>std::io::buffered::bufreader::buffer::Buffer::consume (1 samples, 0.02%)</title><rect x="99.8735%" y="181" width="0.0211%" height="15" fill="rgb(214,103,39)" fg:x="4738" fg:w="1"/><text x="100.1235%" y="191.50"></text></g><g><title>core::cmp::min (1 samples, 0.02%)</title><rect x="99.8735%" y="165" width="0.0211%" height="15" fill="rgb(251,126,39)" fg:x="4738" fg:w="1"/><text x="100.1235%" y="175.50"></text></g><g><title>core::cmp::Ord::min (1 samples, 0.02%)</title><rect x="99.8735%" y="149" width="0.0211%" height="15" fill="rgb(214,216,36)" fg:x="4738" fg:w="1"/><text x="100.1235%" y="159.50"></text></g><g><title>_start (4,733 samples, 99.77%)</title><rect x="0.1476%" y="885" width="99.7681%" height="15" fill="rgb(220,221,8)" fg:x="7" fg:w="4733"/><text x="0.3976%" y="895.50">_start</text></g><g><title>__libc_start_main (4,732 samples, 99.75%)</title><rect x="0.1686%" y="869" width="99.7470%" height="15" fill="rgb(240,216,3)" fg:x="8" fg:w="4732"/><text x="0.4186%" y="879.50">__libc_start_main</text></g><g><title>main (4,732 samples, 99.75%)</title><rect x="0.1686%" y="853" width="99.7470%" height="15" fill="rgb(232,218,17)" fg:x="8" fg:w="4732"/><text x="0.4186%" y="863.50">main</text></g><g><title>std::rt::lang_start (4,732 samples, 99.75%)</title><rect x="0.1686%" y="837" width="99.7470%" height="15" fill="rgb(229,163,45)" fg:x="8" fg:w="4732"/><text x="0.4186%" y="847.50">std::rt::lang_start</text></g><g><title>std::rt::lang_start_internal (4,732 samples, 99.75%)</title><rect x="0.1686%" y="821" width="99.7470%" height="15" fill="rgb(231,110,42)" fg:x="8" fg:w="4732"/><text x="0.4186%" y="831.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (4,732 samples, 99.75%)</title><rect x="0.1686%" y="805" width="99.7470%" height="15" fill="rgb(208,170,48)" fg:x="8" fg:w="4732"/><text x="0.4186%" y="815.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (4,732 samples, 99.75%)</title><rect x="0.1686%" y="789" width="99.7470%" height="15" fill="rgb(239,116,25)" fg:x="8" fg:w="4732"/><text x="0.4186%" y="799.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (4,732 samples, 99.75%)</title><rect x="0.1686%" y="773" width="99.7470%" height="15" fill="rgb(219,200,50)" fg:x="8" fg:w="4732"/><text x="0.4186%" y="783.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (4,732 samples, 99.75%)</title><rect x="0.1686%" y="757" width="99.7470%" height="15" fill="rgb(245,200,0)" fg:x="8" fg:w="4732"/><text x="0.4186%" y="767.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (4,732 samples, 99.75%)</title><rect x="0.1686%" y="741" width="99.7470%" height="15" fill="rgb(245,119,33)" fg:x="8" fg:w="4732"/><text x="0.4186%" y="751.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (4,732 samples, 99.75%)</title><rect x="0.1686%" y="725" width="99.7470%" height="15" fill="rgb(231,125,12)" fg:x="8" fg:w="4732"/><text x="0.4186%" y="735.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (4,732 samples, 99.75%)</title><rect x="0.1686%" y="709" width="99.7470%" height="15" fill="rgb(216,96,41)" fg:x="8" fg:w="4732"/><text x="0.4186%" y="719.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (4,732 samples, 99.75%)</title><rect x="0.1686%" y="693" width="99.7470%" height="15" fill="rgb(248,43,45)" fg:x="8" fg:w="4732"/><text x="0.4186%" y="703.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (4,732 samples, 99.75%)</title><rect x="0.1686%" y="677" width="99.7470%" height="15" fill="rgb(217,222,7)" fg:x="8" fg:w="4732"/><text x="0.4186%" y="687.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (4,732 samples, 99.75%)</title><rect x="0.1686%" y="661" width="99.7470%" height="15" fill="rgb(233,28,6)" fg:x="8" fg:w="4732"/><text x="0.4186%" y="671.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (4,732 samples, 99.75%)</title><rect x="0.1686%" y="645" width="99.7470%" height="15" fill="rgb(231,218,15)" fg:x="8" fg:w="4732"/><text x="0.4186%" y="655.50">core::ops::function::FnOnce::call_once</text></g><g><title>main::main (4,732 samples, 99.75%)</title><rect x="0.1686%" y="629" width="99.7470%" height="15" fill="rgb(226,171,48)" fg:x="8" fg:w="4732"/><text x="0.4186%" y="639.50">main::main</text></g><g><title>main::get_input_from_json (2 samples, 0.04%)</title><rect x="99.8735%" y="613" width="0.0422%" height="15" fill="rgb(235,201,9)" fg:x="4738" fg:w="2"/><text x="100.1235%" y="623.50"></text></g><g><title>serde_json::de::from_reader (2 samples, 0.04%)</title><rect x="99.8735%" y="597" width="0.0422%" height="15" fill="rgb(217,80,15)" fg:x="4738" fg:w="2"/><text x="100.1235%" y="607.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.04%)</title><rect x="99.8735%" y="581" width="0.0422%" height="15" fill="rgb(219,152,8)" fg:x="4738" fg:w="2"/><text x="100.1235%" y="591.50"></text></g><g><title>scheduler::input::_::&lt;impl serde::de::Deserialize for scheduler::input::Input&gt;::deserialize (2 samples, 0.04%)</title><rect x="99.8735%" y="565" width="0.0422%" height="15" fill="rgb(243,107,38)" fg:x="4738" fg:w="2"/><text x="100.1235%" y="575.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (2 samples, 0.04%)</title><rect x="99.8735%" y="549" width="0.0422%" height="15" fill="rgb(231,17,5)" fg:x="4738" fg:w="2"/><text x="100.1235%" y="559.50"></text></g><g><title>&lt;scheduler::input::_::&lt;impl serde::de::Deserialize for scheduler::input::Input&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.04%)</title><rect x="99.8735%" y="533" width="0.0422%" height="15" fill="rgb(209,25,54)" fg:x="4738" fg:w="2"/><text x="100.1235%" y="543.50"></text></g><g><title>serde::de::MapAccess::next_value (2 samples, 0.04%)</title><rect x="99.8735%" y="517" width="0.0422%" height="15" fill="rgb(219,0,2)" fg:x="4738" fg:w="2"/><text x="100.1235%" y="527.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.04%)</title><rect x="99.8735%" y="501" width="0.0422%" height="15" fill="rgb(246,9,5)" fg:x="4738" fg:w="2"/><text x="100.1235%" y="511.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.04%)</title><rect x="99.8735%" y="485" width="0.0422%" height="15" fill="rgb(226,159,4)" fg:x="4738" fg:w="2"/><text x="100.1235%" y="495.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (2 samples, 0.04%)</title><rect x="99.8735%" y="469" width="0.0422%" height="15" fill="rgb(219,175,34)" fg:x="4738" fg:w="2"/><text x="100.1235%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (2 samples, 0.04%)</title><rect x="99.8735%" y="453" width="0.0422%" height="15" fill="rgb(236,10,46)" fg:x="4738" fg:w="2"/><text x="100.1235%" y="463.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.04%)</title><rect x="99.8735%" y="437" width="0.0422%" height="15" fill="rgb(240,211,16)" fg:x="4738" fg:w="2"/><text x="100.1235%" y="447.50"></text></g><g><title>serde::de::SeqAccess::next_element (2 samples, 0.04%)</title><rect x="99.8735%" y="421" width="0.0422%" height="15" fill="rgb(205,3,43)" fg:x="4738" fg:w="2"/><text x="100.1235%" y="431.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (2 samples, 0.04%)</title><rect x="99.8735%" y="405" width="0.0422%" height="15" fill="rgb(245,7,22)" fg:x="4738" fg:w="2"/><text x="100.1235%" y="415.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.04%)</title><rect x="99.8735%" y="389" width="0.0422%" height="15" fill="rgb(239,132,32)" fg:x="4738" fg:w="2"/><text x="100.1235%" y="399.50"></text></g><g><title>scheduler::goal::_::&lt;impl serde::de::Deserialize for scheduler::goal::Goal&gt;::deserialize (2 samples, 0.04%)</title><rect x="99.8735%" y="373" width="0.0422%" height="15" fill="rgb(228,202,34)" fg:x="4738" fg:w="2"/><text x="100.1235%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (2 samples, 0.04%)</title><rect x="99.8735%" y="357" width="0.0422%" height="15" fill="rgb(254,200,22)" fg:x="4738" fg:w="2"/><text x="100.1235%" y="367.50"></text></g><g><title>&lt;scheduler::goal::_::&lt;impl serde::de::Deserialize for scheduler::goal::Goal&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.04%)</title><rect x="99.8735%" y="341" width="0.0422%" height="15" fill="rgb(219,10,39)" fg:x="4738" fg:w="2"/><text x="100.1235%" y="351.50"></text></g><g><title>serde::de::MapAccess::next_key (2 samples, 0.04%)</title><rect x="99.8735%" y="325" width="0.0422%" height="15" fill="rgb(226,210,39)" fg:x="4738" fg:w="2"/><text x="100.1235%" y="335.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.04%)</title><rect x="99.8735%" y="309" width="0.0422%" height="15" fill="rgb(208,219,16)" fg:x="4738" fg:w="2"/><text x="100.1235%" y="319.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.02%)</title><rect x="99.8946%" y="293" width="0.0211%" height="15" fill="rgb(216,158,51)" fg:x="4739" fg:w="1"/><text x="100.1446%" y="303.50"></text></g><g><title>&lt;scheduler::goal::_::&lt;impl serde::de::Deserialize for scheduler::goal::Goal&gt;::deserialize::__Field as serde::de::Deserialize&gt;::deserialize (1 samples, 0.02%)</title><rect x="99.8946%" y="277" width="0.0211%" height="15" fill="rgb(233,14,44)" fg:x="4739" fg:w="1"/><text x="100.1446%" y="287.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_identifier (1 samples, 0.02%)</title><rect x="99.8946%" y="261" width="0.0211%" height="15" fill="rgb(237,97,39)" fg:x="4739" fg:w="1"/><text x="100.1446%" y="271.50"></text></g><g><title>&lt;serde_json::de::MapKey&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.02%)</title><rect x="99.8946%" y="245" width="0.0211%" height="15" fill="rgb(218,198,43)" fg:x="4739" fg:w="1"/><text x="100.1446%" y="255.50"></text></g><g><title>&lt;serde_json::read::IoRead&lt;R&gt; as serde_json::read::Read&gt;::parse_str (1 samples, 0.02%)</title><rect x="99.8946%" y="229" width="0.0211%" height="15" fill="rgb(231,104,20)" fg:x="4739" fg:w="1"/><text x="100.1446%" y="239.50"></text></g><g><title>serde_json::read::IoRead&lt;R&gt;::parse_str_bytes (1 samples, 0.02%)</title><rect x="99.8946%" y="213" width="0.0211%" height="15" fill="rgb(254,36,13)" fg:x="4739" fg:w="1"/><text x="100.1446%" y="223.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.02%)</title><rect x="99.8946%" y="197" width="0.0211%" height="15" fill="rgb(248,14,50)" fg:x="4739" fg:w="1"/><text x="100.1446%" y="207.50"></text></g><g><title>serde_json::read::as_str (1 samples, 0.02%)</title><rect x="99.8946%" y="181" width="0.0211%" height="15" fill="rgb(217,107,29)" fg:x="4739" fg:w="1"/><text x="100.1446%" y="191.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::or_else (1 samples, 0.02%)</title><rect x="99.8946%" y="165" width="0.0211%" height="15" fill="rgb(251,169,33)" fg:x="4739" fg:w="1"/><text x="100.1446%" y="175.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.02%)</title><rect x="99.9157%" y="869" width="0.0211%" height="15" fill="rgb(217,108,32)" fg:x="4740" fg:w="1"/><text x="100.1657%" y="879.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="99.9157%" y="853" width="0.0211%" height="15" fill="rgb(219,66,42)" fg:x="4740" fg:w="1"/><text x="100.1657%" y="863.50"></text></g><g><title>[[stack]] (2 samples, 0.04%)</title><rect x="99.9157%" y="885" width="0.0422%" height="15" fill="rgb(206,180,7)" fg:x="4740" fg:w="2"/><text x="100.1657%" y="895.50"></text></g><g><title>&lt;time::duration::Duration as core::cmp::PartialOrd&gt;::partial_cmp (1 samples, 0.02%)</title><rect x="99.9368%" y="869" width="0.0211%" height="15" fill="rgb(208,226,31)" fg:x="4741" fg:w="1"/><text x="100.1868%" y="879.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="99.9368%" y="853" width="0.0211%" height="15" fill="rgb(218,26,49)" fg:x="4741" fg:w="1"/><text x="100.1868%" y="863.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="99.9578%" y="885" width="0.0211%" height="15" fill="rgb(233,197,48)" fg:x="4742" fg:w="1"/><text x="100.2078%" y="895.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="99.9578%" y="869" width="0.0211%" height="15" fill="rgb(252,181,51)" fg:x="4742" fg:w="1"/><text x="100.2078%" y="879.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="99.9578%" y="853" width="0.0211%" height="15" fill="rgb(253,90,19)" fg:x="4742" fg:w="1"/><text x="100.2078%" y="863.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="99.9578%" y="837" width="0.0211%" height="15" fill="rgb(215,171,30)" fg:x="4742" fg:w="1"/><text x="100.2078%" y="847.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="99.9578%" y="821" width="0.0211%" height="15" fill="rgb(214,222,9)" fg:x="4742" fg:w="1"/><text x="100.2078%" y="831.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="99.9578%" y="805" width="0.0211%" height="15" fill="rgb(223,3,22)" fg:x="4742" fg:w="1"/><text x="100.2078%" y="815.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="99.9578%" y="789" width="0.0211%" height="15" fill="rgb(225,196,46)" fg:x="4742" fg:w="1"/><text x="100.2078%" y="799.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="99.9578%" y="773" width="0.0211%" height="15" fill="rgb(209,110,37)" fg:x="4742" fg:w="1"/><text x="100.2078%" y="783.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="99.9578%" y="757" width="0.0211%" height="15" fill="rgb(249,89,12)" fg:x="4742" fg:w="1"/><text x="100.2078%" y="767.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="99.9578%" y="741" width="0.0211%" height="15" fill="rgb(226,27,33)" fg:x="4742" fg:w="1"/><text x="100.2078%" y="751.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="99.9578%" y="725" width="0.0211%" height="15" fill="rgb(213,82,22)" fg:x="4742" fg:w="1"/><text x="100.2078%" y="735.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="99.9578%" y="709" width="0.0211%" height="15" fill="rgb(248,140,0)" fg:x="4742" fg:w="1"/><text x="100.2078%" y="719.50"></text></g><g><title>all (4,744 samples, 100%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(228,106,3)" fg:x="0" fg:w="4744"/><text x="0.2500%" y="927.50"></text></g><g><title>main (4,737 samples, 99.85%)</title><rect x="0.1476%" y="901" width="99.8524%" height="15" fill="rgb(209,23,37)" fg:x="7" fg:w="4737"/><text x="0.3976%" y="911.50">main</text></g><g><title>[[heap]] (1 samples, 0.02%)</title><rect x="99.9789%" y="885" width="0.0211%" height="15" fill="rgb(241,93,50)" fg:x="4743" fg:w="1"/><text x="100.2289%" y="895.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (1 samples, 0.02%)</title><rect x="99.9789%" y="869" width="0.0211%" height="15" fill="rgb(253,46,43)" fg:x="4743" fg:w="1"/><text x="100.2289%" y="879.50"></text></g><g><title>[[kernel.kallsyms]] (1 samples, 0.02%)</title><rect x="99.9789%" y="853" width="0.0211%" height="15" fill="rgb(226,206,43)" fg:x="4743" fg:w="1"/><text x="100.2289%" y="863.50"></text></g></svg></svg>